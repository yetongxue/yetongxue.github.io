{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/photos/20180615095642.png","path":"photos/20180615095642.png","modified":1,"renderable":0},{"_id":"source/photos/20180615130801.jpg","path":"photos/20180615130801.jpg","modified":1,"renderable":0},{"_id":"source/photos/20180615111444.png","path":"photos/20180615111444.png","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/favicon.png","path":"favicon.png","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/robots.txt","path":"robots.txt","modified":1,"renderable":1},{"_id":"source/photos/11111116005205.png","path":"photos/11111116005205.png","modified":1,"renderable":0},{"_id":"source/photos/psb.jpg","path":"photos/psb.jpg","modified":1,"renderable":0},{"_id":"source/photos/zhifubao_qrcode.png","path":"photos/zhifubao_qrcode.png","modified":1,"renderable":0},{"_id":"source/photos/weixin_qrcode.png","path":"photos/weixin_qrcode.png","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/prettify.js","path":"js/prettify.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/tagcloud.js","path":"js/tagcloud.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/tagcanvas.js","path":"js/tagcanvas.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/weixin_favicon.png","path":"weixin_favicon.png","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/images/side-user-cover.jpg","path":"css/images/side-user-cover.jpg","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/font-awesome.min.css","path":"css/lib/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/prettify-tomorrow-night-eighties.css","path":"css/lib/prettify-tomorrow-night-eighties.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/jquery.min.js","path":"js/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/js/materialize.min.js","path":"js/materialize.min.js","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/lib/materialize.min.css","path":"css/lib/materialize.min.css","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.eot","path":"css/font/roboto/Roboto-Bold.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff2","path":"css/font/roboto/Roboto-Bold.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.eot","path":"css/font/roboto/Roboto-Light.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff","path":"css/font/roboto/Roboto-Light.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff2","path":"css/font/roboto/Roboto-Light.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.eot","path":"css/font/roboto/Roboto-Medium.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff","path":"css/font/roboto/Roboto-Medium.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff2","path":"css/font/roboto/Roboto-Medium.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.eot","path":"css/font/roboto/Roboto-Regular.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff","path":"css/font/roboto/Roboto-Regular.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff2","path":"css/font/roboto/Roboto-Regular.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.eot","path":"css/font/font-awesome/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff2","path":"css/font/font-awesome/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff","path":"css/font/roboto/Roboto-Bold.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.ttf","path":"css/font/roboto/Roboto-Medium.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/FontAwesome.otf","path":"css/font/font-awesome/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.ttf","path":"css/font/font-awesome/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff","path":"css/font/font-awesome/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.ttf","path":"css/font/roboto/Roboto-Bold.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.ttf","path":"css/font/roboto/Roboto-Light.ttf","modified":1,"renderable":1},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.ttf","path":"css/font/roboto/Roboto-Regular.ttf","modified":1,"renderable":1},{"_id":"source/pic/banner1.png","path":"pic/banner1.png","modified":1,"renderable":0},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.svg","path":"css/font/font-awesome/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/raytaylorism/.gitignore","hash":"cda50c55bb8864e0d96101140b62f880f690da5e","modified":1583923696912},{"_id":"themes/raytaylorism/LICENSE","hash":"115cd028ae511ac9e3d30eb4933da38136a68513","modified":1583923696912},{"_id":"themes/raytaylorism/README.md","hash":"a195db5b7c40e99d4da1fdf252e78c496f51f48e","modified":1583923696913},{"_id":"themes/raytaylorism/_config.yml","hash":"f763deb60192e70b8faeda80b1be10848b174ac5","modified":1583923696913},{"_id":"themes/raytaylorism/log.md","hash":"99d57a50f8f328d1a313b47bb636d0dc5656d813","modified":1583923696937},{"_id":"themes/raytaylorism/Gruntfile.js","hash":"f69b2e716f955c9d5a23ca1b75394098c1494858","modified":1583923696912},{"_id":"source/_data/about.json","hash":"d81555a150fd161737f43a826cbe9c0a5912eea5","modified":1583923696846},{"_id":"source/_data/hint.json","hash":"d0d3a6ac701a4e9ee0adddb7ffe511dc49d954b7","modified":1583923696846},{"_id":"source/_data/link.json","hash":"cc0692ea8fe2e7b421d18203a7df331546cdbaf5","modified":1583923696847},{"_id":"source/_data/reading.json","hash":"e8045e22b2d499a5d813320a8c2b1bccdbedd46d","modified":1583923696847},{"_id":"source/_data/slider.json","hash":"f11b4b53b6cabdac09065816e91289b37cc54114","modified":1583923696848},{"_id":"source/photos/20180615095642.png","hash":"ff6910635fea66a9e99c85c89b83c88dce5a0334","modified":1583923696864},{"_id":"source/about/index.md","hash":"4a04be72238b0a9abeca249e17291ddad52b9515","modified":1583923696862},{"_id":"source/photos/20180615130801.jpg","hash":"5e7523ddcf1c03f8bc9f6f2b8674413d8b625484","modified":1583923696866},{"_id":"source/tags/index.md","hash":"9b214085e232ab065edc9ab44407a202f745e0e0","modified":1583923696873},{"_id":"source/saidlist/index.md","hash":"c2b209b837e6bc60fd25913cb76e320a995269f4","modified":1583923696872},{"_id":"source/photos/20180615111444.png","hash":"4084b72b27f7b7a73e7006242afd861d18edb683","modified":1583923696865},{"_id":"themes/raytaylorism/_data/about.json","hash":"ad37c7a373e24ba9fb26630b0e761cabb3431b90","modified":1583923696914},{"_id":"themes/raytaylorism/_data/hint.json","hash":"178fe345ea95511364ed70da86186cb834947993","modified":1583923696914},{"_id":"themes/raytaylorism/_data/slider.json","hash":"361373b57cfb5371027af42000bbaec4e03333a3","modified":1583923696915},{"_id":"themes/raytaylorism/_data/link.json","hash":"388056c7415edf2287b6e0a2ac17351eeff81b90","modified":1583923696914},{"_id":"themes/raytaylorism/_data/reading.json","hash":"e8045e22b2d499a5d813320a8c2b1bccdbedd46d","modified":1583923696915},{"_id":"themes/raytaylorism/languages/default.yml","hash":"4bb1d3b6da999cc77a6b3c503226b200da69b119","modified":1583923696917},{"_id":"themes/raytaylorism/languages/zh-TW.yml","hash":"bbeceb5594d38cd9e7a19af144d3af24a02b8e90","modified":1583923696917},{"_id":"themes/raytaylorism/languages/zh-CN.yml","hash":"1fd04ec75b351f5e582da41914a05be5014af180","modified":1583923696917},{"_id":"themes/raytaylorism/layout/about.ejs","hash":"4b8e84265e57dbfde59004de02037cf4a194273f","modified":1583923696932},{"_id":"themes/raytaylorism/layout/layout.ejs","hash":"43beb54ac81519cf5e88a3a1494649beeb856066","modified":1583923696935},{"_id":"themes/raytaylorism/layout/index.ejs","hash":"50c1e7dab5a065fd10dd3a28fdffa5e3d342de82","modified":1583923696933},{"_id":"themes/raytaylorism/layout/page.ejs","hash":"90441f114859ce63ef7c7d93d668dbe5939995c2","modified":1583923696935},{"_id":"themes/raytaylorism/layout/reading.ejs","hash":"3b2f77f0a154d2f6966b684eee69f26709968936","modified":1583923696936},{"_id":"themes/raytaylorism/layout/tag.ejs","hash":"42ecab14917abd40c0a38e6ab629f089352a24b1","modified":1583923696936},{"_id":"themes/raytaylorism/layout/tags.ejs","hash":"0981efdcc289addcb0fadf325b1e19e9f8662c0f","modified":1583923696937},{"_id":"themes/raytaylorism/layout/default.ejs","hash":"1499f8791d82ebab3ee6d9cf190e63e080fb0296","modified":1583923696933},{"_id":"themes/raytaylorism/layout/archive.ejs","hash":"0a21af8903e95c6d8bb7554b089ac219e8708ad7","modified":1583923696933},{"_id":"themes/raytaylorism/layout/post.ejs","hash":"8e550fd95ef761909294ed3a4aa428ff0509fbf0","modified":1583923696936},{"_id":"themes/raytaylorism/source/favicon.png","hash":"5e7523ddcf1c03f8bc9f6f2b8674413d8b625484","modified":1583923696969},{"_id":"themes/raytaylorism/source/robots.txt","hash":"c30d7a8135f1f154eb9f15c608e1709165648991","modified":1583923696973},{"_id":"source/photos/11111116005205.png","hash":"654fe605fc2d71438bc481b05bcb225ad59c5526","modified":1583923696863},{"_id":"source/photos/psb.jpg","hash":"1280aea8875c22a538b1d08c6592c9eee9b9982b","modified":1583923696866},{"_id":"source/photos/zhifubao_qrcode.png","hash":"2cb1a385e76b15bfe5151a2629a40df2b6b4cc70","modified":1583923696869},{"_id":"source/_posts/cache/huan-cun-chuan-tou-huan-cun-ji-chuan-huan-cun-xue-beng-jie-jue-fang-an-fen-xi.md","hash":"dbbec49d24b95ff1aca01ac0d992fd7bc109471b","modified":1583923696848},{"_id":"source/_posts/exception/FAQ.md","hash":"545f5897ff279cdb4221b476e68adaa939c47697","modified":1583923696849},{"_id":"source/_posts/exception/kafka-exception-could-not-be-resolved.md","hash":"1d0e2872795fc9fd7fe59b1dd8db74a607103e8d","modified":1583923696849},{"_id":"source/_posts/exception/redis-qi-dong-bao-cuo-cluster-support-disabled.md","hash":"45ef65ff08fde825c8e076e0c711f87640b98b98","modified":1583923696851},{"_id":"source/_posts/exception/spring-boot-tomcat-qi-dong-shi-bai.md","hash":"f543c90c19dea9506474722445034c4df2985606","modified":1583923696852},{"_id":"source/_posts/jvm/jvm-gc-jstat.md","hash":"d7829a463b5749c7b437369700dfa8b076a8d2cd","modified":1583980319529},{"_id":"source/_posts/linux/zi-dong-hua-gong-ju-ansiblewan-zheng-an-zhuang-pi-liang-de-zai-yuan-cheng-fu-wu-qi-shang-zhi-xing-ming-ling.md","hash":"76284309c7dd5644c735501f946fb7a134d24f59","modified":1583923696856},{"_id":"source/_posts/other/docker.md","hash":"f4e307e472f7f851a16e01b16d6dc47e303b0f9d","modified":1583923696857},{"_id":"source/_posts/other/ni-ma-a-keng-die-de-peng-you-quan-qing-fang-guo-wo-ba-wo-ma-ba.md","hash":"732ad5c4d0112ab3a4f7c71015262eb79cce741c","modified":1583923696857},{"_id":"source/_posts/tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu.md","hash":"4f8f04eafc37fc16768e3cedf06b03c6d0484a4e","modified":1583923696858},{"_id":"source/_posts/tech/httqing-qiu-fan-hui-bian-ma-da-quan-yi-ji-jie-shi-fen-lei.md","hash":"8f4950e3f37d76528a4bd40926f91c039fe4e8b3","modified":1583923696859},{"_id":"source/_posts/tech/xing-yun-da-zhuan-pan-chou-jiang-cheng-xu-shi-xian-luo-ji.md","hash":"5b74d0b46bd0f0842d5d72babe9cf32c528df6a9","modified":1583923696859},{"_id":"source/_posts/utils/httpUtil.md","hash":"f471330f65728cef066f405a0a5ed797cf48881e","modified":1583923696860},{"_id":"source/_posts/utils/jsonUtil.md","hash":"c8d230a75de73bb24d74dbc39c930220e99e08dc","modified":1583923696860},{"_id":"source/_posts/utils/signUtil.md","hash":"7e8932729db93ce8010cd85b6c96b2596a0b558a","modified":1583923696861},{"_id":"source/_posts/video/my-father-is-liar.md","hash":"8568888c2cab59cfd49de768ddaef741cb2f6b67","modified":1583923696861},{"_id":"source/_posts/video/zhe-ge-shi-jie-zong-you-ren-tou-tou-ai-zhao-ni.md","hash":"ab22f9d5108d1224299092b98688ec272edaefca","modified":1583923696862},{"_id":"source/photos/weixin_qrcode.png","hash":"393e9193543c576263d1e2d2195ac8837a357197","modified":1583923696868},{"_id":"themes/raytaylorism/_md/about/index.md","hash":"cf37b9536668e276655568ad5b3ef20f78c1ad8f","modified":1583923696916},{"_id":"themes/raytaylorism/_md/reading/index.md","hash":"ab4ae4fad36f371f60b49973797a115423a784d4","modified":1583923696916},{"_id":"themes/raytaylorism/layout/_widget/blogroll.ejs","hash":"1a6808fa62906e7fb1fac3e16208fa6b1fc8d0ea","modified":1583923696931},{"_id":"themes/raytaylorism/layout/_widget/category.ejs","hash":"95292eb643be63d98f08e28f759c9b01bbfcb9b8","modified":1583923696931},{"_id":"themes/raytaylorism/layout/_widget/recent_posts.ejs","hash":"935bfacce10a726eed6cd82fe39d2c6f9cce9e2a","modified":1583923696931},{"_id":"themes/raytaylorism/layout/_widget/tag.ejs","hash":"90e0ba4412285903420ee3b43125a56743edf0c6","modified":1583923696932},{"_id":"themes/raytaylorism/layout/_widget/tagcloud.ejs","hash":"f256f028c247bdcb7927351df89f2284c64b7b6c","modified":1583923696932},{"_id":"themes/raytaylorism/layout/_partial/after_footer.ejs","hash":"2b4ccf0350ccb9d10b88f275f9565968565f434d","modified":1583923696918},{"_id":"themes/raytaylorism/layout/_partial/archive.ejs","hash":"68c7db951ffb5323d49d4de74e3b0de7f70fb4c3","modified":1583923696918},{"_id":"themes/raytaylorism/layout/_partial/archive_title.ejs","hash":"dfc6c670702e64abce5fd87e3e2ea43c966ace32","modified":1583923696919},{"_id":"themes/raytaylorism/layout/_partial/article.ejs","hash":"d5a6239c7bb09c539634d1056a19869739ea588c","modified":1583923696919},{"_id":"themes/raytaylorism/layout/_partial/construction.ejs","hash":"21190b5a0d567ed4ea5d5289459690b72c1452f0","modified":1583923696920},{"_id":"themes/raytaylorism/layout/_partial/feature_guide.ejs","hash":"7aefb6bdc65d1e6113cb83190fcd2f29af2c9125","modified":1583923696921},{"_id":"themes/raytaylorism/layout/_partial/float.ejs","hash":"a5594e23bff2047156b647fbdd0ef8247ee4ec65","modified":1583923696921},{"_id":"themes/raytaylorism/layout/_partial/head.ejs","hash":"05e015293453c565fb6f0958abd42f1e77d43f48","modified":1583923696922},{"_id":"themes/raytaylorism/layout/_partial/header.ejs","hash":"0616dd744262dd4cc98cd1cabe959643c845141f","modified":1583923696922},{"_id":"themes/raytaylorism/layout/_partial/menu_drawer.ejs","hash":"028ecbf59089cc4d1907a2d91d8da937f92d321c","modified":1583923696922},{"_id":"themes/raytaylorism/layout/_partial/pagenav.ejs","hash":"e7ada8faaee878ea4dde267d1b420bb45421670d","modified":1583923696922},{"_id":"themes/raytaylorism/layout/_partial/pagination.ejs","hash":"00de7746cf4ef8c4b67a72e825e5ff236f9d5814","modified":1583923696923},{"_id":"themes/raytaylorism/layout/_partial/search.ejs","hash":"0eca40de0d39c1ae52040fcb8c9d7f79afce35dc","modified":1583923696929},{"_id":"themes/raytaylorism/layout/_partial/side_nav.ejs","hash":"c69c45de069c348bf3906f1bd941920887a85c98","modified":1583923696929},{"_id":"themes/raytaylorism/layout/_partial/simple_article.ejs","hash":"6480e101b2f29dddd661410c56516c767d88b79f","modified":1583923696930},{"_id":"themes/raytaylorism/layout/_partial/slider.ejs","hash":"bb7b53f6ca9c852808d955fb074f88112e51ea59","modified":1583923696930},{"_id":"themes/raytaylorism/layout/_partial/tags.ejs","hash":"00c34c573f25946ba900b642c5f708590093a11c","modified":1583923696930},{"_id":"themes/raytaylorism/layout/_partial/footer.ejs","hash":"42d2483dbea8eaef71c8f1f86f3ed797a916e0c1","modified":1583923696921},{"_id":"themes/raytaylorism/source/css/style.styl","hash":"a05bcd2543b7bdcd3f725db6d053cd76ccf154be","modified":1583923696968},{"_id":"themes/raytaylorism/source/js/prettify.js","hash":"d592e6f771c2955cea3764d819221b91bc343961","modified":1583923696971},{"_id":"themes/raytaylorism/source/js/tagcloud.js","hash":"f8cf86b40c424f3cb661899239529bd7a65f2d97","modified":1583923696973},{"_id":"themes/raytaylorism/source/js/tagcanvas.js","hash":"934f653862ea18888532b5f046d97ff8df26c4a1","modified":1583923696972},{"_id":"themes/raytaylorism/source/weixin_favicon.png","hash":"b1dbedd0b2502bf0b21f9fc18e40447635bcfcff","modified":1583923696975},{"_id":"source/_posts/java/maven/apidocde-mavencha-jian-zi-dong-sheng-cheng-apidoc-json.md","hash":"2c054ba13f90f093279accc48c49c0681fc6d208","modified":1583923696852},{"_id":"source/_posts/java/maven/ru-he-shang-chuan-zi-ji-de-jarbao-dao-mavengong-gong-yuan-cheng-zhong-yang-cang-ku.md","hash":"a046646de53aaa80367f752f3eca3ba4e50ff268","modified":1583923696853},{"_id":"source/_posts/java/spring-boot/springbootshi-yong-hibernate-validatorli-yong-aop.md","hash":"a16448bface09330c35e3ed604a272297ce76398","modified":1583923696853},{"_id":"source/_posts/java/spring-cloud/spring-cloud-config-fen-bu-shi-pei-zhi-zhong-xin.md","hash":"8058441d25bd5692bcbb3703b3477064191845c9","modified":1583923696855},{"_id":"source/_posts/java/spring-boot/zi-ding-yi-springboot-starter-parent-tongyi-kaifa-guifan-tigao-kaifa-xiaolv.md","hash":"b42236617ee1102056652841083ffd60960eb671","modified":1583923696854},{"_id":"source/_posts/java/thread/thread.md","hash":"9ed5615333fe7ab914c02798f817cd547cb9be45","modified":1583923696856},{"_id":"themes/raytaylorism/layout/_partial/plugin/analytics.ejs","hash":"58b9b6369c499f3290a28e3ef9bd23e947aec582","modified":1583923696923},{"_id":"themes/raytaylorism/layout/_partial/plugin/comment.ejs","hash":"266926a927c86b1043159f0f4834722841b2f0d4","modified":1583923696924},{"_id":"themes/raytaylorism/layout/_partial/plugin/google_code_prettify.ejs","hash":"336f01048440f0c9f7b75f24aafcc3a1ffefd9a0","modified":1583923696924},{"_id":"themes/raytaylorism/layout/_partial/plugin/main_javascript.ejs","hash":"6629eec982aa789767b83e80af12fa40189ac344","modified":1583923696924},{"_id":"themes/raytaylorism/layout/_partial/plugin/mathjax.ejs","hash":"93def46b0a0f03353dd6947a96ccbe0cbc089d20","modified":1583923696925},{"_id":"themes/raytaylorism/layout/_partial/plugin/noscript.ejs","hash":"182650c8be93b093997ac4d5fe14af2f835b98d9","modified":1583923696925},{"_id":"themes/raytaylorism/layout/_partial/plugin/reward.ejs","hash":"284ab1d5cb4f43eb23b6d7a8aba2477b34abdc00","modified":1583923696926},{"_id":"themes/raytaylorism/layout/_partial/plugin/page_stat.ejs","hash":"9b667cbe0e8031997da065b667d12b0c944a9dad","modified":1583923696926},{"_id":"themes/raytaylorism/layout/_partial/post/gallery.ejs","hash":"bd2285802766572736663e61852eb49f6acc744f","modified":1583923696927},{"_id":"themes/raytaylorism/layout/_partial/post/category.ejs","hash":"e17f452079201bd2a5a37bc76b51b132afd04faa","modified":1583923696926},{"_id":"themes/raytaylorism/layout/_partial/post/prevnext.ejs","hash":"6556eea4fb351639006c16e9831fd72ab46076ba","modified":1583923696927},{"_id":"themes/raytaylorism/layout/_partial/post/tablecontents.ejs","hash":"585ea42410648f193184931864a64b41635af956","modified":1583923696928},{"_id":"themes/raytaylorism/layout/_partial/post/readtimes.ejs","hash":"c829d0598f9906f663a8ace1c86f2aa6024d642c","modified":1583923696927},{"_id":"themes/raytaylorism/layout/_partial/post/tag.ejs","hash":"0f84c1aded9ba1887566d34e7f0d696c015295f0","modified":1583923696928},{"_id":"themes/raytaylorism/layout/_partial/post/time.ejs","hash":"42210d6b5a132f5c18352dcff2983d3fdbe26956","modified":1583923696928},{"_id":"themes/raytaylorism/layout/_partial/post/title.ejs","hash":"f0733a134b375172a2cec830d7d09bdba33891fe","modified":1583923696929},{"_id":"themes/raytaylorism/source/css/_base/icons.css","hash":"ab167f1694ffe10c3c51d18a633efd41be121555","modified":1583923696938},{"_id":"themes/raytaylorism/source/css/_partial/about.styl","hash":"def183d6908ebcbd59341b09e9f7e06dc277b9ca","modified":1583923696941},{"_id":"themes/raytaylorism/source/css/_base/lib_customize.styl","hash":"d3a0bb22bbd2068315ae42d6d70805926fbbd282","modified":1583923696939},{"_id":"themes/raytaylorism/source/css/_base/layout.styl","hash":"b2f718418de61946504a3f8bf28b75be165913a7","modified":1583923696938},{"_id":"themes/raytaylorism/source/css/_base/variable.styl","hash":"ce4e056d1bbfb80734d98a6898950e7c0136edf4","modified":1583923696940},{"_id":"themes/raytaylorism/source/css/_partial/archive.styl","hash":"4d48566e9f72b8eac8875b6985885418f56fbafa","modified":1583923696941},{"_id":"themes/raytaylorism/source/css/_partial/article.styl","hash":"bded5c3d220d74396d0f09232a9cc86fe1e65a70","modified":1583923696941},{"_id":"themes/raytaylorism/source/css/_partial/comment.styl","hash":"590f1386581181ab588be06e4189861f5a209467","modified":1583923696942},{"_id":"themes/raytaylorism/source/css/_partial/footer.styl","hash":"f4741324b56523570c5dcc5113530c5cc64f93ba","modified":1583923696942},{"_id":"themes/raytaylorism/source/css/_partial/header.styl","hash":"ebfd0155cda8a0876c36595708f02c294a7c82a0","modified":1583923696942},{"_id":"themes/raytaylorism/source/css/_partial/link_context.styl","hash":"5b23db4dee53cbbe9eef257f4a542823100fde72","modified":1583923696943},{"_id":"themes/raytaylorism/source/css/_partial/index.styl","hash":"ac83523dd14a1fc1fe55f98c84ed84cb03be864b","modified":1583923696943},{"_id":"themes/raytaylorism/source/css/_partial/other.styl","hash":"32bf499037a45ad2e0007a9ab3054067adc02506","modified":1583923696943},{"_id":"themes/raytaylorism/source/css/_partial/reading.styl","hash":"f81929fa12212465b02456d0bb3b8263355e3281","modified":1583923696944},{"_id":"themes/raytaylorism/source/css/_partial/search.styl","hash":"f9ca6f5626c795ae73ff7412ff58207b62fd64ac","modified":1583923696944},{"_id":"themes/raytaylorism/source/css/_partial/side_nav.styl","hash":"b239b6b55e87e86d038d6aa821beeb66a9cbaf39","modified":1583923696944},{"_id":"themes/raytaylorism/source/css/_partial/slider.styl","hash":"ad757e74b3500aa774636ebbe5bdcee7e52e5ad7","modified":1583923696945},{"_id":"themes/raytaylorism/source/css/_partial/syntax.styl","hash":"f39e7bb08abcc220f7c57fb413e76f4043ab9c35","modified":1583923696945},{"_id":"themes/raytaylorism/source/css/_partial/tablecontents.styl","hash":"89588345a5df5989760271c1c6f9b8dec3767d66","modified":1583923696945},{"_id":"themes/raytaylorism/source/css/images/side-user-cover.jpg","hash":"d8d73a64d6d5af83a27e6af1d4fedef808955ba0","modified":1583923696965},{"_id":"themes/raytaylorism/source/css/lib/font-awesome.min.css","hash":"14be7d7ae1894d2cc7c1a8e847df4db42a310b2f","modified":1583923696966},{"_id":"themes/raytaylorism/source/css/lib/prettify-tomorrow-night-eighties.css","hash":"e320b2be926124d30998af0e149b7f06303b8f8b","modified":1583923696968},{"_id":"themes/raytaylorism/source/js/jquery.min.js","hash":"f694238d616f579a0690001f37984af430c19963","modified":1583923696970},{"_id":"themes/raytaylorism/source/js/materialize.min.js","hash":"04fe8bbc9a3165eb7bfb13b7166306ed671268d8","modified":1583923696971},{"_id":"themes/raytaylorism/source/css/lib/materialize.min.css","hash":"4d82b2b04b9c0ac07f1502667d40f38aee90c296","modified":1583923696967},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1583923696952},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1583923696955},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1583923696956},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1583923696958},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1583923696958},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1583923696959},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1583923696961},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1583923696961},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1583923696962},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1583923696964},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1583923696964},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1583923696948},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1583923696952},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1583923696954},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1583923696960},{"_id":"themes/raytaylorism/source/css/font/font-awesome/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1583923696947},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1583923696950},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1583923696951},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1583923696954},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1583923696957},{"_id":"themes/raytaylorism/source/css/font/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1583923696963},{"_id":"source/pic/banner1.png","hash":"6ca2b8cf47c99f1fb72a88a62c57b684f17ae5ca","modified":1583923696871},{"_id":"themes/raytaylorism/source/css/font/font-awesome/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1583923696949},{"_id":"public/baidusitemap.xml","hash":"434f4126b5d88b9d0b5a29d95d0e02a5bee13df4","modified":1583981471887},{"_id":"public/atom.xml","hash":"84cfe4cb8c937af31fd63c095c5d4270e243687a","modified":1583981472283},{"_id":"public/search.xml","hash":"d8f0ab1dba3667b1fdc6bf0d3caa2c7d45d3b0eb","modified":1583981472306},{"_id":"public/sitemap.xml","hash":"8815620b7aff59d13fa17189de47f2906c059be4","modified":1583981472306},{"_id":"public/about/index.html","hash":"45dee768810a8eaf46827e923ae810d864689ba5","modified":1583981472320},{"_id":"public/tags/index.html","hash":"3bd8dd8549a2f9db6e24845287747eed0175922f","modified":1583981472320},{"_id":"public/saidlist/index.html","hash":"10bde85ed479f982a66b367007975fd62e4c8577","modified":1583981472320},{"_id":"public/jvm/jvm-gc-jstat/index.html","hash":"8d04577adbef8882f2e2fd6de84cdc83e8ee120e","modified":1583981472320},{"_id":"public/java/thread/thread/index.html","hash":"fe3b89733732aac0c6365e0875ba4708137c39b2","modified":1583981472320},{"_id":"public/other/docker/index.html","hash":"8b51575adf16c330ef9cce6bcb0a1a800046ebe8","modified":1583981472320},{"_id":"public/tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu/index.html","hash":"dfb335dc27914062287f628a6973159aa36c4561","modified":1583981472320},{"_id":"public/java/spring-cloud/spring-cloud-config-fen-bu-shi-pei-zhi-zhong-xin/index.html","hash":"7256e22308a16445c928d3c5a97bd0026eec3736","modified":1583981472320},{"_id":"public/java/spring-boot/zi-ding-yi-springboot-starter-parent-tongyi-kaifa-guifan-tigao-kaifa-xiaolv/index.html","hash":"5c5a1487b8f560ad14f741f04136addcbdca9b0d","modified":1583981472320},{"_id":"public/java/maven/apidocde-mavencha-jian-zi-dong-sheng-cheng-apidoc-json/index.html","hash":"c1f865e4cd9630c91f659b5ee0744522319b0220","modified":1583981472320},{"_id":"public/video/zhe-ge-shi-jie-zong-you-ren-tou-tou-ai-zhao-ni/index.html","hash":"be46d67a940d9e3ebc4c3011b446b1f69acf6423","modified":1583981472320},{"_id":"public/java/spring-boot/springbootshi-yong-hibernate-validatorli-yong-aop/index.html","hash":"e8dba4f32ad6955cc07ee1d9908a1fc8ff0b4e37","modified":1583981472321},{"_id":"public/java/maven/ru-he-shang-chuan-zi-ji-de-jarbao-dao-mavengong-gong-yuan-cheng-zhong-yang-cang-ku/index.html","hash":"ae72400ccaace7f69300bd35636db2b93c91f1b5","modified":1583981472321},{"_id":"public/exception/spring-boot-tomcat-qi-dong-shi-bai/index.html","hash":"18787d5a9486ec22b9b73697a5da0a012df74579","modified":1583981472321},{"_id":"public/exception/redis-qi-dong-bao-cuo-cluster-support-disabled/index.html","hash":"858d7821e0ea49e482f629f56565041ff4409ba2","modified":1583981472321},{"_id":"public/tech/xing-yun-da-zhuan-pan-chou-jiang-cheng-xu-shi-xian-luo-ji/index.html","hash":"40911216e5cad011763572701f5a321e1fa74a2e","modified":1583981472321},{"_id":"public/tech/httqing-qiu-fan-hui-bian-ma-da-quan-yi-ji-jie-shi-fen-lei/index.html","hash":"3499579c049e2f8a04b46832fbd967c433d8db2e","modified":1583981472321},{"_id":"public/exception/kafka-exception-could-not-be-resolved/index.html","hash":"96d59e381974c11892647bd4eb0e8552e56fe03b","modified":1583981472321},{"_id":"public/cache/huan-cun-chuan-tou-huan-cun-ji-chuan-huan-cun-xue-beng-jie-jue-fang-an-fen-xi/index.html","hash":"246e13026cce717b23fd68a0f360abda46069599","modified":1583981472321},{"_id":"public/utils/signUtil/index.html","hash":"8c8031c8f80638f2cf2751af164543c24f18b7a8","modified":1583981472321},{"_id":"public/utils/jsonUtil/index.html","hash":"8bbb930d02ef3452f78aa68bb8300ef643760196","modified":1583981472321},{"_id":"public/other/ni-ma-a-keng-die-de-peng-you-quan-qing-fang-guo-wo-ba-wo-ma-ba/index.html","hash":"159a1c9abecd696264dac33d17367261ef4f3a2f","modified":1583981472321},{"_id":"public/utils/httpUtil/index.html","hash":"8a9435b3d3eba387d6c087c74373889b10a8553d","modified":1583981472321},{"_id":"public/exception/FAQ/index.html","hash":"e791f5524b7ead3e6095a4504e2aaad2959a9e06","modified":1583981472321},{"_id":"public/video/my-father-is-liar/index.html","hash":"cfcbd6efb97df574610c5f22341f38022be4ff6e","modified":1583981472321},{"_id":"public/linux/zi-dong-hua-gong-ju-ansiblewan-zheng-an-zhuang-pi-liang-de-zai-yuan-cheng-fu-wu-qi-shang-zhi-xing-ming-ling/index.html","hash":"98891154eb65d67302c661958e75390793a7cafc","modified":1583981472321},{"_id":"public/categories/异常记录/index.html","hash":"1b7be624465aa4f230f93949582e48710516c30d","modified":1583981472321},{"_id":"public/categories/jvm/index.html","hash":"930f6351149f7e0fef58f5e4031c6f16a0aa80b3","modified":1583981472322},{"_id":"public/categories/其他/index.html","hash":"2959ff1d2e60dffff30c4dae073aa39a6e276833","modified":1583981472322},{"_id":"public/categories/Linux/index.html","hash":"2eaab67b865f2381b53abecf3d46fbd678f0ca91","modified":1583981472322},{"_id":"public/categories/other/index.html","hash":"8720cfbf24c389fa4b7d5401e0ef4656cacd04bb","modified":1583981472322},{"_id":"public/categories/code工具/index.html","hash":"f733e31f02bf04b1d7c14a1ea0f30c051a928cfb","modified":1583981472322},{"_id":"public/categories/视频/index.html","hash":"fd7a85a00fe660cfc97d7feef2277e0267bb0f18","modified":1583981472322},{"_id":"public/categories/jvm/java/index.html","hash":"511768841160df303db9d99cdf33d416057e7769","modified":1583981472322},{"_id":"public/categories/技术杂文/index.html","hash":"6a6d5a453d53002748ae2acbd4edc18b8e0cd9c5","modified":1583981472322},{"_id":"public/categories/jvm/java/gc/index.html","hash":"a7c961a4ad23b1a63e05ff1d77a99a5cca11642b","modified":1583981472322},{"_id":"public/categories/jvm/java/gc/jstat/index.html","hash":"e6da5067ca0d27466f46c429acae6bd58a18f950","modified":1583981472322},{"_id":"public/categories/缓存技术/index.html","hash":"379f532935a0776ea3d3303519a26bf789d79ece","modified":1583981472322},{"_id":"public/categories/Java/index.html","hash":"f948ae9caa139902ee36077dff76c126e80aed50","modified":1583981472322},{"_id":"public/categories/Java/thread/index.html","hash":"ad410a5daf05392718a9dd320601692baabeab9d","modified":1583981472322},{"_id":"public/categories/Java/Maven/index.html","hash":"0062ee7c60be31452052a1ab4da190d17e802e77","modified":1583981472322},{"_id":"public/categories/Java/SpringBoot/index.html","hash":"5be4cae1d017396ac30e04ab28abf3b72d0755d2","modified":1583981472322},{"_id":"public/categories/Java/SpringCloud/index.html","hash":"b65a6b6eb1e163ead6709071e07600af790738e1","modified":1583981472322},{"_id":"public/index.html","hash":"3ba67dd7192ead2f8cdedfe02c20078cc9a86a0b","modified":1583981472322},{"_id":"public/page/2/index.html","hash":"d179cb711e3be0b9e8f16736f88aafbe3e650cf0","modified":1583981472323},{"_id":"public/page/3/index.html","hash":"755a6349a1ae0c9d1067340272bebbad5e2183e1","modified":1583981472323},{"_id":"public/tags/常见异常/index.html","hash":"7b4fd0c28a2708426f1493c2761834cc967f2ca5","modified":1583981472323},{"_id":"public/tags/Exception/index.html","hash":"9b1d652e2c5c2914c0a63e557f959b39fbbed76b","modified":1583981472323},{"_id":"public/tags/Redis/index.html","hash":"6703eec350d52f190697904416dc34c29ceb5ff3","modified":1583981472323},{"_id":"public/tags/SpringBoot/index.html","hash":"554c5a722d8d2cad24ef84b3be4572117c9be88d","modified":1583981472323},{"_id":"public/tags/Kafka/index.html","hash":"8e359fa3093e3ea5f05ca41acd5da3541ba4c5c7","modified":1583981472323},{"_id":"public/tags/Java/index.html","hash":"abd7ef66caaaf7e1a2f8885a67f26ce28298050d","modified":1583981472323},{"_id":"public/tags/jvm/index.html","hash":"382660560f667110e5361f4b461bfac18f912192","modified":1583981472323},{"_id":"public/tags/图片/index.html","hash":"0b988133cd240652637242e72a8d859b058c2057","modified":1583981472323},{"_id":"public/tags/搞笑/index.html","hash":"71a3b45ec8761dfb51adc7a50f5635baf1290798","modified":1583981472323},{"_id":"public/tags/Linux/index.html","hash":"863407b8786caa5920a3a335f732c0836a68769a","modified":1583981472323},{"_id":"public/tags/Docker/index.html","hash":"77a3286dc766a0ccb402378c32876379911fa76c","modified":1583981472323},{"_id":"public/tags/jsonUtil/index.html","hash":"e8760ffec39daf16ba2b83ac3841752fe416df89","modified":1583981472323},{"_id":"public/tags/工具类/index.html","hash":"18ae15242f298fbb7907bfe52fe55704358f57d5","modified":1583981472323},{"_id":"public/tags/签名/index.html","hash":"7cb44622cebcd7f6db61172b69c4091896fbebea","modified":1583981472324},{"_id":"public/tags/视频/index.html","hash":"1f9320dc1e6386cadc4a865a8106c47ba0dff8c4","modified":1583981472324},{"_id":"public/tags/公益广告/index.html","hash":"0dd6eceabab1cb9611b118af14c035dab6833f12","modified":1583981472324},{"_id":"public/tags/抽奖/index.html","hash":"b3dd08ffa3b376710353b71c4fd10458fb8ecacb","modified":1583981472324},{"_id":"public/tags/缓存/index.html","hash":"3647b22fff956bbecf1d6c410a2980afc3c78ac6","modified":1583981472324},{"_id":"public/tags/分布式/index.html","hash":"c4be05c43d0e1735ffd1ebe6b5e8eee53d15abb2","modified":1583981472324},{"_id":"public/tags/Spring-Cloud/index.html","hash":"a12095ce6ea1e4078be4e56f8ea2c797cfd8d197","modified":1583981472324},{"_id":"public/tags/HttpUtil/index.html","hash":"a03b9b2af4ae8257c211b784a5c473b7ccef3a04","modified":1583981472324},{"_id":"public/tags/Maven/index.html","hash":"b54d2266d55ca32ee5c18922e6b8cc5d097540dc","modified":1583981472324},{"_id":"public/tags/线程/index.html","hash":"8c24325e991e451a98619f6018141a2f11450433","modified":1583981472324},{"_id":"public/tags/Http/index.html","hash":"45d1ae332b3d3fa25a5fd342b0cb2cc164e843e3","modified":1583981472324},{"_id":"public/tags/SpringCloud/index.html","hash":"26084df31b9a963bcf3514eee68a5ea76a919273","modified":1583981472324},{"_id":"public/archives/index.html","hash":"0b9178b62f3f53e50fec839c49449727cca67246","modified":1583981472324},{"_id":"public/archives/2016/index.html","hash":"bbc1fc7c82028a4302c513fe277978b0afdd4214","modified":1583981472324},{"_id":"public/archives/2016/11/index.html","hash":"aef651864522d04be4a7441ac9f0585dff1ad4bc","modified":1583981472324},{"_id":"public/archives/2017/index.html","hash":"beefe425aea421e7cb7394321fc4ef03eada4c78","modified":1583981472324},{"_id":"public/archives/2017/01/index.html","hash":"fde097563702bab91b1375343e8f0f771e026fa6","modified":1583981472324},{"_id":"public/archives/2017/02/index.html","hash":"8e37ed06c9866905fc48eed6e91079ed8a698f6d","modified":1583981472325},{"_id":"public/archives/2017/04/index.html","hash":"1a9217e174ef8376f815e5bdde2abe32da2051ed","modified":1583981472325},{"_id":"public/archives/2017/09/index.html","hash":"ef6b06c851f1463f33e632546c10160cbabaf5d0","modified":1583981472325},{"_id":"public/archives/2017/10/index.html","hash":"25b9fc25a44713aa5746d83e871a522f07a4cc45","modified":1583981472325},{"_id":"public/archives/2017/11/index.html","hash":"d22501fbdb1d71f2a89e18b719167bc87f943605","modified":1583981472325},{"_id":"public/archives/2017/12/index.html","hash":"ee2a4800b214aaa9a4e9fc9cc0f6b234a0c7d47d","modified":1583981472325},{"_id":"public/archives/2018/index.html","hash":"76849cd6221b4e02031a727071976dbd323c6512","modified":1583981472325},{"_id":"public/archives/2018/03/index.html","hash":"baff3d308c690681439759a55d584a8be3713c2e","modified":1583981472325},{"_id":"public/archives/2018/04/index.html","hash":"25357a61a0c76b7a43995a6c300da4af9977e2d3","modified":1583981472325},{"_id":"public/archives/2018/05/index.html","hash":"baa6f60b5c08ff8416c2c6c35ed9a6963bcae9e2","modified":1583981472325},{"_id":"public/archives/2018/06/index.html","hash":"6904531179ffbac01268ecad1d4da696cc2311fb","modified":1583981472325},{"_id":"public/archives/2018/07/index.html","hash":"9bbf63a1ebe17274051aab12278b11cd339582ab","modified":1583981472325},{"_id":"public/archives/2020/index.html","hash":"0879b0b987c1df64f6da04108d279ecd9333901d","modified":1583981472325},{"_id":"public/archives/2020/03/index.html","hash":"83d47cf1dc88693812567e35725a19b4c9a4be2a","modified":1583981472325},{"_id":"public/photos/20180615095642.png","hash":"ff6910635fea66a9e99c85c89b83c88dce5a0334","modified":1583981472333},{"_id":"public/photos/20180615130801.jpg","hash":"5e7523ddcf1c03f8bc9f6f2b8674413d8b625484","modified":1583981472333},{"_id":"public/photos/20180615111444.png","hash":"4084b72b27f7b7a73e7006242afd861d18edb683","modified":1583981472334},{"_id":"public/robots.txt","hash":"c30d7a8135f1f154eb9f15c608e1709165648991","modified":1583981472334},{"_id":"public/favicon.png","hash":"5e7523ddcf1c03f8bc9f6f2b8674413d8b625484","modified":1583981472334},{"_id":"public/css/images/side-user-cover.jpg","hash":"d8d73a64d6d5af83a27e6af1d4fedef808955ba0","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1583981472334},{"_id":"public/css/font/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1583981472335},{"_id":"public/photos/11111116005205.png","hash":"654fe605fc2d71438bc481b05bcb225ad59c5526","modified":1583981472635},{"_id":"public/photos/zhifubao_qrcode.png","hash":"2cb1a385e76b15bfe5151a2629a40df2b6b4cc70","modified":1583981472635},{"_id":"public/photos/psb.jpg","hash":"1280aea8875c22a538b1d08c6592c9eee9b9982b","modified":1583981472635},{"_id":"public/css/font/font-awesome/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1583981472635},{"_id":"public/css/font/font-awesome/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1583981472635},{"_id":"public/css/font/font-awesome/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1583981472636},{"_id":"public/css/font/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1583981472636},{"_id":"public/css/font/font-awesome/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1583981472636},{"_id":"public/css/font/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1583981472636},{"_id":"public/css/font/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1583981472636},{"_id":"public/css/font/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1583981472636},{"_id":"public/js/tagcloud.js","hash":"f8cf86b40c424f3cb661899239529bd7a65f2d97","modified":1583981472641},{"_id":"public/css/lib/prettify-tomorrow-night-eighties.css","hash":"35e07bd7a4585363060edd558a0e9939e7e68323","modified":1583981472641},{"_id":"public/css/style.css","hash":"b5530a7274de5e5d61e312f2c8a825947089ab16","modified":1583981472641},{"_id":"public/js/prettify.js","hash":"d24b1da342b5c2d0582f0922118aaf0b2a6840d5","modified":1583981472645},{"_id":"public/css/font/font-awesome/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1583981472650},{"_id":"public/css/lib/font-awesome.min.css","hash":"683d12731b7429d32ec7de00a6706602e403013f","modified":1583981472661},{"_id":"public/photos/weixin_qrcode.png","hash":"393e9193543c576263d1e2d2195ac8837a357197","modified":1583981472661},{"_id":"public/weixin_favicon.png","hash":"b1dbedd0b2502bf0b21f9fc18e40447635bcfcff","modified":1583981472717},{"_id":"public/js/tagcanvas.js","hash":"db9a61a79350d1618a74a8f3448f06046c3d9a6c","modified":1583981472787},{"_id":"public/css/font/font-awesome/fontawesome-webfont.svg","hash":"550ef5c1253c8376f2ead32b654eb58d3c106ca3","modified":1583981472791},{"_id":"public/js/jquery.min.js","hash":"69bb69e25ca7d5ef0935317584e6153f3fd9a88c","modified":1583981472813},{"_id":"public/css/lib/materialize.min.css","hash":"41d1676b73eec020eaeb9b507dcbcd30069ae8cb","modified":1583981472828},{"_id":"public/pic/banner1.png","hash":"6ca2b8cf47c99f1fb72a88a62c57b684f17ae5ca","modified":1583981472830},{"_id":"public/js/materialize.min.js","hash":"c9308fbe808a149aa11061af40a4be5f391cccee","modified":1583981472832}],"Category":[{"name":"异常记录","_id":"ck7o5o59h0005w8mx92dhk5tb"},{"name":"jvm","_id":"ck7o5o59u000kw8mxqhr8v2o2"},{"name":"其他","_id":"ck7o5o59w000qw8mxoypmbig0"},{"name":"Linux","_id":"ck7o5o59y000uw8mxfch86n14"},{"name":"other","_id":"ck7o5o5a0000zw8mxad5tidum"},{"name":"code工具","_id":"ck7o5o5a10014w8mxt8ok249c"},{"name":"视频","_id":"ck7o5o5a2001aw8mxy9yjmt0b"},{"name":"java","parent":"ck7o5o59u000kw8mxqhr8v2o2","_id":"ck7o5o5a4001fw8mxbka4cpux"},{"name":"技术杂文","_id":"ck7o5o5a6001nw8mxo6hzi3tw"},{"name":"gc","parent":"ck7o5o5a4001fw8mxbka4cpux","_id":"ck7o5o5a7001rw8mxajdbugo9"},{"name":"jstat","parent":"ck7o5o5a7001rw8mxajdbugo9","_id":"ck7o5o5a8001vw8mx8h27ll4h"},{"name":"缓存技术","_id":"ck7o5o5am002jw8mxc1d7aa4i"},{"name":"Java","_id":"ck7o5o5b30036w8mxryrf542t"},{"name":"thread","parent":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5b9003jw8mx472v8wee"},{"name":"Maven","parent":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5b9003mw8mxzpy2iurw"},{"name":"SpringBoot","parent":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bb003rw8mxqog68omx"},{"name":"SpringCloud","parent":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bk0042w8mxcez3j9p8"}],"Data":[{"_id":"about","data":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]}},{"_id":"hint","data":{"new":{"selector":[".menu-search"]}}},{"_id":"slider","data":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}]},{"_id":"link","data":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}}},{"_id":"reading","data":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}],"Page":[{"title":"关于我","layout":"about","sid":"77738de4-13b7-40fd-ad07-402e7bf754a5","_content":"<!-- ![](../../photos/psb.jpg)</div> -->\n\n\n- 姓 名：叶统学\n- 昵 称：scott\n- 职 业：攻城狮\n- Ｑ Ｑ：1049385445\n- Email：dqpiytu@163.com\n- 位 置：深圳\n- 爱 好：一支烟，一斗酒，一曲长歌\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\nlayout: about\nsid: 77738de4-13b7-40fd-ad07-402e7bf754a5\n---\n<!-- ![](../../photos/psb.jpg)</div> -->\n\n\n- 姓 名：叶统学\n- 昵 称：scott\n- 职 业：攻城狮\n- Ｑ Ｑ：1049385445\n- Email：dqpiytu@163.com\n- 位 置：深圳\n- 爱 好：一支烟，一斗酒，一曲长歌\n\n\n","date":"2020-03-11T10:48:16.862Z","updated":"2020-03-11T10:48:16.862Z","path":"about/index.html","comments":1,"_id":"ck7o5o5870000w8mxsawf1sds","content":"<!-- ![](../../photos/psb.jpg)</div> -->\n<ul>\n<li>姓 名：叶统学</li>\n<li>昵 称：scott</li>\n<li>职 业：攻城狮</li>\n<li>Ｑ Ｑ：1049385445</li>\n<li>Email：<a href=\"mailto:dqpiytu@163.com\" target=\"_blank\" rel=\"noopener\">dqpiytu@163.com</a></li>\n<li>位 置：深圳</li>\n<li>爱 好：一支烟，一斗酒，一曲长歌</li>\n</ul>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"","more":"<!-- ![](../../photos/psb.jpg)</div> -->\n<ul>\n<li>姓 名：叶统学</li>\n<li>昵 称：scott</li>\n<li>职 业：攻城狮</li>\n<li>Ｑ Ｑ：1049385445</li>\n<li>Email：<a href=\"mailto:dqpiytu@163.com\" target=\"_blank\" rel=\"noopener\">dqpiytu@163.com</a></li>\n<li>位 置：深圳</li>\n<li>爱 好：一支烟，一斗酒，一曲长歌</li>\n</ul>\n"},{"title":"标签云","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签云\nlayout: tags\n---","date":"2020-03-11T12:28:06.996Z","updated":"2020-03-11T10:48:16.873Z","path":"tags/index.html","comments":1,"_id":"ck7o5o58b0001w8mxjwty8i5m","content":"","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"","more":""},{"title":"留言板","layout":"default","sid":"ceab7890-a9b0-48db-aad2-b4e48208951a","_content":"**博客**  \n\n使用程序：Hexo  \n云存储提供：[七牛云](http://www.qiniu.com/)  \n\n**友情链接**  \n\n昵称：千寻啊千寻  \n网站：qianxunclub.com  \n描述：编程技术分享  \nLOGO：\n```http://ofbphtmkb.bkt.clouddn.com/qianxun/4/3e/c20fa0d6431df54956f1b8db7d281.jpg```  \n\n欢迎各位添加友情连接哇，有什么建议可以给我留言哦~","source":"saidlist/index.md","raw":"---\ntitle: 留言板\nlayout: default\nsid: ceab7890-a9b0-48db-aad2-b4e48208951a\n---\n**博客**  \n\n使用程序：Hexo  \n云存储提供：[七牛云](http://www.qiniu.com/)  \n\n**友情链接**  \n\n昵称：千寻啊千寻  \n网站：qianxunclub.com  \n描述：编程技术分享  \nLOGO：\n```http://ofbphtmkb.bkt.clouddn.com/qianxun/4/3e/c20fa0d6431df54956f1b8db7d281.jpg```  \n\n欢迎各位添加友情连接哇，有什么建议可以给我留言哦~","date":"2020-03-11T10:48:16.872Z","updated":"2020-03-11T10:48:16.872Z","path":"saidlist/index.html","comments":1,"_id":"ck7o5o58c0002w8mx2rzjc971","content":"<p><strong>博客</strong>  </p>\n<p>使用程序：Hexo<br>云存储提供：<a href=\"http://www.qiniu.com/\" target=\"_blank\" rel=\"noopener\">七牛云</a>  </p>\n<p><strong>友情链接</strong>  </p>\n<p>昵称：千寻啊千寻<br>网站：qianxunclub.com<br>描述：编程技术分享<br>LOGO：<br><code>http://ofbphtmkb.bkt.clouddn.com/qianxun/4/3e/c20fa0d6431df54956f1b8db7d281.jpg</code>  </p>\n<p>欢迎各位添加友情连接哇，有什么建议可以给我留言哦~</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"","more":"<p><strong>博客</strong>  </p>\n<p>使用程序：Hexo<br>云存储提供：<a href=\"http://www.qiniu.com/\" target=\"_blank\" rel=\"noopener\">七牛云</a>  </p>\n<p><strong>友情链接</strong>  </p>\n<p>昵称：千寻啊千寻<br>网站：qianxunclub.com<br>描述：编程技术分享<br>LOGO：<br><code>http://ofbphtmkb.bkt.clouddn.com/qianxun/4/3e/c20fa0d6431df54956f1b8db7d281.jpg</code>  </p>\n<p>欢迎各位添加友情连接哇，有什么建议可以给我留言哦~</p>\n"}],"Post":[{"title":"常见异常","date":"2017-01-07T14:55:44.000Z","updated":"2020-03-11T10:48:16.849Z","_content":"\n## 1、spring boot启动报异常 ##\n```\nException in thread \"main\" java.lang.UnsupportedClassVersionError: \norg/springframework/boot/loader/JarLauncher : Unsupported major.minor version 52.0\n```\n解决办法：\n<!-- more -->\n1. 换成jdk1.8<br>\n2. pom.xml添加:<br>\n```\n<plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n</plugin>\n```\n### 2、解决svn的working copy locked并且cleanup恢复不能的情况 ###\n![](../../photos/20180615111444.png)","source":"_posts/exception/FAQ.md","raw":"---\ntitle: 常见异常\ndate: 2017-01-07 22:55:44\nupdated: \ncategories: \n  - 异常记录\npermalink:\ntags: 常见异常\n---\n\n## 1、spring boot启动报异常 ##\n```\nException in thread \"main\" java.lang.UnsupportedClassVersionError: \norg/springframework/boot/loader/JarLauncher : Unsupported major.minor version 52.0\n```\n解决办法：\n<!-- more -->\n1. 换成jdk1.8<br>\n2. pom.xml添加:<br>\n```\n<plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n</plugin>\n```\n### 2、解决svn的working copy locked并且cleanup恢复不能的情况 ###\n![](../../photos/20180615111444.png)","slug":"exception/FAQ","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59b0003w8mx3phnohv4","content":"<h2 id=\"1、spring-boot启动报异常\"><a href=\"#1、spring-boot启动报异常\" class=\"headerlink\" title=\"1、spring boot启动报异常\"></a>1、spring boot启动报异常</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: </span><br><span class=\"line\">org/springframework/boot/loader/JarLauncher : Unsupported major.minor version 52.0</span><br></pre></td></tr></table></figure>\n<p>解决办法：<br><a id=\"more\"></a></p>\n<ol>\n<li>换成jdk1.8<br></li>\n<li>pom.xml添加:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"2、解决svn的working-copy-locked并且cleanup恢复不能的情况\"><a href=\"#2、解决svn的working-copy-locked并且cleanup恢复不能的情况\" class=\"headerlink\" title=\"2、解决svn的working copy locked并且cleanup恢复不能的情况\"></a>2、解决svn的working copy locked并且cleanup恢复不能的情况</h3><p><img src=\"../../photos/20180615111444.png\" alt=\"\"></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h2 id=\"1、spring-boot启动报异常\"><a href=\"#1、spring-boot启动报异常\" class=\"headerlink\" title=\"1、spring boot启动报异常\"></a>1、spring boot启动报异常</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Exception in thread &quot;main&quot; java.lang.UnsupportedClassVersionError: </span><br><span class=\"line\">org/springframework/boot/loader/JarLauncher : Unsupported major.minor version 52.0</span><br></pre></td></tr></table></figure>\n<p>解决办法：<br>","more":"</p>\n<ol>\n<li>换成jdk1.8<br></li>\n<li>pom.xml添加:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">        &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class=\"line\">        &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</span><br><span class=\"line\">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"2、解决svn的working-copy-locked并且cleanup恢复不能的情况\"><a href=\"#2、解决svn的working-copy-locked并且cleanup恢复不能的情况\" class=\"headerlink\" title=\"2、解决svn的working copy locked并且cleanup恢复不能的情况\"></a>2、解决svn的working copy locked并且cleanup恢复不能的情况</h3><p><img src=\"../../photos/20180615111444.png\" alt=\"\"></p>"},{"title":"SpringBoot的redis启动报错：ERR This instance has cluster support disabled","date":"2017-11-28T06:27:23.000Z","_content":"# 异常描述\n\n新建了一个项目，我自己的服务器安装了一个redis，安装的时候，基本上都是默认参数，然后SpringBoot配置如下：\n\n```yml\nspring:\n  redis:\n    cluster:\n      nodes: qianxunclub.com:6666\n```\n<!-- more -->\n在项目启动的时候，报错：\n\n```\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisTemplate' defined in class path resource [com/qianxunclub/starter/redis/autoconfigure/RedisConfig.class]: Unsatisfied dependency expressed through method 'redisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n\t... 33 common frames omitted\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n\t... 47 common frames omitted\nCaused by: redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled\n\tat redis.clients.jedis.Protocol.processError(Protocol.java:127)\n\tat redis.clients.jedis.Protocol.process(Protocol.java:161)\n\tat redis.clients.jedis.Protocol.read(Protocol.java:215)\n\tat redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)\n\tat redis.clients.jedis.Connection.getRawObjectMultiBulkReply(Connection.java:285)\n\tat redis.clients.jedis.Connection.getObjectMultiBulkReply(Connection.java:291)\n\tat redis.clients.jedis.Jedis.clusterSlots(Jedis.java:3376)\n\tat redis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots(JedisClusterInfoCache.java:54)\n\tat redis.clients.jedis.JedisClusterConnectionHandler.initializeSlotsCache(JedisClusterConnectionHandler.java:39)\n\tat redis.clients.jedis.JedisClusterConnectionHandler.<init>(JedisClusterConnectionHandler.java:17)\n\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.<init>(JedisSlotBasedConnectionHandler.java:20)\n\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.<init>(JedisSlotBasedConnectionHandler.java:15)\n\tat redis.clients.jedis.BinaryJedisCluster.<init>(BinaryJedisCluster.java:41)\n\tat redis.clients.jedis.JedisCluster.<init>(JedisCluster.java:83)\n\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:306)\n\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:280)\n\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.afterPropertiesSet(JedisConnectionFactory.java:241)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)\n\t... 58 common frames omitted\nDisconnected from the target VM, address: '127.0.0.1:52157', transport: 'socket'\n\nProcess finished with exit code 1\n\n```\n\n# 异常分析\n\n从报错误的信息`ERR This instance has cluster support disabled`很明显看得出来，是没有启动redis集群功能，可是我项目配置的集群的配置方式，要么修改代码为单机配置，要么修改redis为集群方式。\n\n# 解决办法\n\n1、可以修改配置为单机redis配置：\n\n```yml\nspring:\n  redis:\n    host: qianxunclub.com\n    port: 6666\n```\n\n2、在安装redis的目录找到redis配置文件`redis.conf`，里面会找到配置：\n```\n# cluster-enabled yes\n```\n\n把注释去掉就可以了\n\n```\ncluster-enabled yes\n```","source":"_posts/exception/redis-qi-dong-bao-cuo-cluster-support-disabled.md","raw":"---\ntitle: SpringBoot的redis启动报错：ERR This instance has cluster support disabled\ndate: 2017-11-28 14:27:23\ntags: [Exception,Redis,SpringBoot]\ncategories: \n  - 异常记录\n---\n# 异常描述\n\n新建了一个项目，我自己的服务器安装了一个redis，安装的时候，基本上都是默认参数，然后SpringBoot配置如下：\n\n```yml\nspring:\n  redis:\n    cluster:\n      nodes: qianxunclub.com:6666\n```\n<!-- more -->\n在项目启动的时候，报错：\n\n```\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'redisTemplate' defined in class path resource [com/qianxunclub/starter/redis/autoconfigure/RedisConfig.class]: Unsatisfied dependency expressed through method 'redisTemplate' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n\t... 33 common frames omitted\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'redisConnectionFactory' defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n\t... 47 common frames omitted\nCaused by: redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled\n\tat redis.clients.jedis.Protocol.processError(Protocol.java:127)\n\tat redis.clients.jedis.Protocol.process(Protocol.java:161)\n\tat redis.clients.jedis.Protocol.read(Protocol.java:215)\n\tat redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)\n\tat redis.clients.jedis.Connection.getRawObjectMultiBulkReply(Connection.java:285)\n\tat redis.clients.jedis.Connection.getObjectMultiBulkReply(Connection.java:291)\n\tat redis.clients.jedis.Jedis.clusterSlots(Jedis.java:3376)\n\tat redis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots(JedisClusterInfoCache.java:54)\n\tat redis.clients.jedis.JedisClusterConnectionHandler.initializeSlotsCache(JedisClusterConnectionHandler.java:39)\n\tat redis.clients.jedis.JedisClusterConnectionHandler.<init>(JedisClusterConnectionHandler.java:17)\n\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.<init>(JedisSlotBasedConnectionHandler.java:20)\n\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.<init>(JedisSlotBasedConnectionHandler.java:15)\n\tat redis.clients.jedis.BinaryJedisCluster.<init>(BinaryJedisCluster.java:41)\n\tat redis.clients.jedis.JedisCluster.<init>(JedisCluster.java:83)\n\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:306)\n\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:280)\n\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.afterPropertiesSet(JedisConnectionFactory.java:241)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)\n\t... 58 common frames omitted\nDisconnected from the target VM, address: '127.0.0.1:52157', transport: 'socket'\n\nProcess finished with exit code 1\n\n```\n\n# 异常分析\n\n从报错误的信息`ERR This instance has cluster support disabled`很明显看得出来，是没有启动redis集群功能，可是我项目配置的集群的配置方式，要么修改代码为单机配置，要么修改redis为集群方式。\n\n# 解决办法\n\n1、可以修改配置为单机redis配置：\n\n```yml\nspring:\n  redis:\n    host: qianxunclub.com\n    port: 6666\n```\n\n2、在安装redis的目录找到redis配置文件`redis.conf`，里面会找到配置：\n```\n# cluster-enabled yes\n```\n\n把注释去掉就可以了\n\n```\ncluster-enabled yes\n```","slug":"exception/redis-qi-dong-bao-cuo-cluster-support-disabled","published":1,"updated":"2020-03-11T10:48:16.851Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59f0004w8mxo9x4dx6s","content":"<h1 id=\"异常描述\"><a href=\"#异常描述\" class=\"headerlink\" title=\"异常描述\"></a>异常描述</h1><p>新建了一个项目，我自己的服务器安装了一个redis，安装的时候，基本上都是默认参数，然后SpringBoot配置如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    cluster:</span></span><br><span class=\"line\"><span class=\"attr\">      nodes:</span> <span class=\"string\">qianxunclub.com:6666</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>在项目启动的时候，报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &apos;redisTemplate&apos; defined in class path resource [com/qianxunclub/starter/redis/autoconfigure/RedisConfig.class]: Unsatisfied dependency expressed through method &apos;redisTemplate&apos; parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;redisConnectionFactory&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class=\"line\">\t... 33 common frames omitted</span><br><span class=\"line\">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;redisConnectionFactory&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class=\"line\">\t... 47 common frames omitted</span><br><span class=\"line\">Caused by: redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class=\"line\">\tat redis.clients.jedis.Protocol.processError(Protocol.java:127)</span><br><span class=\"line\">\tat redis.clients.jedis.Protocol.process(Protocol.java:161)</span><br><span class=\"line\">\tat redis.clients.jedis.Protocol.read(Protocol.java:215)</span><br><span class=\"line\">\tat redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)</span><br><span class=\"line\">\tat redis.clients.jedis.Connection.getRawObjectMultiBulkReply(Connection.java:285)</span><br><span class=\"line\">\tat redis.clients.jedis.Connection.getObjectMultiBulkReply(Connection.java:291)</span><br><span class=\"line\">\tat redis.clients.jedis.Jedis.clusterSlots(Jedis.java:3376)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots(JedisClusterInfoCache.java:54)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisClusterConnectionHandler.initializeSlotsCache(JedisClusterConnectionHandler.java:39)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisClusterConnectionHandler.&lt;init&gt;(JedisClusterConnectionHandler.java:17)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.&lt;init&gt;(JedisSlotBasedConnectionHandler.java:20)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.&lt;init&gt;(JedisSlotBasedConnectionHandler.java:15)</span><br><span class=\"line\">\tat redis.clients.jedis.BinaryJedisCluster.&lt;init&gt;(BinaryJedisCluster.java:41)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisCluster.&lt;init&gt;(JedisCluster.java:83)</span><br><span class=\"line\">\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:306)</span><br><span class=\"line\">\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:280)</span><br><span class=\"line\">\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.afterPropertiesSet(JedisConnectionFactory.java:241)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)</span><br><span class=\"line\">\t... 58 common frames omitted</span><br><span class=\"line\">Disconnected from the target VM, address: &apos;127.0.0.1:52157&apos;, transport: &apos;socket&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 1</span><br></pre></td></tr></table></figure>\n<h1 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h1><p>从报错误的信息<code>ERR This instance has cluster support disabled</code>很明显看得出来，是没有启动redis集群功能，可是我项目配置的集群的配置方式，要么修改代码为单机配置，要么修改redis为集群方式。</p>\n<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><p>1、可以修改配置为单机redis配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">qianxunclub.com</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">6666</span></span><br></pre></td></tr></table></figure>\n<p>2、在安装redis的目录找到redis配置文件<code>redis.conf</code>，里面会找到配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cluster-enabled yes</span><br></pre></td></tr></table></figure></p>\n<p>把注释去掉就可以了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cluster-enabled yes</span><br></pre></td></tr></table></figure>","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"异常描述\"><a href=\"#异常描述\" class=\"headerlink\" title=\"异常描述\"></a>异常描述</h1><p>新建了一个项目，我自己的服务器安装了一个redis，安装的时候，基本上都是默认参数，然后SpringBoot配置如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    cluster:</span></span><br><span class=\"line\"><span class=\"attr\">      nodes:</span> <span class=\"string\">qianxunclub.com:6666</span></span><br></pre></td></tr></table></figure>","more":"<p>在项目启动的时候，报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &apos;redisTemplate&apos; defined in class path resource [com/qianxunclub/starter/redis/autoconfigure/RedisConfig.class]: Unsatisfied dependency expressed through method &apos;redisTemplate&apos; parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;redisConnectionFactory&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class=\"line\">\t... 33 common frames omitted</span><br><span class=\"line\">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &apos;redisConnectionFactory&apos; defined in class path resource [org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration$RedisConnectionConfiguration.class]: Invocation of init method failed; nested exception is redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1628)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:555)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)</span><br><span class=\"line\">\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)</span><br><span class=\"line\">\t... 47 common frames omitted</span><br><span class=\"line\">Caused by: redis.clients.jedis.exceptions.JedisDataException: ERR This instance has cluster support disabled</span><br><span class=\"line\">\tat redis.clients.jedis.Protocol.processError(Protocol.java:127)</span><br><span class=\"line\">\tat redis.clients.jedis.Protocol.process(Protocol.java:161)</span><br><span class=\"line\">\tat redis.clients.jedis.Protocol.read(Protocol.java:215)</span><br><span class=\"line\">\tat redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:340)</span><br><span class=\"line\">\tat redis.clients.jedis.Connection.getRawObjectMultiBulkReply(Connection.java:285)</span><br><span class=\"line\">\tat redis.clients.jedis.Connection.getObjectMultiBulkReply(Connection.java:291)</span><br><span class=\"line\">\tat redis.clients.jedis.Jedis.clusterSlots(Jedis.java:3376)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisClusterInfoCache.discoverClusterNodesAndSlots(JedisClusterInfoCache.java:54)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisClusterConnectionHandler.initializeSlotsCache(JedisClusterConnectionHandler.java:39)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisClusterConnectionHandler.&lt;init&gt;(JedisClusterConnectionHandler.java:17)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.&lt;init&gt;(JedisSlotBasedConnectionHandler.java:20)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisSlotBasedConnectionHandler.&lt;init&gt;(JedisSlotBasedConnectionHandler.java:15)</span><br><span class=\"line\">\tat redis.clients.jedis.BinaryJedisCluster.&lt;init&gt;(BinaryJedisCluster.java:41)</span><br><span class=\"line\">\tat redis.clients.jedis.JedisCluster.&lt;init&gt;(JedisCluster.java:83)</span><br><span class=\"line\">\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:306)</span><br><span class=\"line\">\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.createCluster(JedisConnectionFactory.java:280)</span><br><span class=\"line\">\tat org.springframework.data.redis.connection.jedis.JedisConnectionFactory.afterPropertiesSet(JedisConnectionFactory.java:241)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1687)</span><br><span class=\"line\">\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1624)</span><br><span class=\"line\">\t... 58 common frames omitted</span><br><span class=\"line\">Disconnected from the target VM, address: &apos;127.0.0.1:52157&apos;, transport: &apos;socket&apos;</span><br><span class=\"line\"></span><br><span class=\"line\">Process finished with exit code 1</span><br></pre></td></tr></table></figure>\n<h1 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h1><p>从报错误的信息<code>ERR This instance has cluster support disabled</code>很明显看得出来，是没有启动redis集群功能，可是我项目配置的集群的配置方式，要么修改代码为单机配置，要么修改redis为集群方式。</p>\n<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><p>1、可以修改配置为单机redis配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">qianxunclub.com</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">6666</span></span><br></pre></td></tr></table></figure>\n<p>2、在安装redis的目录找到redis配置文件<code>redis.conf</code>，里面会找到配置：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># cluster-enabled yes</span><br></pre></td></tr></table></figure></p>\n<p>把注释去掉就可以了</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cluster-enabled yes</span><br></pre></td></tr></table></figure>"},{"title":"kafka发送消息问题，could not be resolved","date":"2017-04-18T03:27:23.000Z","_content":"# 异常描述\n我用的阿里云服务器，我在服务器上面安装了一个kafka \n为啥不能发送的，百度了好多 说啥DNS不对.\n\n`\n2016/09/18 11:11:46 [error] 5720#0: [lua] producer.lua:258: buffered messages send to kafka err: iz9405kumw9z could not be resolved (3: Host not found), retryable: true, topic: lualog, partition_id: 0, length: 1, context: ngx.timer, clie \nnt: 183.12.65.116, server: 0.0.0.0:80\n`\n<!-- more -->\nkafka配置文件（config/server.properties）： \n\n![](http://img.ask.csdn.net/upload/201609/18/1474168727_238864.png)\n\nnginx日志： \n![](http://img.ask.csdn.net/upload/201609/18/1474168585_423649.png)\n\n\n# 异常分析\n\n从异常看，很明显是HOST访问不了，于是乎，要从Kfka网络配置入手了。\n\n# 解决办法\n\n![](http://img.ask.csdn.net/upload/201609/18/1474186554_681266.png)\n\n使用下面这个地址 我写的是内网IP地址，换成外网的就可以正常使用了！","source":"_posts/exception/kafka-exception-could-not-be-resolved.md","raw":"---\ntitle: kafka发送消息问题，could not be resolved\ndate: 2017-04-18 11:27:23\ntags: [Exception,Kafka]\ncategories: \n  - 异常记录\n---\n# 异常描述\n我用的阿里云服务器，我在服务器上面安装了一个kafka \n为啥不能发送的，百度了好多 说啥DNS不对.\n\n`\n2016/09/18 11:11:46 [error] 5720#0: [lua] producer.lua:258: buffered messages send to kafka err: iz9405kumw9z could not be resolved (3: Host not found), retryable: true, topic: lualog, partition_id: 0, length: 1, context: ngx.timer, clie \nnt: 183.12.65.116, server: 0.0.0.0:80\n`\n<!-- more -->\nkafka配置文件（config/server.properties）： \n\n![](http://img.ask.csdn.net/upload/201609/18/1474168727_238864.png)\n\nnginx日志： \n![](http://img.ask.csdn.net/upload/201609/18/1474168585_423649.png)\n\n\n# 异常分析\n\n从异常看，很明显是HOST访问不了，于是乎，要从Kfka网络配置入手了。\n\n# 解决办法\n\n![](http://img.ask.csdn.net/upload/201609/18/1474186554_681266.png)\n\n使用下面这个地址 我写的是内网IP地址，换成外网的就可以正常使用了！","slug":"exception/kafka-exception-could-not-be-resolved","published":1,"updated":"2020-03-11T10:48:16.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59j0007w8mxj72a1fe0","content":"<h1 id=\"异常描述\"><a href=\"#异常描述\" class=\"headerlink\" title=\"异常描述\"></a>异常描述</h1><p>我用的阿里云服务器，我在服务器上面安装了一个kafka<br>为啥不能发送的，百度了好多 说啥DNS不对.</p>\n<p><code>2016/09/18 11:11:46 [error] 5720#0: [lua] producer.lua:258: buffered messages send to kafka err: iz9405kumw9z could not be resolved (3: Host not found), retryable: true, topic: lualog, partition_id: 0, length: 1, context: ngx.timer, clie \nnt: 183.12.65.116, server: 0.0.0.0:80</code><br><a id=\"more\"></a><br>kafka配置文件（config/server.properties）： </p>\n<p><img src=\"http://img.ask.csdn.net/upload/201609/18/1474168727_238864.png\" alt=\"\"></p>\n<p>nginx日志：<br><img src=\"http://img.ask.csdn.net/upload/201609/18/1474168585_423649.png\" alt=\"\"></p>\n<h1 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h1><p>从异常看，很明显是HOST访问不了，于是乎，要从Kfka网络配置入手了。</p>\n<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><p><img src=\"http://img.ask.csdn.net/upload/201609/18/1474186554_681266.png\" alt=\"\"></p>\n<p>使用下面这个地址 我写的是内网IP地址，换成外网的就可以正常使用了！</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"异常描述\"><a href=\"#异常描述\" class=\"headerlink\" title=\"异常描述\"></a>异常描述</h1><p>我用的阿里云服务器，我在服务器上面安装了一个kafka<br>为啥不能发送的，百度了好多 说啥DNS不对.</p>\n<p><code>2016/09/18 11:11:46 [error] 5720#0: [lua] producer.lua:258: buffered messages send to kafka err: iz9405kumw9z could not be resolved (3: Host not found), retryable: true, topic: lualog, partition_id: 0, length: 1, context: ngx.timer, clie \nnt: 183.12.65.116, server: 0.0.0.0:80</code><br>","more":"<br>kafka配置文件（config/server.properties）： </p>\n<p><img src=\"http://img.ask.csdn.net/upload/201609/18/1474168727_238864.png\" alt=\"\"></p>\n<p>nginx日志：<br><img src=\"http://img.ask.csdn.net/upload/201609/18/1474168585_423649.png\" alt=\"\"></p>\n<h1 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h1><p>从异常看，很明显是HOST访问不了，于是乎，要从Kfka网络配置入手了。</p>\n<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><p><img src=\"http://img.ask.csdn.net/upload/201609/18/1474186554_681266.png\" alt=\"\"></p>\n<p>使用下面这个地址 我写的是内网IP地址，换成外网的就可以正常使用了！</p>"},{"title":"jstat命令查看jvm的GC情况","date":"2020-03-12T03:41:37.000Z","_content":"<font color=red>注意！！！：使用的jdk版本是jdk8.</font>\n\njstat命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下：\n\n\tjstat [-命令选项] [vmid] [间隔时间/毫秒] [查询次数]\n\n类加载统计：","source":"_posts/jvm/jvm-gc-jstat.md","raw":"---\ntitle: jstat命令查看jvm的GC情况\ndate: 2020-03-12 11:41:37\ntags: [Java,jvm]\ncategories: \n  - jvm\n  - java\n  - gc\n  - jstat\n\n---\n<font color=red>注意！！！：使用的jdk版本是jdk8.</font>\n\njstat命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下：\n\n\tjstat [-命令选项] [vmid] [间隔时间/毫秒] [查询次数]\n\n类加载统计：","slug":"jvm/jvm-gc-jstat","published":1,"updated":"2020-03-12T02:31:59.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59k0008w8mx8wno15br","content":"<font color=\"red\">注意！！！：使用的jdk版本是jdk8.</font>\n\n<p>jstat命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下：</p>\n<pre><code>jstat [-命令选项] [vmid] [间隔时间/毫秒] [查询次数]\n</code></pre><p>类加载统计：</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"","more":"<font color=\"red\">注意！！！：使用的jdk版本是jdk8.</font>\n\n<p>jstat命令可以查看堆内存各部分的使用量，以及加载类的数量。命令的格式如下：</p>\n<pre><code>jstat [-命令选项] [vmid] [间隔时间/毫秒] [查询次数]\n</code></pre><p>类加载统计：</p>\n"},{"title":"尼玛啊！坑爹的朋友圈！请放过我爸我妈吧！","date":"2017-01-11T16:00:00.000Z","sid":"ee0a6100-b8ac-4949-9a6a-53c8672a76af","_content":"\n\n说真的，现在这些无良商家真特么坑爹，，这些为了骗中老年人流量的转发\n真的很醉人，而且大部分内容都是虚假的，有的为了骗点击量，那些标题真的也是取的非常有颜色啊，喵真的都想举报了，求还给爸妈一个正常的世界，也给我们一个安静的朋友圈。\n\n<!-- more -->\n\n各位叔叔阿姨们，真的别相信这些了！！\n\n![](http://ofbphtmkb.bkt.clouddn.com/aa21b7f349f74b8d9d5484a08f161d8d_th.jpeg)\n![](http://ofbphtmkb.bkt.clouddn.com/wrwerwer.jpeg)\n![](http://ofbphtmkb.bkt.clouddn.com/fa143c593af94139be77249449f8ccb8_th.jpeg)\n","source":"_posts/other/ni-ma-a-keng-die-de-peng-you-quan-qing-fang-guo-wo-ba-wo-ma-ba.md","raw":"---\ntitle: 尼玛啊！坑爹的朋友圈！请放过我爸我妈吧！\ndate: 2017-01-12 00:00:00\nsid: ee0a6100-b8ac-4949-9a6a-53c8672a76af\ntags: [图片,搞笑]\ncategories: \n  - 其他\n---\n\n\n说真的，现在这些无良商家真特么坑爹，，这些为了骗中老年人流量的转发\n真的很醉人，而且大部分内容都是虚假的，有的为了骗点击量，那些标题真的也是取的非常有颜色啊，喵真的都想举报了，求还给爸妈一个正常的世界，也给我们一个安静的朋友圈。\n\n<!-- more -->\n\n各位叔叔阿姨们，真的别相信这些了！！\n\n![](http://ofbphtmkb.bkt.clouddn.com/aa21b7f349f74b8d9d5484a08f161d8d_th.jpeg)\n![](http://ofbphtmkb.bkt.clouddn.com/wrwerwer.jpeg)\n![](http://ofbphtmkb.bkt.clouddn.com/fa143c593af94139be77249449f8ccb8_th.jpeg)\n","slug":"other/ni-ma-a-keng-die-de-peng-you-quan-qing-fang-guo-wo-ba-wo-ma-ba","published":1,"updated":"2020-03-11T10:48:16.857Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59l0009w8mxyiodn2t4","content":"<p>说真的，现在这些无良商家真特么坑爹，，这些为了骗中老年人流量的转发<br>真的很醉人，而且大部分内容都是虚假的，有的为了骗点击量，那些标题真的也是取的非常有颜色啊，喵真的都想举报了，求还给爸妈一个正常的世界，也给我们一个安静的朋友圈。</p>\n<a id=\"more\"></a>\n<p>各位叔叔阿姨们，真的别相信这些了！！</p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/aa21b7f349f74b8d9d5484a08f161d8d_th.jpeg\" alt=\"\"><br><img src=\"http://ofbphtmkb.bkt.clouddn.com/wrwerwer.jpeg\" alt=\"\"><br><img src=\"http://ofbphtmkb.bkt.clouddn.com/fa143c593af94139be77249449f8ccb8_th.jpeg\" alt=\"\"></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>说真的，现在这些无良商家真特么坑爹，，这些为了骗中老年人流量的转发<br>真的很醉人，而且大部分内容都是虚假的，有的为了骗点击量，那些标题真的也是取的非常有颜色啊，喵真的都想举报了，求还给爸妈一个正常的世界，也给我们一个安静的朋友圈。</p>","more":"<p>各位叔叔阿姨们，真的别相信这些了！！</p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/aa21b7f349f74b8d9d5484a08f161d8d_th.jpeg\" alt=\"\"><br><img src=\"http://ofbphtmkb.bkt.clouddn.com/wrwerwer.jpeg\" alt=\"\"><br><img src=\"http://ofbphtmkb.bkt.clouddn.com/fa143c593af94139be77249449f8ccb8_th.jpeg\" alt=\"\"></p>"},{"title":"自动化工具 ansible完整安装","date":"2016-11-15T16:00:00.000Z","_content":"\n批量的在远程服务器上执行命令\n\n# 1.什么是ansible\n\nansible是个什么东西呢？官方的title是“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化部署APP；自动化管理配置项；自动化的持续交付；自动化的（AWS）云服务管理。\n\n<!--more-->\n\n所有的这几个目标本质上来说都是在一个台或者几台服务器上，执行一系列的命令而已。就像我之前有介绍过的Fabric，以及我们基于Fabric开发的自动化应用部署的工具： Essay 。都是做了这么个事——批量的在远程服务器上执行命令 。\n\n那么fabric和ansible有什么差别呢？简单来说fabric像是一个工具箱，提供了很多好用的工具，用来在Remote执行命令，而Ansible则是提供了一套简单的流程，你要按照它的流程来做，就能轻松完成任务。这就像是库和框架的关系一样。\n\n当然，它们之间也是有共同点的——都是基于 paramiko 开发的。这个paramiko是什么呢？它是一个纯Python实现的ssh协议库。因此fabric和ansible还有一个共同点就是不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。\n\n# 2.快速安装\n\n上面简单介绍了下这是个什么东西，怎么安装呢？也很简单，因为ansible是python开发的，因此可以这么安装:\n\n使用yum安装\n\n```\nyum install epel-release -y  \nyum install ansible -y  \n\n```\n\n# 3.配置\n\nansible通过文件来定义你要管理的主机,也就是说把你需要的管理的主机ip写到一个文件中即可。\n这个文件一般名为hosts，它可以放在多个路径下，也可以自定义名称和路径。 默认我们用/etc/ansible/hosts这个文件即可\n\nhosts文件的格式为：\n\n```\n[node]\n10.2.2.121  \n10.2.2.122  \n\n```\n\n默认ssh端口是22，如果主机端口号是其他的，在ip后加:端口号即可，如10.2.1.203的端口是2211，属于test组，格式如下：\n\n```\n[test]\n10.2.1.201  \n10.2.1.202  \n10.2.1.203:2211  \n\n```\n\n# 4.使用ssh-keygen产生ssh密钥\n\n```\n[root@test-201 ~]# ssh-keygen \nGenerating public/private rsa key pair.  \nEnter file in which to save the key (/root/.ssh/id_rsa):  \nEnter passphrase (empty for no passphrase):  \nEnter same passphrase again:  \nYour identification has been saved in /root/.ssh/id_rsa.  \nYour public key has been saved in /root/.ssh/id_rsa.pub.  \nThe key fingerprint is:  \ndd:20:23:7c:1a:2e:01:bf:b1:67:7a:08:87:5f:e6:7e root@test-201  \nThe key’s randomart image is:  \n+–[ RSA 2048]—-+ \n| . | \n| o . | \n| + + + . | \n| . * = + o | \n| o = B S . . | \n| + X | \n| + o | \n| o E | \n| .. | \n+—————–+\n\n```\n\n将公钥发送到要管理的服务器 使用ssh-copy-id命令\n\n比如要发送到10.2.31.202，使用如下命令：\n\n```\n[root@test-201 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub 10.2.31.202 \nroot@10.2.31.202’s password:  \nNow try logging into the machine, with “ssh ‘10.2.31.202’”, and check in:\n\n.ssh/authorized_keys\n\nto make sure we haven’t added extra keys that you weren’t expecting.  \n\n```\n\n# 5.使用ansible\n\n命令格式如下： `ansible + 主机组名称 + -m + 模块名称 + -a + 参数`\n\n主机组名称，即hosts中定义的主机组名称\n\n-m 指使用模块，后加指定的模块名称  \n-a 指传给模块的参数\n\n在不指定模块时，默认调用command模块。\n\n如我们想看下test组上的服务器的/tmp下面有哪些文件，可以使用如下命令\n\n`ansible test -a “ls /tmp”`\n\n```\n[root@test-201 ~]# ansible test -a \"ls /tmp\"\n10.2.31.203 | SUCCESS | rc=0 >>  \nansible_EMEGZI  \ntestabcdefg  \n\n```\n\n我们可以使用copy模块，将本地文件发送到目标服务器上，如：\n\n`ansible test -m copy -a “src=/root/install.log dest=/tmp”`\n\n这个命令是将本地的/root/install.log发送到test组的/tmp下，执行的效果如下：\n\n```\n[root@test-201 ~]# ansible test -m copy -a \"src=/root/install.log dest=/tmp\"\n10.2.31.203 | SUCCESS => {  \n    \"changed\": true, \n    \"checksum\": \"114ee153946d9cd2e690c405e5796a4fcc400542\", \n    \"dest\": \"/tmp/install.log\", \n    \"gid\": 0, \n    \"group\": \"root\", \n    \"md5sum\": \"17b18780156a31a65d62a324110d686e\", \n    \"mode\": \"0644\", \n    \"owner\": \"root\", \n    \"secontext\": \"unconfined_u:object_r:admin_home_t:s0\", \n    \"size\": 43688, \n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1466157410.68-191787255687953/source\", \n    \"state\": \"file\", \n    \"uid\": 0\n}\n\n```\n\n你可以使用ansible-doc –list查看当前的所有模块\n\n```\n[root@test-201 ~]# ansible-doc  --list                       \n….\n….                                                        \nauthorized_key                     Adds or removes an SSH authorized key  \nazure                              create or terminate a virtual machine in azure  \nazure_rm_deployment                Create or destroy Azure Resource Manager template deployments  \nazure_rm_networkinterface          Manage Azure network interfaces.  \nazure_rm_networkinterface_facts    Get network interface facts.  \nazure_rm_publicipaddress           Manage Azure Public IP Addresses.  \nazure_rm_publicipaddress_facts     Get public IP facts.  \nazure_rm_resourcegroup             Manage Azure resource groups.  \nazure_rm_resourcegroup_facts       Get resource group facts.  \nazure_rm_securitygroup             Manage Azure network security groups.  \n….\n…\n\n```\n\nansible自带了很多丰富的模块，详细请看：\n[http://docs.ansible.com/ansible/list_of_all_modules.html](http://docs.ansible.com/ansible/list_of_all_modules.html)\n\n# 6.小技巧:\n\n有时候如果想直接操作某台服务器,但又没有在hosts里定义这台服务器时,可以使用如下命令:\n\n`ansible all -i ‘服务器ip,’`  \n注意服务器ip后面要加个,\n\n如 `ansible all -i ‘10.2.31.201,’ -u test -k -a ‘uptime’`\n\nBUG?\n\n目前遇到两个bug(也可能是我的使用方式不对,正在关注中) 1.在中文路径下无法使用.  \n如果在一个含中文的路径下面使用ansible,会无法执行,提示:   UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe4 in position 14  \n所以不要跑到中文路径下面去执行ansible\n\n2.su命令不能用.\n使用su命令不成功,无在目标机器上通过一个普通用户su切换为root执行相关命令 错误如下: \n```\nansible Timeout (12s) waiting for privilege escalation prompt\n```","source":"_posts/linux/zi-dong-hua-gong-ju-ansiblewan-zheng-an-zhuang-pi-liang-de-zai-yuan-cheng-fu-wu-qi-shang-zhi-xing-ming-ling.md","raw":"---\ntitle: 自动化工具 ansible完整安装\ndate: 2016-11-16 00:00:00\ntags: [Linux]\ncategories: \n  - Linux\n---\n\n批量的在远程服务器上执行命令\n\n# 1.什么是ansible\n\nansible是个什么东西呢？官方的title是“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化部署APP；自动化管理配置项；自动化的持续交付；自动化的（AWS）云服务管理。\n\n<!--more-->\n\n所有的这几个目标本质上来说都是在一个台或者几台服务器上，执行一系列的命令而已。就像我之前有介绍过的Fabric，以及我们基于Fabric开发的自动化应用部署的工具： Essay 。都是做了这么个事——批量的在远程服务器上执行命令 。\n\n那么fabric和ansible有什么差别呢？简单来说fabric像是一个工具箱，提供了很多好用的工具，用来在Remote执行命令，而Ansible则是提供了一套简单的流程，你要按照它的流程来做，就能轻松完成任务。这就像是库和框架的关系一样。\n\n当然，它们之间也是有共同点的——都是基于 paramiko 开发的。这个paramiko是什么呢？它是一个纯Python实现的ssh协议库。因此fabric和ansible还有一个共同点就是不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。\n\n# 2.快速安装\n\n上面简单介绍了下这是个什么东西，怎么安装呢？也很简单，因为ansible是python开发的，因此可以这么安装:\n\n使用yum安装\n\n```\nyum install epel-release -y  \nyum install ansible -y  \n\n```\n\n# 3.配置\n\nansible通过文件来定义你要管理的主机,也就是说把你需要的管理的主机ip写到一个文件中即可。\n这个文件一般名为hosts，它可以放在多个路径下，也可以自定义名称和路径。 默认我们用/etc/ansible/hosts这个文件即可\n\nhosts文件的格式为：\n\n```\n[node]\n10.2.2.121  \n10.2.2.122  \n\n```\n\n默认ssh端口是22，如果主机端口号是其他的，在ip后加:端口号即可，如10.2.1.203的端口是2211，属于test组，格式如下：\n\n```\n[test]\n10.2.1.201  \n10.2.1.202  \n10.2.1.203:2211  \n\n```\n\n# 4.使用ssh-keygen产生ssh密钥\n\n```\n[root@test-201 ~]# ssh-keygen \nGenerating public/private rsa key pair.  \nEnter file in which to save the key (/root/.ssh/id_rsa):  \nEnter passphrase (empty for no passphrase):  \nEnter same passphrase again:  \nYour identification has been saved in /root/.ssh/id_rsa.  \nYour public key has been saved in /root/.ssh/id_rsa.pub.  \nThe key fingerprint is:  \ndd:20:23:7c:1a:2e:01:bf:b1:67:7a:08:87:5f:e6:7e root@test-201  \nThe key’s randomart image is:  \n+–[ RSA 2048]—-+ \n| . | \n| o . | \n| + + + . | \n| . * = + o | \n| o = B S . . | \n| + X | \n| + o | \n| o E | \n| .. | \n+—————–+\n\n```\n\n将公钥发送到要管理的服务器 使用ssh-copy-id命令\n\n比如要发送到10.2.31.202，使用如下命令：\n\n```\n[root@test-201 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub 10.2.31.202 \nroot@10.2.31.202’s password:  \nNow try logging into the machine, with “ssh ‘10.2.31.202’”, and check in:\n\n.ssh/authorized_keys\n\nto make sure we haven’t added extra keys that you weren’t expecting.  \n\n```\n\n# 5.使用ansible\n\n命令格式如下： `ansible + 主机组名称 + -m + 模块名称 + -a + 参数`\n\n主机组名称，即hosts中定义的主机组名称\n\n-m 指使用模块，后加指定的模块名称  \n-a 指传给模块的参数\n\n在不指定模块时，默认调用command模块。\n\n如我们想看下test组上的服务器的/tmp下面有哪些文件，可以使用如下命令\n\n`ansible test -a “ls /tmp”`\n\n```\n[root@test-201 ~]# ansible test -a \"ls /tmp\"\n10.2.31.203 | SUCCESS | rc=0 >>  \nansible_EMEGZI  \ntestabcdefg  \n\n```\n\n我们可以使用copy模块，将本地文件发送到目标服务器上，如：\n\n`ansible test -m copy -a “src=/root/install.log dest=/tmp”`\n\n这个命令是将本地的/root/install.log发送到test组的/tmp下，执行的效果如下：\n\n```\n[root@test-201 ~]# ansible test -m copy -a \"src=/root/install.log dest=/tmp\"\n10.2.31.203 | SUCCESS => {  \n    \"changed\": true, \n    \"checksum\": \"114ee153946d9cd2e690c405e5796a4fcc400542\", \n    \"dest\": \"/tmp/install.log\", \n    \"gid\": 0, \n    \"group\": \"root\", \n    \"md5sum\": \"17b18780156a31a65d62a324110d686e\", \n    \"mode\": \"0644\", \n    \"owner\": \"root\", \n    \"secontext\": \"unconfined_u:object_r:admin_home_t:s0\", \n    \"size\": 43688, \n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1466157410.68-191787255687953/source\", \n    \"state\": \"file\", \n    \"uid\": 0\n}\n\n```\n\n你可以使用ansible-doc –list查看当前的所有模块\n\n```\n[root@test-201 ~]# ansible-doc  --list                       \n….\n….                                                        \nauthorized_key                     Adds or removes an SSH authorized key  \nazure                              create or terminate a virtual machine in azure  \nazure_rm_deployment                Create or destroy Azure Resource Manager template deployments  \nazure_rm_networkinterface          Manage Azure network interfaces.  \nazure_rm_networkinterface_facts    Get network interface facts.  \nazure_rm_publicipaddress           Manage Azure Public IP Addresses.  \nazure_rm_publicipaddress_facts     Get public IP facts.  \nazure_rm_resourcegroup             Manage Azure resource groups.  \nazure_rm_resourcegroup_facts       Get resource group facts.  \nazure_rm_securitygroup             Manage Azure network security groups.  \n….\n…\n\n```\n\nansible自带了很多丰富的模块，详细请看：\n[http://docs.ansible.com/ansible/list_of_all_modules.html](http://docs.ansible.com/ansible/list_of_all_modules.html)\n\n# 6.小技巧:\n\n有时候如果想直接操作某台服务器,但又没有在hosts里定义这台服务器时,可以使用如下命令:\n\n`ansible all -i ‘服务器ip,’`  \n注意服务器ip后面要加个,\n\n如 `ansible all -i ‘10.2.31.201,’ -u test -k -a ‘uptime’`\n\nBUG?\n\n目前遇到两个bug(也可能是我的使用方式不对,正在关注中) 1.在中文路径下无法使用.  \n如果在一个含中文的路径下面使用ansible,会无法执行,提示:   UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe4 in position 14  \n所以不要跑到中文路径下面去执行ansible\n\n2.su命令不能用.\n使用su命令不成功,无在目标机器上通过一个普通用户su切换为root执行相关命令 错误如下: \n```\nansible Timeout (12s) waiting for privilege escalation prompt\n```","slug":"linux/zi-dong-hua-gong-ju-ansiblewan-zheng-an-zhuang-pi-liang-de-zai-yuan-cheng-fu-wu-qi-shang-zhi-xing-ming-ling","published":1,"updated":"2020-03-11T10:48:16.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59n000dw8mxeul1i3u9","content":"<p>批量的在远程服务器上执行命令</p>\n<h1 id=\"1-什么是ansible\"><a href=\"#1-什么是ansible\" class=\"headerlink\" title=\"1.什么是ansible\"></a>1.什么是ansible</h1><p>ansible是个什么东西呢？官方的title是“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化部署APP；自动化管理配置项；自动化的持续交付；自动化的（AWS）云服务管理。</p>\n<a id=\"more\"></a>\n<p>所有的这几个目标本质上来说都是在一个台或者几台服务器上，执行一系列的命令而已。就像我之前有介绍过的Fabric，以及我们基于Fabric开发的自动化应用部署的工具： Essay 。都是做了这么个事——批量的在远程服务器上执行命令 。</p>\n<p>那么fabric和ansible有什么差别呢？简单来说fabric像是一个工具箱，提供了很多好用的工具，用来在Remote执行命令，而Ansible则是提供了一套简单的流程，你要按照它的流程来做，就能轻松完成任务。这就像是库和框架的关系一样。</p>\n<p>当然，它们之间也是有共同点的——都是基于 paramiko 开发的。这个paramiko是什么呢？它是一个纯Python实现的ssh协议库。因此fabric和ansible还有一个共同点就是不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。</p>\n<h1 id=\"2-快速安装\"><a href=\"#2-快速安装\" class=\"headerlink\" title=\"2.快速安装\"></a>2.快速安装</h1><p>上面简单介绍了下这是个什么东西，怎么安装呢？也很简单，因为ansible是python开发的，因此可以这么安装:</p>\n<p>使用yum安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release -y  </span><br><span class=\"line\">yum install ansible -y</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置</h1><p>ansible通过文件来定义你要管理的主机,也就是说把你需要的管理的主机ip写到一个文件中即可。<br>这个文件一般名为hosts，它可以放在多个路径下，也可以自定义名称和路径。 默认我们用/etc/ansible/hosts这个文件即可</p>\n<p>hosts文件的格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[node]</span><br><span class=\"line\">10.2.2.121  </span><br><span class=\"line\">10.2.2.122</span><br></pre></td></tr></table></figure>\n<p>默认ssh端口是22，如果主机端口号是其他的，在ip后加:端口号即可，如10.2.1.203的端口是2211，属于test组，格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[test]</span><br><span class=\"line\">10.2.1.201  </span><br><span class=\"line\">10.2.1.202  </span><br><span class=\"line\">10.2.1.203:2211</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-使用ssh-keygen产生ssh密钥\"><a href=\"#4-使用ssh-keygen产生ssh密钥\" class=\"headerlink\" title=\"4.使用ssh-keygen产生ssh密钥\"></a>4.使用ssh-keygen产生ssh密钥</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ssh-keygen </span><br><span class=\"line\">Generating public/private rsa key pair.  </span><br><span class=\"line\">Enter file in which to save the key (/root/.ssh/id_rsa):  </span><br><span class=\"line\">Enter passphrase (empty for no passphrase):  </span><br><span class=\"line\">Enter same passphrase again:  </span><br><span class=\"line\">Your identification has been saved in /root/.ssh/id_rsa.  </span><br><span class=\"line\">Your public key has been saved in /root/.ssh/id_rsa.pub.  </span><br><span class=\"line\">The key fingerprint is:  </span><br><span class=\"line\">dd:20:23:7c:1a:2e:01:bf:b1:67:7a:08:87:5f:e6:7e root@test-201  </span><br><span class=\"line\">The key’s randomart image is:  </span><br><span class=\"line\">+–[ RSA 2048]—-+ </span><br><span class=\"line\">| . | </span><br><span class=\"line\">| o . | </span><br><span class=\"line\">| + + + . | </span><br><span class=\"line\">| . * = + o | </span><br><span class=\"line\">| o = B S . . | </span><br><span class=\"line\">| + X | </span><br><span class=\"line\">| + o | </span><br><span class=\"line\">| o E | </span><br><span class=\"line\">| .. | </span><br><span class=\"line\">+—————–+</span><br></pre></td></tr></table></figure>\n<p>将公钥发送到要管理的服务器 使用ssh-copy-id命令</p>\n<p>比如要发送到10.2.31.202，使用如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub 10.2.31.202 </span><br><span class=\"line\">root@10.2.31.202’s password:  </span><br><span class=\"line\">Now try logging into the machine, with “ssh ‘10.2.31.202’”, and check in:</span><br><span class=\"line\"></span><br><span class=\"line\">.ssh/authorized_keys</span><br><span class=\"line\"></span><br><span class=\"line\">to make sure we haven’t added extra keys that you weren’t expecting.</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-使用ansible\"><a href=\"#5-使用ansible\" class=\"headerlink\" title=\"5.使用ansible\"></a>5.使用ansible</h1><p>命令格式如下： <code>ansible + 主机组名称 + -m + 模块名称 + -a + 参数</code></p>\n<p>主机组名称，即hosts中定义的主机组名称</p>\n<p>-m 指使用模块，后加指定的模块名称<br>-a 指传给模块的参数</p>\n<p>在不指定模块时，默认调用command模块。</p>\n<p>如我们想看下test组上的服务器的/tmp下面有哪些文件，可以使用如下命令</p>\n<p><code>ansible test -a “ls /tmp”</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ansible test -a &quot;ls /tmp&quot;</span><br><span class=\"line\">10.2.31.203 | SUCCESS | rc=0 &gt;&gt;  </span><br><span class=\"line\">ansible_EMEGZI  </span><br><span class=\"line\">testabcdefg</span><br></pre></td></tr></table></figure>\n<p>我们可以使用copy模块，将本地文件发送到目标服务器上，如：</p>\n<p><code>ansible test -m copy -a “src=/root/install.log dest=/tmp”</code></p>\n<p>这个命令是将本地的/root/install.log发送到test组的/tmp下，执行的效果如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ansible test -m copy -a &quot;src=/root/install.log dest=/tmp&quot;</span><br><span class=\"line\">10.2.31.203 | SUCCESS =&gt; &#123;  </span><br><span class=\"line\">    &quot;changed&quot;: true, </span><br><span class=\"line\">    &quot;checksum&quot;: &quot;114ee153946d9cd2e690c405e5796a4fcc400542&quot;, </span><br><span class=\"line\">    &quot;dest&quot;: &quot;/tmp/install.log&quot;, </span><br><span class=\"line\">    &quot;gid&quot;: 0, </span><br><span class=\"line\">    &quot;group&quot;: &quot;root&quot;, </span><br><span class=\"line\">    &quot;md5sum&quot;: &quot;17b18780156a31a65d62a324110d686e&quot;, </span><br><span class=\"line\">    &quot;mode&quot;: &quot;0644&quot;, </span><br><span class=\"line\">    &quot;owner&quot;: &quot;root&quot;, </span><br><span class=\"line\">    &quot;secontext&quot;: &quot;unconfined_u:object_r:admin_home_t:s0&quot;, </span><br><span class=\"line\">    &quot;size&quot;: 43688, </span><br><span class=\"line\">    &quot;src&quot;: &quot;/root/.ansible/tmp/ansible-tmp-1466157410.68-191787255687953/source&quot;, </span><br><span class=\"line\">    &quot;state&quot;: &quot;file&quot;, </span><br><span class=\"line\">    &quot;uid&quot;: 0</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你可以使用ansible-doc –list查看当前的所有模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ansible-doc  --list                       </span><br><span class=\"line\">….</span><br><span class=\"line\">….                                                        </span><br><span class=\"line\">authorized_key                     Adds or removes an SSH authorized key  </span><br><span class=\"line\">azure                              create or terminate a virtual machine in azure  </span><br><span class=\"line\">azure_rm_deployment                Create or destroy Azure Resource Manager template deployments  </span><br><span class=\"line\">azure_rm_networkinterface          Manage Azure network interfaces.  </span><br><span class=\"line\">azure_rm_networkinterface_facts    Get network interface facts.  </span><br><span class=\"line\">azure_rm_publicipaddress           Manage Azure Public IP Addresses.  </span><br><span class=\"line\">azure_rm_publicipaddress_facts     Get public IP facts.  </span><br><span class=\"line\">azure_rm_resourcegroup             Manage Azure resource groups.  </span><br><span class=\"line\">azure_rm_resourcegroup_facts       Get resource group facts.  </span><br><span class=\"line\">azure_rm_securitygroup             Manage Azure network security groups.  </span><br><span class=\"line\">….</span><br><span class=\"line\">…</span><br></pre></td></tr></table></figure>\n<p>ansible自带了很多丰富的模块，详细请看：<br><a href=\"http://docs.ansible.com/ansible/list_of_all_modules.html\" target=\"_blank\" rel=\"noopener\">http://docs.ansible.com/ansible/list_of_all_modules.html</a></p>\n<h1 id=\"6-小技巧\"><a href=\"#6-小技巧\" class=\"headerlink\" title=\"6.小技巧:\"></a>6.小技巧:</h1><p>有时候如果想直接操作某台服务器,但又没有在hosts里定义这台服务器时,可以使用如下命令:</p>\n<p><code>ansible all -i ‘服务器ip,’</code><br>注意服务器ip后面要加个,</p>\n<p>如 <code>ansible all -i ‘10.2.31.201,’ -u test -k -a ‘uptime’</code></p>\n<p>BUG?</p>\n<p>目前遇到两个bug(也可能是我的使用方式不对,正在关注中) 1.在中文路径下无法使用.<br>如果在一个含中文的路径下面使用ansible,会无法执行,提示:   UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe4 in position 14<br>所以不要跑到中文路径下面去执行ansible</p>\n<p>2.su命令不能用.<br>使用su命令不成功,无在目标机器上通过一个普通用户su切换为root执行相关命令 错误如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible Timeout (12s) waiting for privilege escalation prompt</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>批量的在远程服务器上执行命令</p>\n<h1 id=\"1-什么是ansible\"><a href=\"#1-什么是ansible\" class=\"headerlink\" title=\"1.什么是ansible\"></a>1.什么是ansible</h1><p>ansible是个什么东西呢？官方的title是“Ansible is Simple IT Automation”——简单的自动化IT工具。这个工具的目标有这么几项：让我们自动化部署APP；自动化管理配置项；自动化的持续交付；自动化的（AWS）云服务管理。</p>","more":"<p>所有的这几个目标本质上来说都是在一个台或者几台服务器上，执行一系列的命令而已。就像我之前有介绍过的Fabric，以及我们基于Fabric开发的自动化应用部署的工具： Essay 。都是做了这么个事——批量的在远程服务器上执行命令 。</p>\n<p>那么fabric和ansible有什么差别呢？简单来说fabric像是一个工具箱，提供了很多好用的工具，用来在Remote执行命令，而Ansible则是提供了一套简单的流程，你要按照它的流程来做，就能轻松完成任务。这就像是库和框架的关系一样。</p>\n<p>当然，它们之间也是有共同点的——都是基于 paramiko 开发的。这个paramiko是什么呢？它是一个纯Python实现的ssh协议库。因此fabric和ansible还有一个共同点就是不需要在远程主机上安装client/agents，因为它们是基于ssh来和远程主机通讯的。</p>\n<h1 id=\"2-快速安装\"><a href=\"#2-快速安装\" class=\"headerlink\" title=\"2.快速安装\"></a>2.快速安装</h1><p>上面简单介绍了下这是个什么东西，怎么安装呢？也很简单，因为ansible是python开发的，因此可以这么安装:</p>\n<p>使用yum安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release -y  </span><br><span class=\"line\">yum install ansible -y</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-配置\"><a href=\"#3-配置\" class=\"headerlink\" title=\"3.配置\"></a>3.配置</h1><p>ansible通过文件来定义你要管理的主机,也就是说把你需要的管理的主机ip写到一个文件中即可。<br>这个文件一般名为hosts，它可以放在多个路径下，也可以自定义名称和路径。 默认我们用/etc/ansible/hosts这个文件即可</p>\n<p>hosts文件的格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[node]</span><br><span class=\"line\">10.2.2.121  </span><br><span class=\"line\">10.2.2.122</span><br></pre></td></tr></table></figure>\n<p>默认ssh端口是22，如果主机端口号是其他的，在ip后加:端口号即可，如10.2.1.203的端口是2211，属于test组，格式如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[test]</span><br><span class=\"line\">10.2.1.201  </span><br><span class=\"line\">10.2.1.202  </span><br><span class=\"line\">10.2.1.203:2211</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-使用ssh-keygen产生ssh密钥\"><a href=\"#4-使用ssh-keygen产生ssh密钥\" class=\"headerlink\" title=\"4.使用ssh-keygen产生ssh密钥\"></a>4.使用ssh-keygen产生ssh密钥</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ssh-keygen </span><br><span class=\"line\">Generating public/private rsa key pair.  </span><br><span class=\"line\">Enter file in which to save the key (/root/.ssh/id_rsa):  </span><br><span class=\"line\">Enter passphrase (empty for no passphrase):  </span><br><span class=\"line\">Enter same passphrase again:  </span><br><span class=\"line\">Your identification has been saved in /root/.ssh/id_rsa.  </span><br><span class=\"line\">Your public key has been saved in /root/.ssh/id_rsa.pub.  </span><br><span class=\"line\">The key fingerprint is:  </span><br><span class=\"line\">dd:20:23:7c:1a:2e:01:bf:b1:67:7a:08:87:5f:e6:7e root@test-201  </span><br><span class=\"line\">The key’s randomart image is:  </span><br><span class=\"line\">+–[ RSA 2048]—-+ </span><br><span class=\"line\">| . | </span><br><span class=\"line\">| o . | </span><br><span class=\"line\">| + + + . | </span><br><span class=\"line\">| . * = + o | </span><br><span class=\"line\">| o = B S . . | </span><br><span class=\"line\">| + X | </span><br><span class=\"line\">| + o | </span><br><span class=\"line\">| o E | </span><br><span class=\"line\">| .. | </span><br><span class=\"line\">+—————–+</span><br></pre></td></tr></table></figure>\n<p>将公钥发送到要管理的服务器 使用ssh-copy-id命令</p>\n<p>比如要发送到10.2.31.202，使用如下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ssh-copy-id -i /root/.ssh/id_rsa.pub 10.2.31.202 </span><br><span class=\"line\">root@10.2.31.202’s password:  </span><br><span class=\"line\">Now try logging into the machine, with “ssh ‘10.2.31.202’”, and check in:</span><br><span class=\"line\"></span><br><span class=\"line\">.ssh/authorized_keys</span><br><span class=\"line\"></span><br><span class=\"line\">to make sure we haven’t added extra keys that you weren’t expecting.</span><br></pre></td></tr></table></figure>\n<h1 id=\"5-使用ansible\"><a href=\"#5-使用ansible\" class=\"headerlink\" title=\"5.使用ansible\"></a>5.使用ansible</h1><p>命令格式如下： <code>ansible + 主机组名称 + -m + 模块名称 + -a + 参数</code></p>\n<p>主机组名称，即hosts中定义的主机组名称</p>\n<p>-m 指使用模块，后加指定的模块名称<br>-a 指传给模块的参数</p>\n<p>在不指定模块时，默认调用command模块。</p>\n<p>如我们想看下test组上的服务器的/tmp下面有哪些文件，可以使用如下命令</p>\n<p><code>ansible test -a “ls /tmp”</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ansible test -a &quot;ls /tmp&quot;</span><br><span class=\"line\">10.2.31.203 | SUCCESS | rc=0 &gt;&gt;  </span><br><span class=\"line\">ansible_EMEGZI  </span><br><span class=\"line\">testabcdefg</span><br></pre></td></tr></table></figure>\n<p>我们可以使用copy模块，将本地文件发送到目标服务器上，如：</p>\n<p><code>ansible test -m copy -a “src=/root/install.log dest=/tmp”</code></p>\n<p>这个命令是将本地的/root/install.log发送到test组的/tmp下，执行的效果如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ansible test -m copy -a &quot;src=/root/install.log dest=/tmp&quot;</span><br><span class=\"line\">10.2.31.203 | SUCCESS =&gt; &#123;  </span><br><span class=\"line\">    &quot;changed&quot;: true, </span><br><span class=\"line\">    &quot;checksum&quot;: &quot;114ee153946d9cd2e690c405e5796a4fcc400542&quot;, </span><br><span class=\"line\">    &quot;dest&quot;: &quot;/tmp/install.log&quot;, </span><br><span class=\"line\">    &quot;gid&quot;: 0, </span><br><span class=\"line\">    &quot;group&quot;: &quot;root&quot;, </span><br><span class=\"line\">    &quot;md5sum&quot;: &quot;17b18780156a31a65d62a324110d686e&quot;, </span><br><span class=\"line\">    &quot;mode&quot;: &quot;0644&quot;, </span><br><span class=\"line\">    &quot;owner&quot;: &quot;root&quot;, </span><br><span class=\"line\">    &quot;secontext&quot;: &quot;unconfined_u:object_r:admin_home_t:s0&quot;, </span><br><span class=\"line\">    &quot;size&quot;: 43688, </span><br><span class=\"line\">    &quot;src&quot;: &quot;/root/.ansible/tmp/ansible-tmp-1466157410.68-191787255687953/source&quot;, </span><br><span class=\"line\">    &quot;state&quot;: &quot;file&quot;, </span><br><span class=\"line\">    &quot;uid&quot;: 0</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>你可以使用ansible-doc –list查看当前的所有模块</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@test-201 ~]# ansible-doc  --list                       </span><br><span class=\"line\">….</span><br><span class=\"line\">….                                                        </span><br><span class=\"line\">authorized_key                     Adds or removes an SSH authorized key  </span><br><span class=\"line\">azure                              create or terminate a virtual machine in azure  </span><br><span class=\"line\">azure_rm_deployment                Create or destroy Azure Resource Manager template deployments  </span><br><span class=\"line\">azure_rm_networkinterface          Manage Azure network interfaces.  </span><br><span class=\"line\">azure_rm_networkinterface_facts    Get network interface facts.  </span><br><span class=\"line\">azure_rm_publicipaddress           Manage Azure Public IP Addresses.  </span><br><span class=\"line\">azure_rm_publicipaddress_facts     Get public IP facts.  </span><br><span class=\"line\">azure_rm_resourcegroup             Manage Azure resource groups.  </span><br><span class=\"line\">azure_rm_resourcegroup_facts       Get resource group facts.  </span><br><span class=\"line\">azure_rm_securitygroup             Manage Azure network security groups.  </span><br><span class=\"line\">….</span><br><span class=\"line\">…</span><br></pre></td></tr></table></figure>\n<p>ansible自带了很多丰富的模块，详细请看：<br><a href=\"http://docs.ansible.com/ansible/list_of_all_modules.html\" target=\"_blank\" rel=\"noopener\">http://docs.ansible.com/ansible/list_of_all_modules.html</a></p>\n<h1 id=\"6-小技巧\"><a href=\"#6-小技巧\" class=\"headerlink\" title=\"6.小技巧:\"></a>6.小技巧:</h1><p>有时候如果想直接操作某台服务器,但又没有在hosts里定义这台服务器时,可以使用如下命令:</p>\n<p><code>ansible all -i ‘服务器ip,’</code><br>注意服务器ip后面要加个,</p>\n<p>如 <code>ansible all -i ‘10.2.31.201,’ -u test -k -a ‘uptime’</code></p>\n<p>BUG?</p>\n<p>目前遇到两个bug(也可能是我的使用方式不对,正在关注中) 1.在中文路径下无法使用.<br>如果在一个含中文的路径下面使用ansible,会无法执行,提示:   UnicodeDecodeError: ‘ascii’ codec can’t decode byte 0xe4 in position 14<br>所以不要跑到中文路径下面去执行ansible</p>\n<p>2.su命令不能用.<br>使用su命令不成功,无在目标机器上通过一个普通用户su切换为root执行相关命令 错误如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ansible Timeout (12s) waiting for privilege escalation prompt</span><br></pre></td></tr></table></figure></p>"},{"title":"Docker容器类","date":"2018-07-07T04:55:44.000Z","updated":"2020-03-11T10:48:16.857Z","_content":"\n## 热门技术Docker容器类的介绍 ##\nDocker 使用Google 公司推出的Go 语言进行开发实现，基于Linux 内核的cgroup，namespace，以及AUFS 类的Union FS 等技术，对进程进行封装隔离，属于操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。\n<!-- more -->\nDocker 跟传统的虚拟化方式相比具有众多的优势。\n 更高效的利用系统资源\n由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利\n用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。\n 更快速的启动时间\nDocker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒\n级、甚至毫秒级的启动时间。\n 一致的运行环境\n开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一\n致，导致有些bug 并未在开发过程中被发现。而Docker 的镜像提供了除内核外完整的运行时\n环境，确保了应用运行环境一致性。\n 持续交付和部署\n对开发和运维（DevOps）人员来说，最希望的就是一次创建或配置，可以在任意地方正常\n运行。\n乐刷科技有限公司\n4\n使用Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通\n过Dockerfile 来进行镜像构建，并结合持续集成(Continuous Integration) 系统进行集成测试，而\n运维人员则可以直接在生产环境中快速部署该镜像，甚至结合持续部署(Continuous\nDelivery/Deployment) 系统进行自动部署。\n 更轻松的迁移\n由于Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平\n台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。\n因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环\n境的变化导致应用无法正常运行的情况。\n 更轻松的维护和扩展\nDocker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用\n的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。\nDocker 包括三个基本概念\n 镜像（Image）\nDocker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等\n文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像\n不包含任何动态数据，其内容在构建之后也不会被改变。\n 容器（Container）\n镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂\n停等。容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立\n的命名空间。因此容器可以拥有自己的root 文件系统、自己的网络配置、自己的进程空间，甚\n至自己的用户ID 空间。容器内的进程是运行在一个隔离的环境里。容器运行时，是以镜像为\n基础层，在其上创建一个当前容器的存储层，这个为容器运行时读写而准备的存储层为容器存\n储层。\n容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保\n存于容器存储层的信息都会随容器删除而丢失。\n容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操\n作，都应该使用数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，\n直接对宿主（或网络存储）发生读写，其性能和稳定性更高。\n数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器\n删除或者重新运行之后，数据却不会丢失。\n 仓库（Repository）\n镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使\n用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。\n一个Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；\n每个标签对应一个镜像。","source":"_posts/other/docker.md","raw":"---\ntitle: Docker容器类\ndate: 2018-07-07 12:55:44\nupdated: \ncategories: \n  - other\npermalink:\ntags: Docker\n---\n\n## 热门技术Docker容器类的介绍 ##\nDocker 使用Google 公司推出的Go 语言进行开发实现，基于Linux 内核的cgroup，namespace，以及AUFS 类的Union FS 等技术，对进程进行封装隔离，属于操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。\n<!-- more -->\nDocker 跟传统的虚拟化方式相比具有众多的优势。\n 更高效的利用系统资源\n由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利\n用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。\n 更快速的启动时间\nDocker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒\n级、甚至毫秒级的启动时间。\n 一致的运行环境\n开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一\n致，导致有些bug 并未在开发过程中被发现。而Docker 的镜像提供了除内核外完整的运行时\n环境，确保了应用运行环境一致性。\n 持续交付和部署\n对开发和运维（DevOps）人员来说，最希望的就是一次创建或配置，可以在任意地方正常\n运行。\n乐刷科技有限公司\n4\n使用Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通\n过Dockerfile 来进行镜像构建，并结合持续集成(Continuous Integration) 系统进行集成测试，而\n运维人员则可以直接在生产环境中快速部署该镜像，甚至结合持续部署(Continuous\nDelivery/Deployment) 系统进行自动部署。\n 更轻松的迁移\n由于Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平\n台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。\n因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环\n境的变化导致应用无法正常运行的情况。\n 更轻松的维护和扩展\nDocker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用\n的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。\nDocker 包括三个基本概念\n 镜像（Image）\nDocker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等\n文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像\n不包含任何动态数据，其内容在构建之后也不会被改变。\n 容器（Container）\n镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂\n停等。容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立\n的命名空间。因此容器可以拥有自己的root 文件系统、自己的网络配置、自己的进程空间，甚\n至自己的用户ID 空间。容器内的进程是运行在一个隔离的环境里。容器运行时，是以镜像为\n基础层，在其上创建一个当前容器的存储层，这个为容器运行时读写而准备的存储层为容器存\n储层。\n容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保\n存于容器存储层的信息都会随容器删除而丢失。\n容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操\n作，都应该使用数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，\n直接对宿主（或网络存储）发生读写，其性能和稳定性更高。\n数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器\n删除或者重新运行之后，数据却不会丢失。\n 仓库（Repository）\n镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使\n用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。\n一个Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；\n每个标签对应一个镜像。","slug":"other/docker","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59q000ew8mxouvhoe2j","content":"<h2 id=\"热门技术Docker容器类的介绍\"><a href=\"#热门技术Docker容器类的介绍\" class=\"headerlink\" title=\"热门技术Docker容器类的介绍\"></a>热门技术Docker容器类的介绍</h2><p>Docker 使用Google 公司推出的Go 语言进行开发实现，基于Linux 内核的cgroup，namespace，以及AUFS 类的Union FS 等技术，对进程进行封装隔离，属于操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。<br><a id=\"more\"></a><br>Docker 跟传统的虚拟化方式相比具有众多的优势。<br> 更高效的利用系统资源<br>由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利<br>用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。<br> 更快速的启动时间<br>Docker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒<br>级、甚至毫秒级的启动时间。<br> 一致的运行环境<br>开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一<br>致，导致有些bug 并未在开发过程中被发现。而Docker 的镜像提供了除内核外完整的运行时<br>环境，确保了应用运行环境一致性。<br> 持续交付和部署<br>对开发和运维（DevOps）人员来说，最希望的就是一次创建或配置，可以在任意地方正常<br>运行。<br>乐刷科技有限公司<br>4<br>使用Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通<br>过Dockerfile 来进行镜像构建，并结合持续集成(Continuous Integration) 系统进行集成测试，而<br>运维人员则可以直接在生产环境中快速部署该镜像，甚至结合持续部署(Continuous<br>Delivery/Deployment) 系统进行自动部署。<br> 更轻松的迁移<br>由于Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平<br>台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。<br>因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环<br>境的变化导致应用无法正常运行的情况。<br> 更轻松的维护和扩展<br>Docker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用<br>的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。<br>Docker 包括三个基本概念<br> 镜像（Image）<br>Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等<br>文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像<br>不包含任何动态数据，其内容在构建之后也不会被改变。<br> 容器（Container）<br>镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂<br>停等。容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立<br>的命名空间。因此容器可以拥有自己的root 文件系统、自己的网络配置、自己的进程空间，甚<br>至自己的用户ID 空间。容器内的进程是运行在一个隔离的环境里。容器运行时，是以镜像为<br>基础层，在其上创建一个当前容器的存储层，这个为容器运行时读写而准备的存储层为容器存<br>储层。<br>容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保<br>存于容器存储层的信息都会随容器删除而丢失。<br>容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操<br>作，都应该使用数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，<br>直接对宿主（或网络存储）发生读写，其性能和稳定性更高。<br>数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器<br>删除或者重新运行之后，数据却不会丢失。<br> 仓库（Repository）<br>镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使<br>用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。<br>一个Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；<br>每个标签对应一个镜像。</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h2 id=\"热门技术Docker容器类的介绍\"><a href=\"#热门技术Docker容器类的介绍\" class=\"headerlink\" title=\"热门技术Docker容器类的介绍\"></a>热门技术Docker容器类的介绍</h2><p>Docker 使用Google 公司推出的Go 语言进行开发实现，基于Linux 内核的cgroup，namespace，以及AUFS 类的Union FS 等技术，对进程进行封装隔离，属于操作系统层面的虚拟化技术。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为容器。Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。<br>","more":"<br>Docker 跟传统的虚拟化方式相比具有众多的优势。<br> 更高效的利用系统资源<br>由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利<br>用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。<br> 更快速的启动时间<br>Docker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒<br>级、甚至毫秒级的启动时间。<br> 一致的运行环境<br>开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一<br>致，导致有些bug 并未在开发过程中被发现。而Docker 的镜像提供了除内核外完整的运行时<br>环境，确保了应用运行环境一致性。<br> 持续交付和部署<br>对开发和运维（DevOps）人员来说，最希望的就是一次创建或配置，可以在任意地方正常<br>运行。<br>乐刷科技有限公司<br>4<br>使用Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通<br>过Dockerfile 来进行镜像构建，并结合持续集成(Continuous Integration) 系统进行集成测试，而<br>运维人员则可以直接在生产环境中快速部署该镜像，甚至结合持续部署(Continuous<br>Delivery/Deployment) 系统进行自动部署。<br> 更轻松的迁移<br>由于Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平<br>台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。<br>因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环<br>境的变化导致应用无法正常运行的情况。<br> 更轻松的维护和扩展<br>Docker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用<br>的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。<br>Docker 包括三个基本概念<br> 镜像（Image）<br>Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等<br>文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像<br>不包含任何动态数据，其内容在构建之后也不会被改变。<br> 容器（Container）<br>镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂<br>停等。容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立<br>的命名空间。因此容器可以拥有自己的root 文件系统、自己的网络配置、自己的进程空间，甚<br>至自己的用户ID 空间。容器内的进程是运行在一个隔离的环境里。容器运行时，是以镜像为<br>基础层，在其上创建一个当前容器的存储层，这个为容器运行时读写而准备的存储层为容器存<br>储层。<br>容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保<br>存于容器存储层的信息都会随容器删除而丢失。<br>容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操<br>作，都应该使用数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，<br>直接对宿主（或网络存储）发生读写，其性能和稳定性更高。<br>数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器<br>删除或者重新运行之后，数据却不会丢失。<br> 仓库（Repository）<br>镜像构建完成后，可以很容易的在当前宿主机上运行，但是，如果需要在其它服务器上使<br>用这个镜像，我们就需要一个集中的存储、分发镜像的服务，Docker Registry 就是这样的服务。<br>一个Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；<br>每个标签对应一个镜像。</p>"},{"title":"JsonUtil工具类","date":"2017-02-07T15:55:44.000Z","updated":"2020-03-11T10:48:16.860Z","_content":"基于jackson的json和object相互转换的工具类。\n<!-- more -->\n```\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.util.CollectionUtils;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n/**\n* 基于jackson的json和object相互转换的工具类\n* @author \n* @date 2017年6月21日 上午10:00:23\n*/\npublic final class JsonUtil {\n    /** 私有构造 单例 */\n    private JsonUtil(){\n        \n    }\n    \n    private static ObjectMapper objectMapper = null;\n    \n    static\n    {\n        // 将objectMapper 设置为全局静态缓存，提高调用效率\n        objectMapper = new ObjectMapper();\n        objectMapper.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"));\n    }\n    \n    /** 供外部调用 ObjectMapper */\n    public static ObjectMapper getObjectMapper()\n    {\n        return objectMapper;\n    }\n    \n    /**\n     * json串转对象\n     * @Description\n     * @param jsonStr\n     * @param clazz\n     * @return\n     */\n    public static <T> T json2obj(String jsonStr, Class<T> clazz)\n    {\n        if (StringUtils.isEmpty(jsonStr))\n        {\n            return null;\n        }\n\n        T t = null;\n\n        try\n        {\n            t = objectMapper.readValue(jsonStr, clazz);\n        }\n        catch (IOException e)\n        {\n\n        }\n        return t;\n    }\n    \n    /**\n     * json串转map对象,前提是被转换的json串value为多组k-v\n     * {\"zhangjiajie\":{\"price\":\"fixed\",\"type\":\"mountain\"},\"jiuzhaigou\":{\"price\":\"fixed\",\"type\":\"mountain\"}}\n     * @Description\n     * @param jsonStr\n     * @param clazz\n     * @return Map\n     */\n    public static <T> Map<String, T> json2map(String jsonStr, Class<T> clazz)\n    {\n        if (StringUtils.isEmpty(jsonStr))\n        {\n            return null;\n        }\n\n        Map<String, Map<String, Object>> map = null;\n        try\n        {\n            map = objectMapper.readValue(jsonStr,\n                    new TypeReference<Map<String, T>>()\n                    {\n                    });\n        }\n        catch (IOException e)\n        {\n\n        }\n\n        if (CollectionUtils.isEmpty(map))\n        {\n            return null;\n        }\n\n        Map<String, T> result = new HashMap<String, T>();\n        for (Entry<String, Map<String, Object>> entry : map.entrySet())\n        {\n            result.put(entry.getKey(), map2pojo(entry.getValue(), clazz));\n        }\n        return result;\n    }\n    \n    /**\n     * json转list对象\n     * @Description\n     * @param jsonStr\n     * @param clazz\n     * @return List\n     */\n    public static <T> List<T> json2list(String jsonStr, Class<T> clazz)\n    {\n        if (StringUtils.isEmpty(jsonStr))\n        {\n            return null;\n        }\n\n        List<Map<String, Object>> list = null;\n        try\n        {\n            list = objectMapper.readValue(jsonStr,\n                    new TypeReference<List<T>>()\n                    {\n                    });\n        }\n        catch (IOException e)\n        {\n        }\n\n        // 非空校验\n        if (CollectionUtils.isEmpty(list))\n        {\n            return null;\n        }\n\n        List<T> result = new ArrayList<T>();\n        for (Map<String, Object> map : list)\n        {\n            result.add(map2pojo(map, clazz));\n        }\n        return result;\n    }\n    \n    /**\n     * 获取json串的某个键对应的值\n     * @Description\n     * @param jsonSrc\n     * @param jsonKey\n     * @return\n     */\n    public static String getJsonValue(String jsonSrc, String jsonKey)\n    {\n        if (StringUtils.isEmpty(jsonSrc) || StringUtils.isEmpty(jsonKey))\n        {\n            return null;\n        }\n        JsonNode node = json2obj(jsonSrc, JsonNode.class);\n        \n        if(node == null)\n        {\n            return null;\n        }\n\n        // 获取jsonKey数据\n        JsonNode dataNode = node.get(jsonKey);\n\n        if (null == dataNode)\n        {\n            return null;\n        }\n\n        return dataNode.toString();\n    }\n    \n    /**\n     * 对象转json串,维持基本类型,空值返回null\n\n     * 示例\n\n     * {\"name\":\"alex\",\"age\":20,\"address\":null,\"score\":[{\"subject\":\"math\",\"score\":98},{\"subject\":\"art\",\"score\":50}]}\n     * @Description\n     * @param obj\n     * @return\n     */\n    public static String obj2json(Object obj)\n    {\n        if (obj == null)\n        {\n            return null;\n        }\n        String jsonResult = null;\n        try\n        {\n            jsonResult = objectMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e)\n        {\n    \n        }\n    \n        return jsonResult;\n    }\n\n    /**\n     * 一般对象转JsonNode\n     * @Description\n     * @param obj\n     * @return\n     */\n    public static JsonNode obj2node(Object obj)\n    {\n        if (null == obj)\n        {\n            return null;\n        }\n\n        JsonNode node = null;\n\n        try\n        {\n            node = objectMapper.readTree(obj2json(obj));\n        }\n        catch (IOException e)\n        {\n        }\n\n        return node;\n    }\n    \n    public static <T> T obj2T(Object obj, Class<T> clazz)\n    {\n        if (null == obj)\n        {\n            return null;\n        }\n\n        T t = null;\n\n        try\n        {\n            t = objectMapper.readValue(obj2json(obj), clazz);\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n\n        return t;\n    }\n    \n    /**\n     * map convert to javaBean\n     */\n    private static <T> T map2pojo(@SuppressWarnings(\"rawtypes\")Map map, Class<T> clazz)\n    {\n        return objectMapper.convertValue(map, clazz);\n    }\n    \n}\n\n\n```","source":"_posts/utils/jsonUtil.md","raw":"---\ntitle: JsonUtil工具类\ndate: 2017-02-07 23:55:44\nupdated: \ncategories: \n  - code工具\npermalink:\ntags: [jsonUtil,工具类]\n---\n基于jackson的json和object相互转换的工具类。\n<!-- more -->\n```\nimport java.io.IOException;\nimport java.text.SimpleDateFormat;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Map.Entry;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.util.CollectionUtils;\n\nimport com.fasterxml.jackson.core.JsonProcessingException;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.JsonNode;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n/**\n* 基于jackson的json和object相互转换的工具类\n* @author \n* @date 2017年6月21日 上午10:00:23\n*/\npublic final class JsonUtil {\n    /** 私有构造 单例 */\n    private JsonUtil(){\n        \n    }\n    \n    private static ObjectMapper objectMapper = null;\n    \n    static\n    {\n        // 将objectMapper 设置为全局静态缓存，提高调用效率\n        objectMapper = new ObjectMapper();\n        objectMapper.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\"));\n    }\n    \n    /** 供外部调用 ObjectMapper */\n    public static ObjectMapper getObjectMapper()\n    {\n        return objectMapper;\n    }\n    \n    /**\n     * json串转对象\n     * @Description\n     * @param jsonStr\n     * @param clazz\n     * @return\n     */\n    public static <T> T json2obj(String jsonStr, Class<T> clazz)\n    {\n        if (StringUtils.isEmpty(jsonStr))\n        {\n            return null;\n        }\n\n        T t = null;\n\n        try\n        {\n            t = objectMapper.readValue(jsonStr, clazz);\n        }\n        catch (IOException e)\n        {\n\n        }\n        return t;\n    }\n    \n    /**\n     * json串转map对象,前提是被转换的json串value为多组k-v\n     * {\"zhangjiajie\":{\"price\":\"fixed\",\"type\":\"mountain\"},\"jiuzhaigou\":{\"price\":\"fixed\",\"type\":\"mountain\"}}\n     * @Description\n     * @param jsonStr\n     * @param clazz\n     * @return Map\n     */\n    public static <T> Map<String, T> json2map(String jsonStr, Class<T> clazz)\n    {\n        if (StringUtils.isEmpty(jsonStr))\n        {\n            return null;\n        }\n\n        Map<String, Map<String, Object>> map = null;\n        try\n        {\n            map = objectMapper.readValue(jsonStr,\n                    new TypeReference<Map<String, T>>()\n                    {\n                    });\n        }\n        catch (IOException e)\n        {\n\n        }\n\n        if (CollectionUtils.isEmpty(map))\n        {\n            return null;\n        }\n\n        Map<String, T> result = new HashMap<String, T>();\n        for (Entry<String, Map<String, Object>> entry : map.entrySet())\n        {\n            result.put(entry.getKey(), map2pojo(entry.getValue(), clazz));\n        }\n        return result;\n    }\n    \n    /**\n     * json转list对象\n     * @Description\n     * @param jsonStr\n     * @param clazz\n     * @return List\n     */\n    public static <T> List<T> json2list(String jsonStr, Class<T> clazz)\n    {\n        if (StringUtils.isEmpty(jsonStr))\n        {\n            return null;\n        }\n\n        List<Map<String, Object>> list = null;\n        try\n        {\n            list = objectMapper.readValue(jsonStr,\n                    new TypeReference<List<T>>()\n                    {\n                    });\n        }\n        catch (IOException e)\n        {\n        }\n\n        // 非空校验\n        if (CollectionUtils.isEmpty(list))\n        {\n            return null;\n        }\n\n        List<T> result = new ArrayList<T>();\n        for (Map<String, Object> map : list)\n        {\n            result.add(map2pojo(map, clazz));\n        }\n        return result;\n    }\n    \n    /**\n     * 获取json串的某个键对应的值\n     * @Description\n     * @param jsonSrc\n     * @param jsonKey\n     * @return\n     */\n    public static String getJsonValue(String jsonSrc, String jsonKey)\n    {\n        if (StringUtils.isEmpty(jsonSrc) || StringUtils.isEmpty(jsonKey))\n        {\n            return null;\n        }\n        JsonNode node = json2obj(jsonSrc, JsonNode.class);\n        \n        if(node == null)\n        {\n            return null;\n        }\n\n        // 获取jsonKey数据\n        JsonNode dataNode = node.get(jsonKey);\n\n        if (null == dataNode)\n        {\n            return null;\n        }\n\n        return dataNode.toString();\n    }\n    \n    /**\n     * 对象转json串,维持基本类型,空值返回null\n\n     * 示例\n\n     * {\"name\":\"alex\",\"age\":20,\"address\":null,\"score\":[{\"subject\":\"math\",\"score\":98},{\"subject\":\"art\",\"score\":50}]}\n     * @Description\n     * @param obj\n     * @return\n     */\n    public static String obj2json(Object obj)\n    {\n        if (obj == null)\n        {\n            return null;\n        }\n        String jsonResult = null;\n        try\n        {\n            jsonResult = objectMapper.writeValueAsString(obj);\n        }\n        catch (JsonProcessingException e)\n        {\n    \n        }\n    \n        return jsonResult;\n    }\n\n    /**\n     * 一般对象转JsonNode\n     * @Description\n     * @param obj\n     * @return\n     */\n    public static JsonNode obj2node(Object obj)\n    {\n        if (null == obj)\n        {\n            return null;\n        }\n\n        JsonNode node = null;\n\n        try\n        {\n            node = objectMapper.readTree(obj2json(obj));\n        }\n        catch (IOException e)\n        {\n        }\n\n        return node;\n    }\n    \n    public static <T> T obj2T(Object obj, Class<T> clazz)\n    {\n        if (null == obj)\n        {\n            return null;\n        }\n\n        T t = null;\n\n        try\n        {\n            t = objectMapper.readValue(obj2json(obj), clazz);\n        }\n        catch (IOException e)\n        {\n            e.printStackTrace();\n        }\n\n        return t;\n    }\n    \n    /**\n     * map convert to javaBean\n     */\n    private static <T> T map2pojo(@SuppressWarnings(\"rawtypes\")Map map, Class<T> clazz)\n    {\n        return objectMapper.convertValue(map, clazz);\n    }\n    \n}\n\n\n```","slug":"utils/jsonUtil","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59s000iw8mx6ax6hmya","content":"<p>基于jackson的json和object相互转换的工具类。<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.text.SimpleDateFormat;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.HashMap;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\">import java.util.Map.Entry;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.apache.commons.lang3.StringUtils;</span><br><span class=\"line\">import org.springframework.util.CollectionUtils;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class=\"line\">import com.fasterxml.jackson.core.type.TypeReference;</span><br><span class=\"line\">import com.fasterxml.jackson.databind.JsonNode;</span><br><span class=\"line\">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">* 基于jackson的json和object相互转换的工具类</span><br><span class=\"line\">* @author </span><br><span class=\"line\">* @date 2017年6月21日 上午10:00:23</span><br><span class=\"line\">*/</span><br><span class=\"line\">public final class JsonUtil &#123;</span><br><span class=\"line\">    /** 私有构造 单例 */</span><br><span class=\"line\">    private JsonUtil()&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private static ObjectMapper objectMapper = null;</span><br><span class=\"line\">    </span><br><span class=\"line\">    static</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        // 将objectMapper 设置为全局静态缓存，提高调用效率</span><br><span class=\"line\">        objectMapper = new ObjectMapper();</span><br><span class=\"line\">        objectMapper.setDateFormat(new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /** 供外部调用 ObjectMapper */</span><br><span class=\"line\">    public static ObjectMapper getObjectMapper()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return objectMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * json串转对象</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonStr</span><br><span class=\"line\">     * @param clazz</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static &lt;T&gt; T json2obj(String jsonStr, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonStr))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        T t = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t = objectMapper.readValue(jsonStr, clazz);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * json串转map对象,前提是被转换的json串value为多组k-v</span><br><span class=\"line\">     * &#123;&quot;zhangjiajie&quot;:&#123;&quot;price&quot;:&quot;fixed&quot;,&quot;type&quot;:&quot;mountain&quot;&#125;,&quot;jiuzhaigou&quot;:&#123;&quot;price&quot;:&quot;fixed&quot;,&quot;type&quot;:&quot;mountain&quot;&#125;&#125;</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonStr</span><br><span class=\"line\">     * @param clazz</span><br><span class=\"line\">     * @return Map</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static &lt;T&gt; Map&lt;String, T&gt; json2map(String jsonStr, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonStr))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, Map&lt;String, Object&gt;&gt; map = null;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            map = objectMapper.readValue(jsonStr,</span><br><span class=\"line\">                    new TypeReference&lt;Map&lt;String, T&gt;&gt;()</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (CollectionUtils.isEmpty(map))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, T&gt; result = new HashMap&lt;String, T&gt;();</span><br><span class=\"line\">        for (Entry&lt;String, Map&lt;String, Object&gt;&gt; entry : map.entrySet())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            result.put(entry.getKey(), map2pojo(entry.getValue(), clazz));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * json转list对象</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonStr</span><br><span class=\"line\">     * @param clazz</span><br><span class=\"line\">     * @return List</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static &lt;T&gt; List&lt;T&gt; json2list(String jsonStr, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonStr))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; list = null;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            list = objectMapper.readValue(jsonStr,</span><br><span class=\"line\">                    new TypeReference&lt;List&lt;T&gt;&gt;()</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 非空校验</span><br><span class=\"line\">        if (CollectionUtils.isEmpty(list))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;T&gt; result = new ArrayList&lt;T&gt;();</span><br><span class=\"line\">        for (Map&lt;String, Object&gt; map : list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            result.add(map2pojo(map, clazz));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取json串的某个键对应的值</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonSrc</span><br><span class=\"line\">     * @param jsonKey</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String getJsonValue(String jsonSrc, String jsonKey)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonSrc) || StringUtils.isEmpty(jsonKey))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        JsonNode node = json2obj(jsonSrc, JsonNode.class);</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(node == null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 获取jsonKey数据</span><br><span class=\"line\">        JsonNode dataNode = node.get(jsonKey);</span><br><span class=\"line\"></span><br><span class=\"line\">        if (null == dataNode)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return dataNode.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 对象转json串,维持基本类型,空值返回null</span><br><span class=\"line\"></span><br><span class=\"line\">     * 示例</span><br><span class=\"line\"></span><br><span class=\"line\">     * &#123;&quot;name&quot;:&quot;alex&quot;,&quot;age&quot;:20,&quot;address&quot;:null,&quot;score&quot;:[&#123;&quot;subject&quot;:&quot;math&quot;,&quot;score&quot;:98&#125;,&#123;&quot;subject&quot;:&quot;art&quot;,&quot;score&quot;:50&#125;]&#125;</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param obj</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String obj2json(Object obj)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (obj == null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String jsonResult = null;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            jsonResult = objectMapper.writeValueAsString(obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (JsonProcessingException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        return jsonResult;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 一般对象转JsonNode</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param obj</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static JsonNode obj2node(Object obj)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (null == obj)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        JsonNode node = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            node = objectMapper.readTree(obj2json(obj));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return node;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static &lt;T&gt; T obj2T(Object obj, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (null == obj)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        T t = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t = objectMapper.readValue(obj2json(obj), clazz);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * map convert to javaBean</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static &lt;T&gt; T map2pojo(@SuppressWarnings(&quot;rawtypes&quot;)Map map, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return objectMapper.convertValue(map, clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>基于jackson的json和object相互转换的工具类。<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.text.SimpleDateFormat;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.HashMap;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\">import java.util.Map.Entry;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.apache.commons.lang3.StringUtils;</span><br><span class=\"line\">import org.springframework.util.CollectionUtils;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class=\"line\">import com.fasterxml.jackson.core.type.TypeReference;</span><br><span class=\"line\">import com.fasterxml.jackson.databind.JsonNode;</span><br><span class=\"line\">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">* 基于jackson的json和object相互转换的工具类</span><br><span class=\"line\">* @author </span><br><span class=\"line\">* @date 2017年6月21日 上午10:00:23</span><br><span class=\"line\">*/</span><br><span class=\"line\">public final class JsonUtil &#123;</span><br><span class=\"line\">    /** 私有构造 单例 */</span><br><span class=\"line\">    private JsonUtil()&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    private static ObjectMapper objectMapper = null;</span><br><span class=\"line\">    </span><br><span class=\"line\">    static</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        // 将objectMapper 设置为全局静态缓存，提高调用效率</span><br><span class=\"line\">        objectMapper = new ObjectMapper();</span><br><span class=\"line\">        objectMapper.setDateFormat(new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /** 供外部调用 ObjectMapper */</span><br><span class=\"line\">    public static ObjectMapper getObjectMapper()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return objectMapper;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * json串转对象</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonStr</span><br><span class=\"line\">     * @param clazz</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static &lt;T&gt; T json2obj(String jsonStr, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonStr))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        T t = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t = objectMapper.readValue(jsonStr, clazz);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * json串转map对象,前提是被转换的json串value为多组k-v</span><br><span class=\"line\">     * &#123;&quot;zhangjiajie&quot;:&#123;&quot;price&quot;:&quot;fixed&quot;,&quot;type&quot;:&quot;mountain&quot;&#125;,&quot;jiuzhaigou&quot;:&#123;&quot;price&quot;:&quot;fixed&quot;,&quot;type&quot;:&quot;mountain&quot;&#125;&#125;</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonStr</span><br><span class=\"line\">     * @param clazz</span><br><span class=\"line\">     * @return Map</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static &lt;T&gt; Map&lt;String, T&gt; json2map(String jsonStr, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonStr))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, Map&lt;String, Object&gt;&gt; map = null;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            map = objectMapper.readValue(jsonStr,</span><br><span class=\"line\">                    new TypeReference&lt;Map&lt;String, T&gt;&gt;()</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        if (CollectionUtils.isEmpty(map))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Map&lt;String, T&gt; result = new HashMap&lt;String, T&gt;();</span><br><span class=\"line\">        for (Entry&lt;String, Map&lt;String, Object&gt;&gt; entry : map.entrySet())</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            result.put(entry.getKey(), map2pojo(entry.getValue(), clazz));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * json转list对象</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonStr</span><br><span class=\"line\">     * @param clazz</span><br><span class=\"line\">     * @return List</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static &lt;T&gt; List&lt;T&gt; json2list(String jsonStr, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonStr))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;Map&lt;String, Object&gt;&gt; list = null;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            list = objectMapper.readValue(jsonStr,</span><br><span class=\"line\">                    new TypeReference&lt;List&lt;T&gt;&gt;()</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 非空校验</span><br><span class=\"line\">        if (CollectionUtils.isEmpty(list))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        List&lt;T&gt; result = new ArrayList&lt;T&gt;();</span><br><span class=\"line\">        for (Map&lt;String, Object&gt; map : list)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            result.add(map2pojo(map, clazz));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取json串的某个键对应的值</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param jsonSrc</span><br><span class=\"line\">     * @param jsonKey</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String getJsonValue(String jsonSrc, String jsonKey)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (StringUtils.isEmpty(jsonSrc) || StringUtils.isEmpty(jsonKey))</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        JsonNode node = json2obj(jsonSrc, JsonNode.class);</span><br><span class=\"line\">        </span><br><span class=\"line\">        if(node == null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 获取jsonKey数据</span><br><span class=\"line\">        JsonNode dataNode = node.get(jsonKey);</span><br><span class=\"line\"></span><br><span class=\"line\">        if (null == dataNode)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return dataNode.toString();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 对象转json串,维持基本类型,空值返回null</span><br><span class=\"line\"></span><br><span class=\"line\">     * 示例</span><br><span class=\"line\"></span><br><span class=\"line\">     * &#123;&quot;name&quot;:&quot;alex&quot;,&quot;age&quot;:20,&quot;address&quot;:null,&quot;score&quot;:[&#123;&quot;subject&quot;:&quot;math&quot;,&quot;score&quot;:98&#125;,&#123;&quot;subject&quot;:&quot;art&quot;,&quot;score&quot;:50&#125;]&#125;</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param obj</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String obj2json(Object obj)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (obj == null)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        String jsonResult = null;</span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            jsonResult = objectMapper.writeValueAsString(obj);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (JsonProcessingException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">        return jsonResult;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 一般对象转JsonNode</span><br><span class=\"line\">     * @Description</span><br><span class=\"line\">     * @param obj</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static JsonNode obj2node(Object obj)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (null == obj)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        JsonNode node = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            node = objectMapper.readTree(obj2json(obj));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return node;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static &lt;T&gt; T obj2T(Object obj, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        if (null == obj)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            return null;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        T t = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        try</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            t = objectMapper.readValue(obj2json(obj), clazz);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        catch (IOException e)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return t;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * map convert to javaBean</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static &lt;T&gt; T map2pojo(@SuppressWarnings(&quot;rawtypes&quot;)Map map, Class&lt;T&gt; clazz)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return objectMapper.convertValue(map, clazz);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"签名用的工具箱","date":"2017-04-07T14:55:44.000Z","updated":"2020-03-11T10:48:16.861Z","_content":"签名算法工具，签名生成的步骤如下：\n 第一步，设所有发送或者接收到的数据为集合M，将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&key2=value2…）拼接成字符串stringA。\n\n 第二步，在stringA最后拼接上key得到stringSignTemp字符串，并对stringSignTemp进行MD5运算，再将得到的字符串所有字符转换为大写，得到sign值signValue。\n<!-- more -->\n特别注意以下重要规则：</br>\n\t◆ 参数名ASCII码从小到大排序（字典序）；</br>\n\t◆ 如果参数的值为空不参与签名；</br>\n\t◆ 参数名区分大小写；</br>\n\t◆ 验证调用返回或主动通知签名时，传送的sign参数不参与签名，将生成的签名与该sign值作校验。</br>\n\t◆ key值由互金端提供；</br>\n\n```\n\timport java.io.StringReader;\n\timport java.net.URLEncoder;\n\timport java.util.ArrayList;\n\timport java.util.Collections;\n\timport java.util.HashMap;\n\timport java.util.List;\n\timport java.util.Map;\n\timport java.util.SortedMap;\n\timport java.util.TreeMap;\n\t\n\timport org.dom4j.Document;\n\timport org.dom4j.DocumentException;\n\timport org.dom4j.Element;\n\timport org.dom4j.io.SAXReader;\n\timport org.xml.sax.InputSource;\n\t/**\n\t* ClassName:SignUtils</br>\n\t* Function: 签名用的工具箱</br>\n\t* Date:     2017-2-27 下午3:22:33 </br>\n\t* <功能详细描述>签名算法</br>\n\t* @author    \n\t*/\n\n\tpublic class SignUtils {\n\t    public static void main(String[] args) {\n\t        String key = \"CvRu8Dydbe7SETJoqh5wQYBp4PnZxigz\";\n\t        SortedMap<String,String> params = new TreeMap<String,String>();\n\t        params.put(\"orderId\", \"1112233\");\n\t        params.put(\"merchantId\", \"3700603014\");\n\t        params.put(\"applyAmount\", \"1000000\");\n\t        params.put(\"sign\", \"sdfsdf\");\n\t        String sign = getSign(params,key);//签名\n\t        System.out.println(\"sign:\"+sign.toUpperCase());\n\t        params.put(\"sign\", sign.toUpperCase());\n\t        System.out.println(\"sign:\"+checkParam(params,key));//验证\n\t    }\n\t    /** <一句话功能简述>\n\t     * <功能详细描述>验证返回参数\n\t     * @param params\n\t     * @param key\n\t     * @return\n\t     * @see [类、类#方法、类#成员]\n\t     */\n\t    public static boolean checkParam(Map<String,String> params,String key){\n\t        boolean result = false;\n\t        if(params.containsKey(\"sign\")){\n\t            String sign = params.get(\"sign\");\n\t            params.remove(\"sign\");\n\t            params = paraFilter(params);\n\t            StringBuilder buf = new StringBuilder((params.size() +1) * 10);\n\t            SignUtils.buildPayParams(buf,params,false);\n\t            String preStr = buf.toString();\n\t            String signRecieve = MD5.sign(preStr, \"&key=\" + key, \"utf-8\");\n\t            System.out.println(signRecieve);\n\t            result = sign.equalsIgnoreCase(signRecieve);\n\t        }\n\t        return result;\n\t    }\n\t    \n\t    /**\n\t     * 获取签名\n\t     * @param map 对象\n\t     * @param key 密匙\n\t     * @return 签名\n\t     */\n\t    public static String getSign(SortedMap<String,String> map,String key){\n\t        Map<String, String> params = SignUtils.paraFilter(map);\n\t        StringBuilder buf = new StringBuilder((params.size() + 1) * 10);\n\t        SignUtils.buildPayParams(buf, params, false);\n\t        String preStr = buf.toString();\n\t        System.out.println(preStr);\n\t        String sign = MD5.sign(preStr, \"&key=\" + key, \"utf-8\").toUpperCase();\n\t        return sign;\n\t    }\n\t    \n\t    /**\n\t     * 过滤参数:过滤掉sArray中value为空和key为sign的键值对\n\t     * @param sArray\n\t     * @return\n\t     */\n\t\n\t    public static Map<String, String> paraFilter(Map<String, String> sArray) {\n\t        Map<String, String> result = new HashMap<String, String>(sArray.size());\n\t        if (sArray == null || sArray.size() <= 0) {\n\t            return result;\n\t        }\n\t        for (String key : sArray.keySet()) {\n\t            String value = sArray.get(key);\n\t            if (value == null || value.equals(\"\") || key.equalsIgnoreCase(\"sign\")) {\n\t                continue;\n\t            }\n\t            result.put(key, value);\n\t        }\n\t        return result;\n\t    }\n\t    \n\t\n\t   /**\n\t    * 将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&key2=value2…）拼接成字符串stringA\n\t    * @param sb 返回的字符串\n\t    * @param payParams  集合M\n\t    * @param encoding 是否需要经过UTF-8编码：true-需要  false-不需要\n\t    */\n\t\n\t    public static void buildPayParams(StringBuilder sb,Map<String, String> payParams,boolean encoding){\n\t        List<String> keys = new ArrayList<String>(payParams.keySet());\n\t        Collections.sort(keys);\n\t        for(String key : keys){\n\t            sb.append(key).append(\"=\");\n\t            if(encoding){\n\t                sb.append(urlEncode(payParams.get(key)));\n\t            }else{\n\t                sb.append(payParams.get(key));\n\t            }\n\t            sb.append(\"&\");\n\t        }\n\t        sb.setLength(sb.length() - 1);\n\t    }\n\t    \n\t    public static String urlEncode(String str){\n\t        try {\n\t            return URLEncoder.encode(str, \"UTF-8\");\n\t        } catch (Throwable e) {\n\t            return str;\n\t        }\n\t    }\n\t    \n\t    \n\t    public static Element readerXml(String body,String encode) throws DocumentException {\n\t        SAXReader reader = new SAXReader(false);\n\t        InputSource source = new InputSource(new StringReader(body));\n\t        source.setEncoding(encode);\n\t        Document doc = reader.read(source);\n\t        Element element = doc.getRootElement();\n\t        return element;\n\t    }\n\t\n\t}\n```\n","source":"_posts/utils/signUtil.md","raw":"---\ntitle: 签名用的工具箱\ndate: 2017-04-07 22:55:44\nupdated: \ncategories: \n  - code工具\npermalink:\ntags: [签名,工具类]\n---\n签名算法工具，签名生成的步骤如下：\n 第一步，设所有发送或者接收到的数据为集合M，将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&key2=value2…）拼接成字符串stringA。\n\n 第二步，在stringA最后拼接上key得到stringSignTemp字符串，并对stringSignTemp进行MD5运算，再将得到的字符串所有字符转换为大写，得到sign值signValue。\n<!-- more -->\n特别注意以下重要规则：</br>\n\t◆ 参数名ASCII码从小到大排序（字典序）；</br>\n\t◆ 如果参数的值为空不参与签名；</br>\n\t◆ 参数名区分大小写；</br>\n\t◆ 验证调用返回或主动通知签名时，传送的sign参数不参与签名，将生成的签名与该sign值作校验。</br>\n\t◆ key值由互金端提供；</br>\n\n```\n\timport java.io.StringReader;\n\timport java.net.URLEncoder;\n\timport java.util.ArrayList;\n\timport java.util.Collections;\n\timport java.util.HashMap;\n\timport java.util.List;\n\timport java.util.Map;\n\timport java.util.SortedMap;\n\timport java.util.TreeMap;\n\t\n\timport org.dom4j.Document;\n\timport org.dom4j.DocumentException;\n\timport org.dom4j.Element;\n\timport org.dom4j.io.SAXReader;\n\timport org.xml.sax.InputSource;\n\t/**\n\t* ClassName:SignUtils</br>\n\t* Function: 签名用的工具箱</br>\n\t* Date:     2017-2-27 下午3:22:33 </br>\n\t* <功能详细描述>签名算法</br>\n\t* @author    \n\t*/\n\n\tpublic class SignUtils {\n\t    public static void main(String[] args) {\n\t        String key = \"CvRu8Dydbe7SETJoqh5wQYBp4PnZxigz\";\n\t        SortedMap<String,String> params = new TreeMap<String,String>();\n\t        params.put(\"orderId\", \"1112233\");\n\t        params.put(\"merchantId\", \"3700603014\");\n\t        params.put(\"applyAmount\", \"1000000\");\n\t        params.put(\"sign\", \"sdfsdf\");\n\t        String sign = getSign(params,key);//签名\n\t        System.out.println(\"sign:\"+sign.toUpperCase());\n\t        params.put(\"sign\", sign.toUpperCase());\n\t        System.out.println(\"sign:\"+checkParam(params,key));//验证\n\t    }\n\t    /** <一句话功能简述>\n\t     * <功能详细描述>验证返回参数\n\t     * @param params\n\t     * @param key\n\t     * @return\n\t     * @see [类、类#方法、类#成员]\n\t     */\n\t    public static boolean checkParam(Map<String,String> params,String key){\n\t        boolean result = false;\n\t        if(params.containsKey(\"sign\")){\n\t            String sign = params.get(\"sign\");\n\t            params.remove(\"sign\");\n\t            params = paraFilter(params);\n\t            StringBuilder buf = new StringBuilder((params.size() +1) * 10);\n\t            SignUtils.buildPayParams(buf,params,false);\n\t            String preStr = buf.toString();\n\t            String signRecieve = MD5.sign(preStr, \"&key=\" + key, \"utf-8\");\n\t            System.out.println(signRecieve);\n\t            result = sign.equalsIgnoreCase(signRecieve);\n\t        }\n\t        return result;\n\t    }\n\t    \n\t    /**\n\t     * 获取签名\n\t     * @param map 对象\n\t     * @param key 密匙\n\t     * @return 签名\n\t     */\n\t    public static String getSign(SortedMap<String,String> map,String key){\n\t        Map<String, String> params = SignUtils.paraFilter(map);\n\t        StringBuilder buf = new StringBuilder((params.size() + 1) * 10);\n\t        SignUtils.buildPayParams(buf, params, false);\n\t        String preStr = buf.toString();\n\t        System.out.println(preStr);\n\t        String sign = MD5.sign(preStr, \"&key=\" + key, \"utf-8\").toUpperCase();\n\t        return sign;\n\t    }\n\t    \n\t    /**\n\t     * 过滤参数:过滤掉sArray中value为空和key为sign的键值对\n\t     * @param sArray\n\t     * @return\n\t     */\n\t\n\t    public static Map<String, String> paraFilter(Map<String, String> sArray) {\n\t        Map<String, String> result = new HashMap<String, String>(sArray.size());\n\t        if (sArray == null || sArray.size() <= 0) {\n\t            return result;\n\t        }\n\t        for (String key : sArray.keySet()) {\n\t            String value = sArray.get(key);\n\t            if (value == null || value.equals(\"\") || key.equalsIgnoreCase(\"sign\")) {\n\t                continue;\n\t            }\n\t            result.put(key, value);\n\t        }\n\t        return result;\n\t    }\n\t    \n\t\n\t   /**\n\t    * 将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&key2=value2…）拼接成字符串stringA\n\t    * @param sb 返回的字符串\n\t    * @param payParams  集合M\n\t    * @param encoding 是否需要经过UTF-8编码：true-需要  false-不需要\n\t    */\n\t\n\t    public static void buildPayParams(StringBuilder sb,Map<String, String> payParams,boolean encoding){\n\t        List<String> keys = new ArrayList<String>(payParams.keySet());\n\t        Collections.sort(keys);\n\t        for(String key : keys){\n\t            sb.append(key).append(\"=\");\n\t            if(encoding){\n\t                sb.append(urlEncode(payParams.get(key)));\n\t            }else{\n\t                sb.append(payParams.get(key));\n\t            }\n\t            sb.append(\"&\");\n\t        }\n\t        sb.setLength(sb.length() - 1);\n\t    }\n\t    \n\t    public static String urlEncode(String str){\n\t        try {\n\t            return URLEncoder.encode(str, \"UTF-8\");\n\t        } catch (Throwable e) {\n\t            return str;\n\t        }\n\t    }\n\t    \n\t    \n\t    public static Element readerXml(String body,String encode) throws DocumentException {\n\t        SAXReader reader = new SAXReader(false);\n\t        InputSource source = new InputSource(new StringReader(body));\n\t        source.setEncoding(encode);\n\t        Document doc = reader.read(source);\n\t        Element element = doc.getRootElement();\n\t        return element;\n\t    }\n\t\n\t}\n```\n","slug":"utils/signUtil","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59t000jw8mxb5bxuhhp","content":"<p>签名算法工具，签名生成的步骤如下：<br> 第一步，设所有发送或者接收到的数据为集合M，将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串stringA。</p>\n<p> 第二步，在stringA最后拼接上key得到stringSignTemp字符串，并对stringSignTemp进行MD5运算，再将得到的字符串所有字符转换为大写，得到sign值signValue。<br><a id=\"more\"></a><br>特别注意以下重要规则：<br><br>    ◆ 参数名ASCII码从小到大排序（字典序）；<br><br>    ◆ 如果参数的值为空不参与签名；<br><br>    ◆ 参数名区分大小写；<br><br>    ◆ 验证调用返回或主动通知签名时，传送的sign参数不参与签名，将生成的签名与该sign值作校验。<br><br>    ◆ key值由互金端提供；<br></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.StringReader;</span><br><span class=\"line\">import java.net.URLEncoder;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.Collections;</span><br><span class=\"line\">import java.util.HashMap;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\">import java.util.SortedMap;</span><br><span class=\"line\">import java.util.TreeMap;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.dom4j.Document;</span><br><span class=\"line\">import org.dom4j.DocumentException;</span><br><span class=\"line\">import org.dom4j.Element;</span><br><span class=\"line\">import org.dom4j.io.SAXReader;</span><br><span class=\"line\">import org.xml.sax.InputSource;</span><br><span class=\"line\">/**</span><br><span class=\"line\">* ClassName:SignUtils&lt;/br&gt;</span><br><span class=\"line\">* Function: 签名用的工具箱&lt;/br&gt;</span><br><span class=\"line\">* Date:     2017-2-27 下午3:22:33 &lt;/br&gt;</span><br><span class=\"line\">* &lt;功能详细描述&gt;签名算法&lt;/br&gt;</span><br><span class=\"line\">* @author    </span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">public class SignUtils &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        String key = &quot;CvRu8Dydbe7SETJoqh5wQYBp4PnZxigz&quot;;</span><br><span class=\"line\">        SortedMap&lt;String,String&gt; params = new TreeMap&lt;String,String&gt;();</span><br><span class=\"line\">        params.put(&quot;orderId&quot;, &quot;1112233&quot;);</span><br><span class=\"line\">        params.put(&quot;merchantId&quot;, &quot;3700603014&quot;);</span><br><span class=\"line\">        params.put(&quot;applyAmount&quot;, &quot;1000000&quot;);</span><br><span class=\"line\">        params.put(&quot;sign&quot;, &quot;sdfsdf&quot;);</span><br><span class=\"line\">        String sign = getSign(params,key);//签名</span><br><span class=\"line\">        System.out.println(&quot;sign:&quot;+sign.toUpperCase());</span><br><span class=\"line\">        params.put(&quot;sign&quot;, sign.toUpperCase());</span><br><span class=\"line\">        System.out.println(&quot;sign:&quot;+checkParam(params,key));//验证</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /** &lt;一句话功能简述&gt;</span><br><span class=\"line\">     * &lt;功能详细描述&gt;验证返回参数</span><br><span class=\"line\">     * @param params</span><br><span class=\"line\">     * @param key</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @see [类、类#方法、类#成员]</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static boolean checkParam(Map&lt;String,String&gt; params,String key)&#123;</span><br><span class=\"line\">        boolean result = false;</span><br><span class=\"line\">        if(params.containsKey(&quot;sign&quot;))&#123;</span><br><span class=\"line\">            String sign = params.get(&quot;sign&quot;);</span><br><span class=\"line\">            params.remove(&quot;sign&quot;);</span><br><span class=\"line\">            params = paraFilter(params);</span><br><span class=\"line\">            StringBuilder buf = new StringBuilder((params.size() +1) * 10);</span><br><span class=\"line\">            SignUtils.buildPayParams(buf,params,false);</span><br><span class=\"line\">            String preStr = buf.toString();</span><br><span class=\"line\">            String signRecieve = MD5.sign(preStr, &quot;&amp;key=&quot; + key, &quot;utf-8&quot;);</span><br><span class=\"line\">            System.out.println(signRecieve);</span><br><span class=\"line\">            result = sign.equalsIgnoreCase(signRecieve);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取签名</span><br><span class=\"line\">     * @param map 对象</span><br><span class=\"line\">     * @param key 密匙</span><br><span class=\"line\">     * @return 签名</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String getSign(SortedMap&lt;String,String&gt; map,String key)&#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; params = SignUtils.paraFilter(map);</span><br><span class=\"line\">        StringBuilder buf = new StringBuilder((params.size() + 1) * 10);</span><br><span class=\"line\">        SignUtils.buildPayParams(buf, params, false);</span><br><span class=\"line\">        String preStr = buf.toString();</span><br><span class=\"line\">        System.out.println(preStr);</span><br><span class=\"line\">        String sign = MD5.sign(preStr, &quot;&amp;key=&quot; + key, &quot;utf-8&quot;).toUpperCase();</span><br><span class=\"line\">        return sign;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 过滤参数:过滤掉sArray中value为空和key为sign的键值对</span><br><span class=\"line\">     * @param sArray</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\"></span><br><span class=\"line\">    public static Map&lt;String, String&gt; paraFilter(Map&lt;String, String&gt; sArray) &#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; result = new HashMap&lt;String, String&gt;(sArray.size());</span><br><span class=\"line\">        if (sArray == null || sArray.size() &lt;= 0) &#123;</span><br><span class=\"line\">            return result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for (String key : sArray.keySet()) &#123;</span><br><span class=\"line\">            String value = sArray.get(key);</span><br><span class=\"line\">            if (value == null || value.equals(&quot;&quot;) || key.equalsIgnoreCase(&quot;sign&quot;)) &#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            result.put(key, value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">   /**</span><br><span class=\"line\">    * 将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串stringA</span><br><span class=\"line\">    * @param sb 返回的字符串</span><br><span class=\"line\">    * @param payParams  集合M</span><br><span class=\"line\">    * @param encoding 是否需要经过UTF-8编码：true-需要  false-不需要</span><br><span class=\"line\">    */</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void buildPayParams(StringBuilder sb,Map&lt;String, String&gt; payParams,boolean encoding)&#123;</span><br><span class=\"line\">        List&lt;String&gt; keys = new ArrayList&lt;String&gt;(payParams.keySet());</span><br><span class=\"line\">        Collections.sort(keys);</span><br><span class=\"line\">        for(String key : keys)&#123;</span><br><span class=\"line\">            sb.append(key).append(&quot;=&quot;);</span><br><span class=\"line\">            if(encoding)&#123;</span><br><span class=\"line\">                sb.append(urlEncode(payParams.get(key)));</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                sb.append(payParams.get(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sb.append(&quot;&amp;&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sb.setLength(sb.length() - 1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static String urlEncode(String str)&#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            return URLEncoder.encode(str, &quot;UTF-8&quot;);</span><br><span class=\"line\">        &#125; catch (Throwable e) &#123;</span><br><span class=\"line\">            return str;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    public static Element readerXml(String body,String encode) throws DocumentException &#123;</span><br><span class=\"line\">        SAXReader reader = new SAXReader(false);</span><br><span class=\"line\">        InputSource source = new InputSource(new StringReader(body));</span><br><span class=\"line\">        source.setEncoding(encode);</span><br><span class=\"line\">        Document doc = reader.read(source);</span><br><span class=\"line\">        Element element = doc.getRootElement();</span><br><span class=\"line\">        return element;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>签名算法工具，签名生成的步骤如下：<br> 第一步，设所有发送或者接收到的数据为集合M，将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串stringA。</p>\n<p> 第二步，在stringA最后拼接上key得到stringSignTemp字符串，并对stringSignTemp进行MD5运算，再将得到的字符串所有字符转换为大写，得到sign值signValue。<br>","more":"<br>特别注意以下重要规则：<br><br>    ◆ 参数名ASCII码从小到大排序（字典序）；<br><br>    ◆ 如果参数的值为空不参与签名；<br><br>    ◆ 参数名区分大小写；<br><br>    ◆ 验证调用返回或主动通知签名时，传送的sign参数不参与签名，将生成的签名与该sign值作校验。<br><br>    ◆ key值由互金端提供；<br></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.StringReader;</span><br><span class=\"line\">import java.net.URLEncoder;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.Collections;</span><br><span class=\"line\">import java.util.HashMap;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\">import java.util.SortedMap;</span><br><span class=\"line\">import java.util.TreeMap;</span><br><span class=\"line\"></span><br><span class=\"line\">import org.dom4j.Document;</span><br><span class=\"line\">import org.dom4j.DocumentException;</span><br><span class=\"line\">import org.dom4j.Element;</span><br><span class=\"line\">import org.dom4j.io.SAXReader;</span><br><span class=\"line\">import org.xml.sax.InputSource;</span><br><span class=\"line\">/**</span><br><span class=\"line\">* ClassName:SignUtils&lt;/br&gt;</span><br><span class=\"line\">* Function: 签名用的工具箱&lt;/br&gt;</span><br><span class=\"line\">* Date:     2017-2-27 下午3:22:33 &lt;/br&gt;</span><br><span class=\"line\">* &lt;功能详细描述&gt;签名算法&lt;/br&gt;</span><br><span class=\"line\">* @author    </span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">public class SignUtils &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        String key = &quot;CvRu8Dydbe7SETJoqh5wQYBp4PnZxigz&quot;;</span><br><span class=\"line\">        SortedMap&lt;String,String&gt; params = new TreeMap&lt;String,String&gt;();</span><br><span class=\"line\">        params.put(&quot;orderId&quot;, &quot;1112233&quot;);</span><br><span class=\"line\">        params.put(&quot;merchantId&quot;, &quot;3700603014&quot;);</span><br><span class=\"line\">        params.put(&quot;applyAmount&quot;, &quot;1000000&quot;);</span><br><span class=\"line\">        params.put(&quot;sign&quot;, &quot;sdfsdf&quot;);</span><br><span class=\"line\">        String sign = getSign(params,key);//签名</span><br><span class=\"line\">        System.out.println(&quot;sign:&quot;+sign.toUpperCase());</span><br><span class=\"line\">        params.put(&quot;sign&quot;, sign.toUpperCase());</span><br><span class=\"line\">        System.out.println(&quot;sign:&quot;+checkParam(params,key));//验证</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /** &lt;一句话功能简述&gt;</span><br><span class=\"line\">     * &lt;功能详细描述&gt;验证返回参数</span><br><span class=\"line\">     * @param params</span><br><span class=\"line\">     * @param key</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     * @see [类、类#方法、类#成员]</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static boolean checkParam(Map&lt;String,String&gt; params,String key)&#123;</span><br><span class=\"line\">        boolean result = false;</span><br><span class=\"line\">        if(params.containsKey(&quot;sign&quot;))&#123;</span><br><span class=\"line\">            String sign = params.get(&quot;sign&quot;);</span><br><span class=\"line\">            params.remove(&quot;sign&quot;);</span><br><span class=\"line\">            params = paraFilter(params);</span><br><span class=\"line\">            StringBuilder buf = new StringBuilder((params.size() +1) * 10);</span><br><span class=\"line\">            SignUtils.buildPayParams(buf,params,false);</span><br><span class=\"line\">            String preStr = buf.toString();</span><br><span class=\"line\">            String signRecieve = MD5.sign(preStr, &quot;&amp;key=&quot; + key, &quot;utf-8&quot;);</span><br><span class=\"line\">            System.out.println(signRecieve);</span><br><span class=\"line\">            result = sign.equalsIgnoreCase(signRecieve);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 获取签名</span><br><span class=\"line\">     * @param map 对象</span><br><span class=\"line\">     * @param key 密匙</span><br><span class=\"line\">     * @return 签名</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static String getSign(SortedMap&lt;String,String&gt; map,String key)&#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; params = SignUtils.paraFilter(map);</span><br><span class=\"line\">        StringBuilder buf = new StringBuilder((params.size() + 1) * 10);</span><br><span class=\"line\">        SignUtils.buildPayParams(buf, params, false);</span><br><span class=\"line\">        String preStr = buf.toString();</span><br><span class=\"line\">        System.out.println(preStr);</span><br><span class=\"line\">        String sign = MD5.sign(preStr, &quot;&amp;key=&quot; + key, &quot;utf-8&quot;).toUpperCase();</span><br><span class=\"line\">        return sign;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 过滤参数:过滤掉sArray中value为空和key为sign的键值对</span><br><span class=\"line\">     * @param sArray</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\"></span><br><span class=\"line\">    public static Map&lt;String, String&gt; paraFilter(Map&lt;String, String&gt; sArray) &#123;</span><br><span class=\"line\">        Map&lt;String, String&gt; result = new HashMap&lt;String, String&gt;(sArray.size());</span><br><span class=\"line\">        if (sArray == null || sArray.size() &lt;= 0) &#123;</span><br><span class=\"line\">            return result;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        for (String key : sArray.keySet()) &#123;</span><br><span class=\"line\">            String value = sArray.get(key);</span><br><span class=\"line\">            if (value == null || value.equals(&quot;&quot;) || key.equalsIgnoreCase(&quot;sign&quot;)) &#123;</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            result.put(key, value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\">   /**</span><br><span class=\"line\">    * 将集合M内非空参数值的参数按照参数名ASCII码从小到大排序（字典序），使用URL键值对的格式（即key1=value1&amp;key2=value2…）拼接成字符串stringA</span><br><span class=\"line\">    * @param sb 返回的字符串</span><br><span class=\"line\">    * @param payParams  集合M</span><br><span class=\"line\">    * @param encoding 是否需要经过UTF-8编码：true-需要  false-不需要</span><br><span class=\"line\">    */</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void buildPayParams(StringBuilder sb,Map&lt;String, String&gt; payParams,boolean encoding)&#123;</span><br><span class=\"line\">        List&lt;String&gt; keys = new ArrayList&lt;String&gt;(payParams.keySet());</span><br><span class=\"line\">        Collections.sort(keys);</span><br><span class=\"line\">        for(String key : keys)&#123;</span><br><span class=\"line\">            sb.append(key).append(&quot;=&quot;);</span><br><span class=\"line\">            if(encoding)&#123;</span><br><span class=\"line\">                sb.append(urlEncode(payParams.get(key)));</span><br><span class=\"line\">            &#125;else&#123;</span><br><span class=\"line\">                sb.append(payParams.get(key));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            sb.append(&quot;&amp;&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        sb.setLength(sb.length() - 1);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static String urlEncode(String str)&#123;</span><br><span class=\"line\">        try &#123;</span><br><span class=\"line\">            return URLEncoder.encode(str, &quot;UTF-8&quot;);</span><br><span class=\"line\">        &#125; catch (Throwable e) &#123;</span><br><span class=\"line\">            return str;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    public static Element readerXml(String body,String encode) throws DocumentException &#123;</span><br><span class=\"line\">        SAXReader reader = new SAXReader(false);</span><br><span class=\"line\">        InputSource source = new InputSource(new StringReader(body));</span><br><span class=\"line\">        source.setEncoding(encode);</span><br><span class=\"line\">        Document doc = reader.read(source);</span><br><span class=\"line\">        Element element = doc.getRootElement();</span><br><span class=\"line\">        return element;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"《我的爸爸是个骗子》风靡全球","date":"2016-11-27T16:00:00.000Z","sid":"c94034d8-1904-447e-b87d-b234ae9acfd5","_content":"\n网上一则泰国公益视频《我的爸爸是个骗子》爆红网络。这让看完视频的网友们不禁潸然泪下，直接泪目。\n\n视频中这样一段字幕却感动了无数网友。\n\n<!-- more -->\n\n<iframe frameborder=\"0\" width=\"640\" height=\"498\" src=\"https://v.qq.com/iframe/player.html?vid=e0155jhqy91&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n\nDaddy is the sweetest daddy in the world;  \n爸爸是世界上最好的爸爸；  \n\nDaddy is the most handsome, the smartest;the most clever, the kindest;  \n爸爸最帅，最机智；最聪明，最善良；  \n\nHe is my superman;  \n他就是我的超人；  \n\nDaddy wants me to do well at school;  \n爸爸希望我学习好；  \n\nDaddy is just great;  \n爸爸很好，  \n\nbut he lies......  \n但是，他撒谎！  \n\nHe lies about having a job;  \n他撒谎说他有工作；  \n\nHe lies about having money;  \n他撒谎说他有钱；  \n\nHe lies that he's not tired;  \n他撒谎说他不累；  \n\nHe lies that he's not hungry;  \n他撒谎说他不饿；  \n\nHe lies that we have everything;  \n他撒谎说我们什么都不缺；  \n\nHe lies about his happiness;  \n他撒谎说他很幸福；  \n\nHe lies because of me...  \n我知道，他撒谎是为了我幸福......  \n","source":"_posts/video/my-father-is-liar.md","raw":"---\ntitle: 《我的爸爸是个骗子》风靡全球\ndate: 2016-11-28 00:00:00\nsid: c94034d8-1904-447e-b87d-b234ae9acfd5\ntags: [视频,公益广告]\ncategories: \n  - 视频\n---\n\n网上一则泰国公益视频《我的爸爸是个骗子》爆红网络。这让看完视频的网友们不禁潸然泪下，直接泪目。\n\n视频中这样一段字幕却感动了无数网友。\n\n<!-- more -->\n\n<iframe frameborder=\"0\" width=\"640\" height=\"498\" src=\"https://v.qq.com/iframe/player.html?vid=e0155jhqy91&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n\nDaddy is the sweetest daddy in the world;  \n爸爸是世界上最好的爸爸；  \n\nDaddy is the most handsome, the smartest;the most clever, the kindest;  \n爸爸最帅，最机智；最聪明，最善良；  \n\nHe is my superman;  \n他就是我的超人；  \n\nDaddy wants me to do well at school;  \n爸爸希望我学习好；  \n\nDaddy is just great;  \n爸爸很好，  \n\nbut he lies......  \n但是，他撒谎！  \n\nHe lies about having a job;  \n他撒谎说他有工作；  \n\nHe lies about having money;  \n他撒谎说他有钱；  \n\nHe lies that he's not tired;  \n他撒谎说他不累；  \n\nHe lies that he's not hungry;  \n他撒谎说他不饿；  \n\nHe lies that we have everything;  \n他撒谎说我们什么都不缺；  \n\nHe lies about his happiness;  \n他撒谎说他很幸福；  \n\nHe lies because of me...  \n我知道，他撒谎是为了我幸福......  \n","slug":"video/my-father-is-liar","published":1,"updated":"2020-03-11T10:48:16.861Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59v000nw8mx00l465bi","content":"<p>网上一则泰国公益视频《我的爸爸是个骗子》爆红网络。这让看完视频的网友们不禁潸然泪下，直接泪目。</p>\n<p>视频中这样一段字幕却感动了无数网友。</p>\n<a id=\"more\"></a>\n<iframe frameborder=\"0\" width=\"640\" height=\"498\" src=\"https://v.qq.com/iframe/player.html?vid=e0155jhqy91&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n\n<p>Daddy is the sweetest daddy in the world;<br>爸爸是世界上最好的爸爸；  </p>\n<p>Daddy is the most handsome, the smartest;the most clever, the kindest;<br>爸爸最帅，最机智；最聪明，最善良；  </p>\n<p>He is my superman;<br>他就是我的超人；  </p>\n<p>Daddy wants me to do well at school;<br>爸爸希望我学习好；  </p>\n<p>Daddy is just great;<br>爸爸很好，  </p>\n<p>but he lies……<br>但是，他撒谎！  </p>\n<p>He lies about having a job;<br>他撒谎说他有工作；  </p>\n<p>He lies about having money;<br>他撒谎说他有钱；  </p>\n<p>He lies that he’s not tired;<br>他撒谎说他不累；  </p>\n<p>He lies that he’s not hungry;<br>他撒谎说他不饿；  </p>\n<p>He lies that we have everything;<br>他撒谎说我们什么都不缺；  </p>\n<p>He lies about his happiness;<br>他撒谎说他很幸福；  </p>\n<p>He lies because of me…<br>我知道，他撒谎是为了我幸福……  </p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>网上一则泰国公益视频《我的爸爸是个骗子》爆红网络。这让看完视频的网友们不禁潸然泪下，直接泪目。</p>\n<p>视频中这样一段字幕却感动了无数网友。</p>","more":"<iframe frameborder=\"0\" width=\"640\" height=\"498\" src=\"https://v.qq.com/iframe/player.html?vid=e0155jhqy91&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n\n<p>Daddy is the sweetest daddy in the world;<br>爸爸是世界上最好的爸爸；  </p>\n<p>Daddy is the most handsome, the smartest;the most clever, the kindest;<br>爸爸最帅，最机智；最聪明，最善良；  </p>\n<p>He is my superman;<br>他就是我的超人；  </p>\n<p>Daddy wants me to do well at school;<br>爸爸希望我学习好；  </p>\n<p>Daddy is just great;<br>爸爸很好，  </p>\n<p>but he lies……<br>但是，他撒谎！  </p>\n<p>He lies about having a job;<br>他撒谎说他有工作；  </p>\n<p>He lies about having money;<br>他撒谎说他有钱；  </p>\n<p>He lies that he’s not tired;<br>他撒谎说他不累；  </p>\n<p>He lies that he’s not hungry;<br>他撒谎说他不饿；  </p>\n<p>He lies that we have everything;<br>他撒谎说我们什么都不缺；  </p>\n<p>He lies about his happiness;<br>他撒谎说他很幸福；  </p>\n<p>He lies because of me…<br>我知道，他撒谎是为了我幸福……  </p>"},{"title":"这个世界，总有人偷偷爱着你","date":"2018-05-07T17:44:27.000Z","_content":"\n这是999感冒灵推出的感恩节短片视频  \n广告片选取真人事件改编  \n以一段网络问答为线  \n串联5个反转故事  \n\n<!--more-->\n\n<iframe frameborder=\"0\" width=\"800\" height=\"450\" src=\"https://v.qq.com/iframe/player.html?vid=g0508voeofz&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n这是999感冒灵推出的感恩节短片视频  \n广告片选取真人事件改编  \n以一段网络问答为线  \n串联5个反转故事  \n反转前的文案非常直接无情地揭开了生活冷漠的一面  \n每个人都自顾不暇  \n没有人会在意你的感受  \n每个人都小心翼翼地活着  \n没有人在乎你的境遇  \n行色匆匆的人群里  \n你并不特别也不会有优待  \n你的苦楚  \n不过是别人眼里的笑话  \n人心冷漠的世界里  \n每个人都无处可逃  \n即使已经听惯了毒鸡汤  \n还是被这些话呕出一口血  \n大概是因为事实如此无法反驳吧  \n可是  \n这个世界不会好了吗？  \n故事总是有反转的\n\n","source":"_posts/video/zhe-ge-shi-jie-zong-you-ren-tou-tou-ai-zhao-ni.md","raw":"---\ntitle: 这个世界，总有人偷偷爱着你\ndate: 2018-05-08 01:44:27\ntags: [视频,公益广告]\ncategories: \n  - 视频\n---\n\n这是999感冒灵推出的感恩节短片视频  \n广告片选取真人事件改编  \n以一段网络问答为线  \n串联5个反转故事  \n\n<!--more-->\n\n<iframe frameborder=\"0\" width=\"800\" height=\"450\" src=\"https://v.qq.com/iframe/player.html?vid=g0508voeofz&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n这是999感冒灵推出的感恩节短片视频  \n广告片选取真人事件改编  \n以一段网络问答为线  \n串联5个反转故事  \n反转前的文案非常直接无情地揭开了生活冷漠的一面  \n每个人都自顾不暇  \n没有人会在意你的感受  \n每个人都小心翼翼地活着  \n没有人在乎你的境遇  \n行色匆匆的人群里  \n你并不特别也不会有优待  \n你的苦楚  \n不过是别人眼里的笑话  \n人心冷漠的世界里  \n每个人都无处可逃  \n即使已经听惯了毒鸡汤  \n还是被这些话呕出一口血  \n大概是因为事实如此无法反驳吧  \n可是  \n这个世界不会好了吗？  \n故事总是有反转的\n\n","slug":"video/zhe-ge-shi-jie-zong-you-ren-tou-tou-ai-zhao-ni","published":1,"updated":"2020-03-11T10:48:16.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59w000ow8mxahz3pkg4","content":"<p>这是999感冒灵推出的感恩节短片视频<br>广告片选取真人事件改编<br>以一段网络问答为线<br>串联5个反转故事  </p>\n<a id=\"more\"></a>\n<iframe frameborder=\"0\" width=\"800\" height=\"450\" src=\"https://v.qq.com/iframe/player.html?vid=g0508voeofz&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n<p>这是999感冒灵推出的感恩节短片视频<br>广告片选取真人事件改编<br>以一段网络问答为线<br>串联5个反转故事<br>反转前的文案非常直接无情地揭开了生活冷漠的一面<br>每个人都自顾不暇<br>没有人会在意你的感受<br>每个人都小心翼翼地活着<br>没有人在乎你的境遇<br>行色匆匆的人群里<br>你并不特别也不会有优待<br>你的苦楚<br>不过是别人眼里的笑话<br>人心冷漠的世界里<br>每个人都无处可逃<br>即使已经听惯了毒鸡汤<br>还是被这些话呕出一口血<br>大概是因为事实如此无法反驳吧<br>可是<br>这个世界不会好了吗？<br>故事总是有反转的</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>这是999感冒灵推出的感恩节短片视频<br>广告片选取真人事件改编<br>以一段网络问答为线<br>串联5个反转故事  </p>","more":"<iframe frameborder=\"0\" width=\"800\" height=\"450\" src=\"https://v.qq.com/iframe/player.html?vid=g0508voeofz&tiny=0&auto=0\" allowfullscreen></iframe>  \n\n<p>这是999感冒灵推出的感恩节短片视频<br>广告片选取真人事件改编<br>以一段网络问答为线<br>串联5个反转故事<br>反转前的文案非常直接无情地揭开了生活冷漠的一面<br>每个人都自顾不暇<br>没有人会在意你的感受<br>每个人都小心翼翼地活着<br>没有人在乎你的境遇<br>行色匆匆的人群里<br>你并不特别也不会有优待<br>你的苦楚<br>不过是别人眼里的笑话<br>人心冷漠的世界里<br>每个人都无处可逃<br>即使已经听惯了毒鸡汤<br>还是被这些话呕出一口血<br>大概是因为事实如此无法反驳吧<br>可是<br>这个世界不会好了吗？<br>故事总是有反转的</p>"},{"title":"幸运大转盘抽奖 抽奖算法 程序实现逻辑","date":"2017-10-25T16:00:00.000Z","sid":"baf1c39d-d92f-474f-9d38-49a82389435b","_content":">近期碰到的一个需求，实现一个类似大转盘抽奖的功能，需自定义奖项，各奖项中奖概率，当日抽奖最大次数，抽奖成本等。分享一个简单的java代码的实现的思路，有不足之处感谢各位指正。\n<!--more-->\n\n![](http://ofbphtmkb.bkt.clouddn.com/qianxun/e/f3/3222d8e23d1b9889a6913d8d1fb14.png)\n\n# 初步方法\n\n首先要定义几个奖品，例如：\n- iphone 中奖机率 10% \n- 100元购物卷 中奖机率 30% \n- 10元购物卷 中奖机率 50% \n\n总的中奖机率是 10%+30%+50%=90%\n\n剩余10%是谢谢惠顾，不中奖的\n\n## 设计思路\n这个是把所有商品按照概率分配到数组里面\n\n- A[0] = iphone\n- A[1] = iphone \n- A[2] = iphone \n- ...\n- A[10] = iphone\n\n- A[11] = 100元购物卷 \n- A[12] = 100元购物卷 \n- ...\n\n然后随机一个0到99的数字，例如现在随机的数字是2\n\n那么A[2]就是中奖的商品A[2] = iphone\n\n```java\n//定义中奖率分母 百分之\nint probabilityCount = 100;  \nString[] prizesId = new String[probabilityCount];  \n//获取商品列表\nList<AdPrizeInfo> prizeInfoList = prizeInfoService.getPrizeInfo();  \nint num = 0;  \n//循环所有商品\nfor (AdPrizeInfo prize : prizeInfoList) {  \n    Integer probability = prize.getOdds();\n    //循环商品概率\n    for (int i = 0; i < probability; i++) {\n        prizesId[num] = prize.getId();\n        num ++;\n    }\n}\n\n//随机一个数字\nint index = (int) (Math.random() * probabilityCount);  \n//获取到随机商品ID\nString prizeId = prizesId[index];  \n```\n\n# 优化方法\n\n## 设计思路\n\n以上方法如果大概率的话，是很吃内存的，整理优化为一下方法：\n\n![](http://ofbphtmkb.bkt.clouddn.com/qianxun/c/73/ff890460e3fe6895416d64840985d.jpg)\n\n使用范围算法\n\n```java\n//定义中奖率分母 百分之\nint probabilityCount = 100;  \n//最小概率值\nString min = \"min\";  \n//最大概率值\nString max = \"max\";  \nInteger tempInt = 0;  \n//待中奖商品数组\nMap<String,Map<String,Integer>> prizesMap = new HashMap<>();  \n//获取商品列表\nList<AdPrizeInfo> prizeInfoList = prizeInfoService.getPrizeInfo();  \nfor (AdPrizeInfo prize : prizeInfoList) {  \n    Map<String,Integer> oddsMap = new HashMap<>();\n    //最小概率值\n    oddsMap.put(min,tempInt);\n    tempInt = tempInt + prize.getOdds();\n    //最大概率值\n    oddsMap.put(max,tempInt);\n    prizesMap.put(prize.getId(),oddsMap);\n}\n\n\n//随机一个数字\nint index = (int) (Math.random() * probabilityCount);  \nAdPrizeInfo prizeInfo = null;  \nSet<String> prizesIds = prizesMap.keySet();  \nfor(String prizesId : prizesIds){  \n    Map<String,Integer> oddsMap = prizesMap.get(prizesId);\n    Integer minNum = oddsMap.get(min);\n    Integer maxNum = oddsMap.get(max);\n    //校验index 再哪个商品概率中间\n    if(minNum <= index && maxNum > index){\n        prizeInfo = prizeInfoService.selectByPrimaryKey(prizesId);\n        break;\n    }\n}\n\n//如果为空，则没中奖\nif(prizeInfo == null){  \n    prizeInfo = null;\n}\n```","source":"_posts/tech/xing-yun-da-zhuan-pan-chou-jiang-cheng-xu-shi-xian-luo-ji.md","raw":"---\ntitle: 幸运大转盘抽奖 抽奖算法 程序实现逻辑\ndate: 2017-10-26 00:00:00\nsid: baf1c39d-d92f-474f-9d38-49a82389435b\ntags: [Java,抽奖]\ncategories: \n  - 技术杂文\n---\n>近期碰到的一个需求，实现一个类似大转盘抽奖的功能，需自定义奖项，各奖项中奖概率，当日抽奖最大次数，抽奖成本等。分享一个简单的java代码的实现的思路，有不足之处感谢各位指正。\n<!--more-->\n\n![](http://ofbphtmkb.bkt.clouddn.com/qianxun/e/f3/3222d8e23d1b9889a6913d8d1fb14.png)\n\n# 初步方法\n\n首先要定义几个奖品，例如：\n- iphone 中奖机率 10% \n- 100元购物卷 中奖机率 30% \n- 10元购物卷 中奖机率 50% \n\n总的中奖机率是 10%+30%+50%=90%\n\n剩余10%是谢谢惠顾，不中奖的\n\n## 设计思路\n这个是把所有商品按照概率分配到数组里面\n\n- A[0] = iphone\n- A[1] = iphone \n- A[2] = iphone \n- ...\n- A[10] = iphone\n\n- A[11] = 100元购物卷 \n- A[12] = 100元购物卷 \n- ...\n\n然后随机一个0到99的数字，例如现在随机的数字是2\n\n那么A[2]就是中奖的商品A[2] = iphone\n\n```java\n//定义中奖率分母 百分之\nint probabilityCount = 100;  \nString[] prizesId = new String[probabilityCount];  \n//获取商品列表\nList<AdPrizeInfo> prizeInfoList = prizeInfoService.getPrizeInfo();  \nint num = 0;  \n//循环所有商品\nfor (AdPrizeInfo prize : prizeInfoList) {  \n    Integer probability = prize.getOdds();\n    //循环商品概率\n    for (int i = 0; i < probability; i++) {\n        prizesId[num] = prize.getId();\n        num ++;\n    }\n}\n\n//随机一个数字\nint index = (int) (Math.random() * probabilityCount);  \n//获取到随机商品ID\nString prizeId = prizesId[index];  \n```\n\n# 优化方法\n\n## 设计思路\n\n以上方法如果大概率的话，是很吃内存的，整理优化为一下方法：\n\n![](http://ofbphtmkb.bkt.clouddn.com/qianxun/c/73/ff890460e3fe6895416d64840985d.jpg)\n\n使用范围算法\n\n```java\n//定义中奖率分母 百分之\nint probabilityCount = 100;  \n//最小概率值\nString min = \"min\";  \n//最大概率值\nString max = \"max\";  \nInteger tempInt = 0;  \n//待中奖商品数组\nMap<String,Map<String,Integer>> prizesMap = new HashMap<>();  \n//获取商品列表\nList<AdPrizeInfo> prizeInfoList = prizeInfoService.getPrizeInfo();  \nfor (AdPrizeInfo prize : prizeInfoList) {  \n    Map<String,Integer> oddsMap = new HashMap<>();\n    //最小概率值\n    oddsMap.put(min,tempInt);\n    tempInt = tempInt + prize.getOdds();\n    //最大概率值\n    oddsMap.put(max,tempInt);\n    prizesMap.put(prize.getId(),oddsMap);\n}\n\n\n//随机一个数字\nint index = (int) (Math.random() * probabilityCount);  \nAdPrizeInfo prizeInfo = null;  \nSet<String> prizesIds = prizesMap.keySet();  \nfor(String prizesId : prizesIds){  \n    Map<String,Integer> oddsMap = prizesMap.get(prizesId);\n    Integer minNum = oddsMap.get(min);\n    Integer maxNum = oddsMap.get(max);\n    //校验index 再哪个商品概率中间\n    if(minNum <= index && maxNum > index){\n        prizeInfo = prizeInfoService.selectByPrimaryKey(prizesId);\n        break;\n    }\n}\n\n//如果为空，则没中奖\nif(prizeInfo == null){  \n    prizeInfo = null;\n}\n```","slug":"tech/xing-yun-da-zhuan-pan-chou-jiang-cheng-xu-shi-xian-luo-ji","published":1,"updated":"2020-03-11T10:48:16.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o59x000sw8mxw4om2wf8","content":"<blockquote>\n<p>近期碰到的一个需求，实现一个类似大转盘抽奖的功能，需自定义奖项，各奖项中奖概率，当日抽奖最大次数，抽奖成本等。分享一个简单的java代码的实现的思路，有不足之处感谢各位指正。<br><a id=\"more\"></a></p>\n</blockquote>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/qianxun/e/f3/3222d8e23d1b9889a6913d8d1fb14.png\" alt=\"\"></p>\n<h1 id=\"初步方法\"><a href=\"#初步方法\" class=\"headerlink\" title=\"初步方法\"></a>初步方法</h1><p>首先要定义几个奖品，例如：</p>\n<ul>\n<li>iphone 中奖机率 10% </li>\n<li>100元购物卷 中奖机率 30% </li>\n<li>10元购物卷 中奖机率 50% </li>\n</ul>\n<p>总的中奖机率是 10%+30%+50%=90%</p>\n<p>剩余10%是谢谢惠顾，不中奖的</p>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><p>这个是把所有商品按照概率分配到数组里面</p>\n<ul>\n<li>A[0] = iphone</li>\n<li>A[1] = iphone </li>\n<li>A[2] = iphone </li>\n<li>…</li>\n<li><p>A[10] = iphone</p>\n</li>\n<li><p>A[11] = 100元购物卷 </p>\n</li>\n<li>A[12] = 100元购物卷 </li>\n<li>…</li>\n</ul>\n<p>然后随机一个0到99的数字，例如现在随机的数字是2</p>\n<p>那么A[2]就是中奖的商品A[2] = iphone</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义中奖率分母 百分之</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> probabilityCount = <span class=\"number\">100</span>;  </span><br><span class=\"line\">String[] prizesId = <span class=\"keyword\">new</span> String[probabilityCount];  </span><br><span class=\"line\"><span class=\"comment\">//获取商品列表</span></span><br><span class=\"line\">List&lt;AdPrizeInfo&gt; prizeInfoList = prizeInfoService.getPrizeInfo();  </span><br><span class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;  </span><br><span class=\"line\"><span class=\"comment\">//循环所有商品</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (AdPrizeInfo prize : prizeInfoList) &#123;  </span><br><span class=\"line\">    Integer probability = prize.getOdds();</span><br><span class=\"line\">    <span class=\"comment\">//循环商品概率</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; probability; i++) &#123;</span><br><span class=\"line\">        prizesId[num] = prize.getId();</span><br><span class=\"line\">        num ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//随机一个数字</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> index = (<span class=\"keyword\">int</span>) (Math.random() * probabilityCount);  </span><br><span class=\"line\"><span class=\"comment\">//获取到随机商品ID</span></span><br><span class=\"line\">String prizeId = prizesId[index];</span><br></pre></td></tr></table></figure>\n<h1 id=\"优化方法\"><a href=\"#优化方法\" class=\"headerlink\" title=\"优化方法\"></a>优化方法</h1><h2 id=\"设计思路-1\"><a href=\"#设计思路-1\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><p>以上方法如果大概率的话，是很吃内存的，整理优化为一下方法：</p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/qianxun/c/73/ff890460e3fe6895416d64840985d.jpg\" alt=\"\"></p>\n<p>使用范围算法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义中奖率分母 百分之</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> probabilityCount = <span class=\"number\">100</span>;  </span><br><span class=\"line\"><span class=\"comment\">//最小概率值</span></span><br><span class=\"line\">String min = <span class=\"string\">\"min\"</span>;  </span><br><span class=\"line\"><span class=\"comment\">//最大概率值</span></span><br><span class=\"line\">String max = <span class=\"string\">\"max\"</span>;  </span><br><span class=\"line\">Integer tempInt = <span class=\"number\">0</span>;  </span><br><span class=\"line\"><span class=\"comment\">//待中奖商品数组</span></span><br><span class=\"line\">Map&lt;String,Map&lt;String,Integer&gt;&gt; prizesMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();  </span><br><span class=\"line\"><span class=\"comment\">//获取商品列表</span></span><br><span class=\"line\">List&lt;AdPrizeInfo&gt; prizeInfoList = prizeInfoService.getPrizeInfo();  </span><br><span class=\"line\"><span class=\"keyword\">for</span> (AdPrizeInfo prize : prizeInfoList) &#123;  </span><br><span class=\"line\">    Map&lt;String,Integer&gt; oddsMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//最小概率值</span></span><br><span class=\"line\">    oddsMap.put(min,tempInt);</span><br><span class=\"line\">    tempInt = tempInt + prize.getOdds();</span><br><span class=\"line\">    <span class=\"comment\">//最大概率值</span></span><br><span class=\"line\">    oddsMap.put(max,tempInt);</span><br><span class=\"line\">    prizesMap.put(prize.getId(),oddsMap);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//随机一个数字</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> index = (<span class=\"keyword\">int</span>) (Math.random() * probabilityCount);  </span><br><span class=\"line\">AdPrizeInfo prizeInfo = <span class=\"keyword\">null</span>;  </span><br><span class=\"line\">Set&lt;String&gt; prizesIds = prizesMap.keySet();  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(String prizesId : prizesIds)&#123;  </span><br><span class=\"line\">    Map&lt;String,Integer&gt; oddsMap = prizesMap.get(prizesId);</span><br><span class=\"line\">    Integer minNum = oddsMap.get(min);</span><br><span class=\"line\">    Integer maxNum = oddsMap.get(max);</span><br><span class=\"line\">    <span class=\"comment\">//校验index 再哪个商品概率中间</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minNum &lt;= index &amp;&amp; maxNum &gt; index)&#123;</span><br><span class=\"line\">        prizeInfo = prizeInfoService.selectByPrimaryKey(prizesId);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果为空，则没中奖</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(prizeInfo == <span class=\"keyword\">null</span>)&#123;  </span><br><span class=\"line\">    prizeInfo = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<blockquote>\n<p>近期碰到的一个需求，实现一个类似大转盘抽奖的功能，需自定义奖项，各奖项中奖概率，当日抽奖最大次数，抽奖成本等。分享一个简单的java代码的实现的思路，有不足之处感谢各位指正。<br>","more":"</p>\n</blockquote>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/qianxun/e/f3/3222d8e23d1b9889a6913d8d1fb14.png\" alt=\"\"></p>\n<h1 id=\"初步方法\"><a href=\"#初步方法\" class=\"headerlink\" title=\"初步方法\"></a>初步方法</h1><p>首先要定义几个奖品，例如：</p>\n<ul>\n<li>iphone 中奖机率 10% </li>\n<li>100元购物卷 中奖机率 30% </li>\n<li>10元购物卷 中奖机率 50% </li>\n</ul>\n<p>总的中奖机率是 10%+30%+50%=90%</p>\n<p>剩余10%是谢谢惠顾，不中奖的</p>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><p>这个是把所有商品按照概率分配到数组里面</p>\n<ul>\n<li>A[0] = iphone</li>\n<li>A[1] = iphone </li>\n<li>A[2] = iphone </li>\n<li>…</li>\n<li><p>A[10] = iphone</p>\n</li>\n<li><p>A[11] = 100元购物卷 </p>\n</li>\n<li>A[12] = 100元购物卷 </li>\n<li>…</li>\n</ul>\n<p>然后随机一个0到99的数字，例如现在随机的数字是2</p>\n<p>那么A[2]就是中奖的商品A[2] = iphone</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义中奖率分母 百分之</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> probabilityCount = <span class=\"number\">100</span>;  </span><br><span class=\"line\">String[] prizesId = <span class=\"keyword\">new</span> String[probabilityCount];  </span><br><span class=\"line\"><span class=\"comment\">//获取商品列表</span></span><br><span class=\"line\">List&lt;AdPrizeInfo&gt; prizeInfoList = prizeInfoService.getPrizeInfo();  </span><br><span class=\"line\"><span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;  </span><br><span class=\"line\"><span class=\"comment\">//循环所有商品</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (AdPrizeInfo prize : prizeInfoList) &#123;  </span><br><span class=\"line\">    Integer probability = prize.getOdds();</span><br><span class=\"line\">    <span class=\"comment\">//循环商品概率</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; probability; i++) &#123;</span><br><span class=\"line\">        prizesId[num] = prize.getId();</span><br><span class=\"line\">        num ++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//随机一个数字</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> index = (<span class=\"keyword\">int</span>) (Math.random() * probabilityCount);  </span><br><span class=\"line\"><span class=\"comment\">//获取到随机商品ID</span></span><br><span class=\"line\">String prizeId = prizesId[index];</span><br></pre></td></tr></table></figure>\n<h1 id=\"优化方法\"><a href=\"#优化方法\" class=\"headerlink\" title=\"优化方法\"></a>优化方法</h1><h2 id=\"设计思路-1\"><a href=\"#设计思路-1\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><p>以上方法如果大概率的话，是很吃内存的，整理优化为一下方法：</p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/qianxun/c/73/ff890460e3fe6895416d64840985d.jpg\" alt=\"\"></p>\n<p>使用范围算法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//定义中奖率分母 百分之</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> probabilityCount = <span class=\"number\">100</span>;  </span><br><span class=\"line\"><span class=\"comment\">//最小概率值</span></span><br><span class=\"line\">String min = <span class=\"string\">\"min\"</span>;  </span><br><span class=\"line\"><span class=\"comment\">//最大概率值</span></span><br><span class=\"line\">String max = <span class=\"string\">\"max\"</span>;  </span><br><span class=\"line\">Integer tempInt = <span class=\"number\">0</span>;  </span><br><span class=\"line\"><span class=\"comment\">//待中奖商品数组</span></span><br><span class=\"line\">Map&lt;String,Map&lt;String,Integer&gt;&gt; prizesMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();  </span><br><span class=\"line\"><span class=\"comment\">//获取商品列表</span></span><br><span class=\"line\">List&lt;AdPrizeInfo&gt; prizeInfoList = prizeInfoService.getPrizeInfo();  </span><br><span class=\"line\"><span class=\"keyword\">for</span> (AdPrizeInfo prize : prizeInfoList) &#123;  </span><br><span class=\"line\">    Map&lt;String,Integer&gt; oddsMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">//最小概率值</span></span><br><span class=\"line\">    oddsMap.put(min,tempInt);</span><br><span class=\"line\">    tempInt = tempInt + prize.getOdds();</span><br><span class=\"line\">    <span class=\"comment\">//最大概率值</span></span><br><span class=\"line\">    oddsMap.put(max,tempInt);</span><br><span class=\"line\">    prizesMap.put(prize.getId(),oddsMap);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//随机一个数字</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> index = (<span class=\"keyword\">int</span>) (Math.random() * probabilityCount);  </span><br><span class=\"line\">AdPrizeInfo prizeInfo = <span class=\"keyword\">null</span>;  </span><br><span class=\"line\">Set&lt;String&gt; prizesIds = prizesMap.keySet();  </span><br><span class=\"line\"><span class=\"keyword\">for</span>(String prizesId : prizesIds)&#123;  </span><br><span class=\"line\">    Map&lt;String,Integer&gt; oddsMap = prizesMap.get(prizesId);</span><br><span class=\"line\">    Integer minNum = oddsMap.get(min);</span><br><span class=\"line\">    Integer maxNum = oddsMap.get(max);</span><br><span class=\"line\">    <span class=\"comment\">//校验index 再哪个商品概率中间</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(minNum &lt;= index &amp;&amp; maxNum &gt; index)&#123;</span><br><span class=\"line\">        prizeInfo = prizeInfoService.selectByPrimaryKey(prizesId);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果为空，则没中奖</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(prizeInfo == <span class=\"keyword\">null</span>)&#123;  </span><br><span class=\"line\">    prizeInfo = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"缓存穿透，缓存击穿，缓存雪崩解决方案分析","date":"2017-04-18T03:27:23.000Z","_content":"\n# 前言\n\n设计一个缓存系统，不得不要考虑的问题就是：缓存穿透、缓存击穿与失效时的雪崩效应。\n# 缓存穿透\n\n缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。在流量大时，可能DB就挂掉了，要是有人利用不存在的key频繁攻击我们的应用，这就是漏洞。\n<!--more-->\n## 解决方案\n\n有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被 这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。另外也有一个更为简单粗暴的方法（我们采用的就是这种），如果一个查询返回的数据为空（不管是数 据不存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。\n\n# 缓存雪崩\n\n缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过重雪崩。\n\n## 解决方案\n\n缓存失效时的雪崩效应对底层系统的冲击非常可怕。大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线 程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上。这里分享一个简单方案就时讲缓存失效时间分散开，比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。\n\n# 缓存击穿\n\n对于一些设置了过期时间的key，如果这些key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题，这个和缓存雪崩的区别在于这里针对某一key缓存，前者则是很多key。\n\n缓存在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。\n\n## 解决方案\n\n### 1.使用互斥锁(mutex key)\n\n业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。\n\nSETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果。在redis2.6.1之前版本未实现setnx的过期时间，所以这里给出两种版本代码参考：\n```java\n//2.6.1前单机版本锁  \nString get(String key) {    \n   String value = redis.get(key);    \n   if (value  == null) {    \n    if (redis.setnx(key_mutex, \"1\")) {    \n        // 3 min timeout to avoid mutex holder crash    \n        redis.expire(key_mutex, 3 * 60)    \n        value = db.get(key);    \n        redis.set(key, value);    \n        redis.delete(key_mutex);    \n    } else {    \n        //其他线程休息50毫秒后重试    \n        Thread.sleep(50);    \n        get(key);    \n    }    \n  }    \n}  \n```\n\n最新版本代码：\n```java\npublic String get(key) {  \n      String value = redis.get(key);  \n      if (value == null) { //代表缓存值过期  \n          //设置3min的超时，防止del操作失败的时候，下次缓存过期一直不能load db  \n          if (redis.setnx(key_mutex, 1, 3 * 60) == 1) {  //代表设置成功  \n               value = db.get(key);  \n                      redis.set(key, value, expire_secs);  \n                      redis.del(key_mutex);  \n              } else {  //这个时候代表同时候的其他线程已经load db并回设到缓存了，这时候重试获取缓存值即可  \n                      sleep(50);  \n                      get(key);  //重试  \n              }  \n          } else {  \n              return value;        \n          }  \n }  \n```\n\nmemcache代码：\n```java\nif (memcache.get(key) == null) {    \n    // 3 min timeout to avoid mutex holder crash    \n    if (memcache.add(key_mutex, 3 * 60 * 1000) == true) {    \n        value = db.get(key);    \n        memcache.set(key, value);    \n        memcache.delete(key_mutex);    \n    } else {    \n        sleep(50);    \n        retry();    \n    }    \n}   \n```\n\n### 2. \"提前\"使用互斥锁(mutex key)：\n\n在value内部设置1个超时值(timeout1), timeout1比实际的memcache timeout(timeout2)小。当从cache读取到timeout1发现它已经过期时候，马上延长timeout1并重新设置到cache。然后再从数据库加载数据并设置到cache中。伪代码如下：\n```java\nv = memcache.get(key);    \nif (v == null) {    \n    if (memcache.add(key_mutex, 3 * 60 * 1000) == true) {    \n        value = db.get(key);    \n        memcache.set(key, value);    \n        memcache.delete(key_mutex);    \n    } else {    \n        sleep(50);    \n        retry();    \n    }    \n} else {    \n    if (v.timeout <= now()) {    \n        if (memcache.add(key_mutex, 3 * 60 * 1000) == true) {    \n            // extend the timeout for other threads    \n            v.timeout += 3 * 60 * 1000;    \n            memcache.set(key, v, KEY_TIMEOUT * 2);    \n    \n            // load the latest value from db    \n            v = db.get(key);    \n            v.timeout = KEY_TIMEOUT;    \n            memcache.set(key, value, KEY_TIMEOUT * 2);    \n            memcache.delete(key_mutex);    \n        } else {    \n            sleep(50);    \n            retry();    \n        }    \n    }    \n} \n```\n\n### 3. \"永远不过期\"：  \n\n这里的“永远不过期”包含两层意思：\n\n- (1) 从redis上看，确实没有设置过期时间，这就保证了，不会出现热点key过期问题，也就是“物理”不过期。\n- (2) 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是“逻辑”过期\n\n从实战看，这种方法对于性能非常友好，唯一不足的就是构建缓存时候，其余线程(非构建缓存的线程)可能访问的是老数据，但是对于一般的互联网功能来说这个还是可以忍受。\n\n```java\nString get(final String key) {    \n        V v = redis.get(key);    \n        String value = v.getValue();    \n        long timeout = v.getTimeout();    \n        if (v.timeout <= System.currentTimeMillis()) {    \n            // 异步更新后台异常执行    \n            threadPool.execute(new Runnable() {    \n                public void run() {    \n                    String keyMutex = \"mutex:\" + key;    \n                    if (redis.setnx(keyMutex, \"1\")) {    \n                        // 3 min timeout to avoid mutex holder crash    \n                        redis.expire(keyMutex, 3 * 60);    \n                        String dbValue = db.get(key);    \n                        redis.set(key, dbValue);    \n                        redis.delete(keyMutex);    \n                    }    \n                }    \n            });    \n        }    \n        return value;    \n}  \n```\n\n### 4. 资源保护：\n采用netflix的hystrix，可以做资源的隔离保护主线程池，如果把这个应用到缓存的构建也未尝不可。\n\n四种解决方案：没有最佳只有最合适\n\n#### 一、简单分布式互斥锁（mutex key）\n 优点：1. 思路简单，2. 保证一致性\n\n 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险\n \n#### 二、“提前”使用互斥锁\n 优点：1. 保证一致性\n\n 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险\n \n#### 三、不过期(本文)\n 优点：1. 异步构建缓存，不会阻塞线程池\n\n 缺点：1. 不保证一致性。2. 代码复杂度增大(每个value都要维护一个timekey)。3. 占用一定的内存空间(每个value都要维护一个timekey)。\n \n#### 四、资源隔离组件hystrix(本文)\n 优点：1. hystrix技术成熟，有效保证后端。2. hystrix监控强大。\n\n 缺点：1. 部分访问存在降级策略。\n \n# 总结\n\n针对业务系统，永远都是具体情况具体分析，没有最好，只有最合适。\n\n最后，对于缓存系统常见的缓存满了和数据丢失问题，需要根据具体业务分析，通常我们采用LRU策略处理溢出，Redis的RDB和AOF持久化策略来保证一定情况下的数据安全。\n\n","source":"_posts/cache/huan-cun-chuan-tou-huan-cun-ji-chuan-huan-cun-xue-beng-jie-jue-fang-an-fen-xi.md","raw":"---\ntitle: 缓存穿透，缓存击穿，缓存雪崩解决方案分析\ndate: 2017-04-18 11:27:23\ntags: [缓存,Redis]\ncategories: \n  - 缓存技术\n---\n\n# 前言\n\n设计一个缓存系统，不得不要考虑的问题就是：缓存穿透、缓存击穿与失效时的雪崩效应。\n# 缓存穿透\n\n缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。在流量大时，可能DB就挂掉了，要是有人利用不存在的key频繁攻击我们的应用，这就是漏洞。\n<!--more-->\n## 解决方案\n\n有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被 这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。另外也有一个更为简单粗暴的方法（我们采用的就是这种），如果一个查询返回的数据为空（不管是数 据不存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。\n\n# 缓存雪崩\n\n缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过重雪崩。\n\n## 解决方案\n\n缓存失效时的雪崩效应对底层系统的冲击非常可怕。大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线 程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上。这里分享一个简单方案就时讲缓存失效时间分散开，比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。\n\n# 缓存击穿\n\n对于一些设置了过期时间的key，如果这些key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题，这个和缓存雪崩的区别在于这里针对某一key缓存，前者则是很多key。\n\n缓存在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。\n\n## 解决方案\n\n### 1.使用互斥锁(mutex key)\n\n业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。\n\nSETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果。在redis2.6.1之前版本未实现setnx的过期时间，所以这里给出两种版本代码参考：\n```java\n//2.6.1前单机版本锁  \nString get(String key) {    \n   String value = redis.get(key);    \n   if (value  == null) {    \n    if (redis.setnx(key_mutex, \"1\")) {    \n        // 3 min timeout to avoid mutex holder crash    \n        redis.expire(key_mutex, 3 * 60)    \n        value = db.get(key);    \n        redis.set(key, value);    \n        redis.delete(key_mutex);    \n    } else {    \n        //其他线程休息50毫秒后重试    \n        Thread.sleep(50);    \n        get(key);    \n    }    \n  }    \n}  \n```\n\n最新版本代码：\n```java\npublic String get(key) {  \n      String value = redis.get(key);  \n      if (value == null) { //代表缓存值过期  \n          //设置3min的超时，防止del操作失败的时候，下次缓存过期一直不能load db  \n          if (redis.setnx(key_mutex, 1, 3 * 60) == 1) {  //代表设置成功  \n               value = db.get(key);  \n                      redis.set(key, value, expire_secs);  \n                      redis.del(key_mutex);  \n              } else {  //这个时候代表同时候的其他线程已经load db并回设到缓存了，这时候重试获取缓存值即可  \n                      sleep(50);  \n                      get(key);  //重试  \n              }  \n          } else {  \n              return value;        \n          }  \n }  \n```\n\nmemcache代码：\n```java\nif (memcache.get(key) == null) {    \n    // 3 min timeout to avoid mutex holder crash    \n    if (memcache.add(key_mutex, 3 * 60 * 1000) == true) {    \n        value = db.get(key);    \n        memcache.set(key, value);    \n        memcache.delete(key_mutex);    \n    } else {    \n        sleep(50);    \n        retry();    \n    }    \n}   \n```\n\n### 2. \"提前\"使用互斥锁(mutex key)：\n\n在value内部设置1个超时值(timeout1), timeout1比实际的memcache timeout(timeout2)小。当从cache读取到timeout1发现它已经过期时候，马上延长timeout1并重新设置到cache。然后再从数据库加载数据并设置到cache中。伪代码如下：\n```java\nv = memcache.get(key);    \nif (v == null) {    \n    if (memcache.add(key_mutex, 3 * 60 * 1000) == true) {    \n        value = db.get(key);    \n        memcache.set(key, value);    \n        memcache.delete(key_mutex);    \n    } else {    \n        sleep(50);    \n        retry();    \n    }    \n} else {    \n    if (v.timeout <= now()) {    \n        if (memcache.add(key_mutex, 3 * 60 * 1000) == true) {    \n            // extend the timeout for other threads    \n            v.timeout += 3 * 60 * 1000;    \n            memcache.set(key, v, KEY_TIMEOUT * 2);    \n    \n            // load the latest value from db    \n            v = db.get(key);    \n            v.timeout = KEY_TIMEOUT;    \n            memcache.set(key, value, KEY_TIMEOUT * 2);    \n            memcache.delete(key_mutex);    \n        } else {    \n            sleep(50);    \n            retry();    \n        }    \n    }    \n} \n```\n\n### 3. \"永远不过期\"：  \n\n这里的“永远不过期”包含两层意思：\n\n- (1) 从redis上看，确实没有设置过期时间，这就保证了，不会出现热点key过期问题，也就是“物理”不过期。\n- (2) 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是“逻辑”过期\n\n从实战看，这种方法对于性能非常友好，唯一不足的就是构建缓存时候，其余线程(非构建缓存的线程)可能访问的是老数据，但是对于一般的互联网功能来说这个还是可以忍受。\n\n```java\nString get(final String key) {    \n        V v = redis.get(key);    \n        String value = v.getValue();    \n        long timeout = v.getTimeout();    \n        if (v.timeout <= System.currentTimeMillis()) {    \n            // 异步更新后台异常执行    \n            threadPool.execute(new Runnable() {    \n                public void run() {    \n                    String keyMutex = \"mutex:\" + key;    \n                    if (redis.setnx(keyMutex, \"1\")) {    \n                        // 3 min timeout to avoid mutex holder crash    \n                        redis.expire(keyMutex, 3 * 60);    \n                        String dbValue = db.get(key);    \n                        redis.set(key, dbValue);    \n                        redis.delete(keyMutex);    \n                    }    \n                }    \n            });    \n        }    \n        return value;    \n}  \n```\n\n### 4. 资源保护：\n采用netflix的hystrix，可以做资源的隔离保护主线程池，如果把这个应用到缓存的构建也未尝不可。\n\n四种解决方案：没有最佳只有最合适\n\n#### 一、简单分布式互斥锁（mutex key）\n 优点：1. 思路简单，2. 保证一致性\n\n 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险\n \n#### 二、“提前”使用互斥锁\n 优点：1. 保证一致性\n\n 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险\n \n#### 三、不过期(本文)\n 优点：1. 异步构建缓存，不会阻塞线程池\n\n 缺点：1. 不保证一致性。2. 代码复杂度增大(每个value都要维护一个timekey)。3. 占用一定的内存空间(每个value都要维护一个timekey)。\n \n#### 四、资源隔离组件hystrix(本文)\n 优点：1. hystrix技术成熟，有效保证后端。2. hystrix监控强大。\n\n 缺点：1. 部分访问存在降级策略。\n \n# 总结\n\n针对业务系统，永远都是具体情况具体分析，没有最好，只有最合适。\n\n最后，对于缓存系统常见的缓存满了和数据丢失问题，需要根据具体业务分析，通常我们采用LRU策略处理溢出，Redis的RDB和AOF持久化策略来保证一定情况下的数据安全。\n\n","slug":"cache/huan-cun-chuan-tou-huan-cun-ji-chuan-huan-cun-xue-beng-jie-jue-fang-an-fen-xi","published":1,"updated":"2020-03-11T10:48:16.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5aj002hw8mxy7jj15pj","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>设计一个缓存系统，不得不要考虑的问题就是：缓存穿透、缓存击穿与失效时的雪崩效应。</p>\n<h1 id=\"缓存穿透\"><a href=\"#缓存穿透\" class=\"headerlink\" title=\"缓存穿透\"></a>缓存穿透</h1><p>缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。在流量大时，可能DB就挂掉了，要是有人利用不存在的key频繁攻击我们的应用，这就是漏洞。<br><a id=\"more\"></a></p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被 这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。另外也有一个更为简单粗暴的方法（我们采用的就是这种），如果一个查询返回的数据为空（不管是数 据不存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。</p>\n<h1 id=\"缓存雪崩\"><a href=\"#缓存雪崩\" class=\"headerlink\" title=\"缓存雪崩\"></a>缓存雪崩</h1><p>缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过重雪崩。</p>\n<h2 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>缓存失效时的雪崩效应对底层系统的冲击非常可怕。大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线 程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上。这里分享一个简单方案就时讲缓存失效时间分散开，比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。</p>\n<h1 id=\"缓存击穿\"><a href=\"#缓存击穿\" class=\"headerlink\" title=\"缓存击穿\"></a>缓存击穿</h1><p>对于一些设置了过期时间的key，如果这些key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题，这个和缓存雪崩的区别在于这里针对某一key缓存，前者则是很多key。</p>\n<p>缓存在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p>\n<h2 id=\"解决方案-2\"><a href=\"#解决方案-2\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"1-使用互斥锁-mutex-key\"><a href=\"#1-使用互斥锁-mutex-key\" class=\"headerlink\" title=\"1.使用互斥锁(mutex key)\"></a>1.使用互斥锁(mutex key)</h3><p>业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。</p>\n<p>SETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果。在redis2.6.1之前版本未实现setnx的过期时间，所以这里给出两种版本代码参考：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//2.6.1前单机版本锁  </span></span><br><span class=\"line\"><span class=\"function\">String <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;    </span><br><span class=\"line\">   String value = redis.get(key);    </span><br><span class=\"line\">   <span class=\"keyword\">if</span> (value  == <span class=\"keyword\">null</span>) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (redis.setnx(key_mutex, <span class=\"string\">\"1\"</span>)) &#123;    </span><br><span class=\"line\">        <span class=\"comment\">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class=\"line\">        redis.expire(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span>)    </span><br><span class=\"line\">        value = db.get(key);    </span><br><span class=\"line\">        redis.set(key, value);    </span><br><span class=\"line\">        redis.delete(key_mutex);    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">        <span class=\"comment\">//其他线程休息50毫秒后重试    </span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">        get(key);    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">  &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最新版本代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(key)</span> </span>&#123;  </span><br><span class=\"line\">      String value = redis.get(key);  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (value == <span class=\"keyword\">null</span>) &#123; <span class=\"comment\">//代表缓存值过期  </span></span><br><span class=\"line\">          <span class=\"comment\">//设置3min的超时，防止del操作失败的时候，下次缓存过期一直不能load db  </span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (redis.setnx(key_mutex, <span class=\"number\">1</span>, <span class=\"number\">3</span> * <span class=\"number\">60</span>) == <span class=\"number\">1</span>) &#123;  <span class=\"comment\">//代表设置成功  </span></span><br><span class=\"line\">               value = db.get(key);  </span><br><span class=\"line\">                      redis.set(key, value, expire_secs);  </span><br><span class=\"line\">                      redis.del(key_mutex);  </span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">//这个时候代表同时候的其他线程已经load db并回设到缓存了，这时候重试获取缓存值即可  </span></span><br><span class=\"line\">                      sleep(<span class=\"number\">50</span>);  </span><br><span class=\"line\">                      get(key);  <span class=\"comment\">//重试  </span></span><br><span class=\"line\">              &#125;  </span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">              <span class=\"keyword\">return</span> value;        </span><br><span class=\"line\">          &#125;  </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>memcache代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (memcache.get(key) == <span class=\"keyword\">null</span>) &#123;    </span><br><span class=\"line\">    <span class=\"comment\">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (memcache.add(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) == <span class=\"keyword\">true</span>) &#123;    </span><br><span class=\"line\">        value = db.get(key);    </span><br><span class=\"line\">        memcache.set(key, value);    </span><br><span class=\"line\">        memcache.delete(key_mutex);    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">        sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">        retry();    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-“提前”使用互斥锁-mutex-key-：\"><a href=\"#2-“提前”使用互斥锁-mutex-key-：\" class=\"headerlink\" title=\"2. “提前”使用互斥锁(mutex key)：\"></a>2. “提前”使用互斥锁(mutex key)：</h3><p>在value内部设置1个超时值(timeout1), timeout1比实际的memcache timeout(timeout2)小。当从cache读取到timeout1发现它已经过期时候，马上延长timeout1并重新设置到cache。然后再从数据库加载数据并设置到cache中。伪代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v = memcache.get(key);    </span><br><span class=\"line\"><span class=\"keyword\">if</span> (v == <span class=\"keyword\">null</span>) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (memcache.add(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) == <span class=\"keyword\">true</span>) &#123;    </span><br><span class=\"line\">        value = db.get(key);    </span><br><span class=\"line\">        memcache.set(key, value);    </span><br><span class=\"line\">        memcache.delete(key_mutex);    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">        sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">        retry();    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v.timeout &lt;= now()) &#123;    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (memcache.add(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) == <span class=\"keyword\">true</span>) &#123;    </span><br><span class=\"line\">            <span class=\"comment\">// extend the timeout for other threads    </span></span><br><span class=\"line\">            v.timeout += <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;    </span><br><span class=\"line\">            memcache.set(key, v, KEY_TIMEOUT * <span class=\"number\">2</span>);    </span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"comment\">// load the latest value from db    </span></span><br><span class=\"line\">            v = db.get(key);    </span><br><span class=\"line\">            v.timeout = KEY_TIMEOUT;    </span><br><span class=\"line\">            memcache.set(key, value, KEY_TIMEOUT * <span class=\"number\">2</span>);    </span><br><span class=\"line\">            memcache.delete(key_mutex);    </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">            sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">            retry();    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-“永远不过期”：\"><a href=\"#3-“永远不过期”：\" class=\"headerlink\" title=\"3. “永远不过期”：\"></a>3. “永远不过期”：</h3><p>这里的“永远不过期”包含两层意思：</p>\n<ul>\n<li>(1) 从redis上看，确实没有设置过期时间，这就保证了，不会出现热点key过期问题，也就是“物理”不过期。</li>\n<li>(2) 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是“逻辑”过期</li>\n</ul>\n<p>从实战看，这种方法对于性能非常友好，唯一不足的就是构建缓存时候，其余线程(非构建缓存的线程)可能访问的是老数据，但是对于一般的互联网功能来说这个还是可以忍受。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">String <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> </span>&#123;    </span><br><span class=\"line\">        V v = redis.get(key);    </span><br><span class=\"line\">        String value = v.getValue();    </span><br><span class=\"line\">        <span class=\"keyword\">long</span> timeout = v.getTimeout();    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v.timeout &lt;= System.currentTimeMillis()) &#123;    </span><br><span class=\"line\">            <span class=\"comment\">// 异步更新后台异常执行    </span></span><br><span class=\"line\">            threadPool.execute(<span class=\"keyword\">new</span> Runnable() &#123;    </span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;    </span><br><span class=\"line\">                    String keyMutex = <span class=\"string\">\"mutex:\"</span> + key;    </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (redis.setnx(keyMutex, <span class=\"string\">\"1\"</span>)) &#123;    </span><br><span class=\"line\">                        <span class=\"comment\">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class=\"line\">                        redis.expire(keyMutex, <span class=\"number\">3</span> * <span class=\"number\">60</span>);    </span><br><span class=\"line\">                        String dbValue = db.get(key);    </span><br><span class=\"line\">                        redis.set(key, dbValue);    </span><br><span class=\"line\">                        redis.delete(keyMutex);    </span><br><span class=\"line\">                    &#125;    </span><br><span class=\"line\">                &#125;    </span><br><span class=\"line\">            &#125;);    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-资源保护：\"><a href=\"#4-资源保护：\" class=\"headerlink\" title=\"4. 资源保护：\"></a>4. 资源保护：</h3><p>采用netflix的hystrix，可以做资源的隔离保护主线程池，如果把这个应用到缓存的构建也未尝不可。</p>\n<p>四种解决方案：没有最佳只有最合适</p>\n<h4 id=\"一、简单分布式互斥锁（mutex-key）\"><a href=\"#一、简单分布式互斥锁（mutex-key）\" class=\"headerlink\" title=\"一、简单分布式互斥锁（mutex key）\"></a>一、简单分布式互斥锁（mutex key）</h4><p> 优点：1. 思路简单，2. 保证一致性</p>\n<p> 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险</p>\n<h4 id=\"二、“提前”使用互斥锁\"><a href=\"#二、“提前”使用互斥锁\" class=\"headerlink\" title=\"二、“提前”使用互斥锁\"></a>二、“提前”使用互斥锁</h4><p> 优点：1. 保证一致性</p>\n<p> 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险</p>\n<h4 id=\"三、不过期-本文\"><a href=\"#三、不过期-本文\" class=\"headerlink\" title=\"三、不过期(本文)\"></a>三、不过期(本文)</h4><p> 优点：1. 异步构建缓存，不会阻塞线程池</p>\n<p> 缺点：1. 不保证一致性。2. 代码复杂度增大(每个value都要维护一个timekey)。3. 占用一定的内存空间(每个value都要维护一个timekey)。</p>\n<h4 id=\"四、资源隔离组件hystrix-本文\"><a href=\"#四、资源隔离组件hystrix-本文\" class=\"headerlink\" title=\"四、资源隔离组件hystrix(本文)\"></a>四、资源隔离组件hystrix(本文)</h4><p> 优点：1. hystrix技术成熟，有效保证后端。2. hystrix监控强大。</p>\n<p> 缺点：1. 部分访问存在降级策略。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>针对业务系统，永远都是具体情况具体分析，没有最好，只有最合适。</p>\n<p>最后，对于缓存系统常见的缓存满了和数据丢失问题，需要根据具体业务分析，通常我们采用LRU策略处理溢出，Redis的RDB和AOF持久化策略来保证一定情况下的数据安全。</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>设计一个缓存系统，不得不要考虑的问题就是：缓存穿透、缓存击穿与失效时的雪崩效应。</p>\n<h1 id=\"缓存穿透\"><a href=\"#缓存穿透\" class=\"headerlink\" title=\"缓存穿透\"></a>缓存穿透</h1><p>缓存穿透是指查询一个一定不存在的数据，由于缓存是不命中时被动写的，并且出于容错考虑，如果从存储层查不到数据则不写入缓存，这将导致这个不存在的数据每次请求都要到存储层去查询，失去了缓存的意义。在流量大时，可能DB就挂掉了，要是有人利用不存在的key频繁攻击我们的应用，这就是漏洞。<br>","more":"</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>有很多种方法可以有效地解决缓存穿透问题，最常见的则是采用布隆过滤器，将所有可能存在的数据哈希到一个足够大的bitmap中，一个一定不存在的数据会被 这个bitmap拦截掉，从而避免了对底层存储系统的查询压力。另外也有一个更为简单粗暴的方法（我们采用的就是这种），如果一个查询返回的数据为空（不管是数 据不存在，还是系统故障），我们仍然把这个空结果进行缓存，但它的过期时间会很短，最长不超过五分钟。</p>\n<h1 id=\"缓存雪崩\"><a href=\"#缓存雪崩\" class=\"headerlink\" title=\"缓存雪崩\"></a>缓存雪崩</h1><p>缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到DB，DB瞬时压力过重雪崩。</p>\n<h2 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>缓存失效时的雪崩效应对底层系统的冲击非常可怕。大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线 程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上。这里分享一个简单方案就时讲缓存失效时间分散开，比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。</p>\n<h1 id=\"缓存击穿\"><a href=\"#缓存击穿\" class=\"headerlink\" title=\"缓存击穿\"></a>缓存击穿</h1><p>对于一些设置了过期时间的key，如果这些key可能会在某些时间点被超高并发地访问，是一种非常“热点”的数据。这个时候，需要考虑一个问题：缓存被“击穿”的问题，这个和缓存雪崩的区别在于这里针对某一key缓存，前者则是很多key。</p>\n<p>缓存在某个时间点过期的时候，恰好在这个时间点对这个Key有大量的并发请求过来，这些请求发现缓存过期一般都会从后端DB加载数据并回设到缓存，这个时候大并发的请求可能会瞬间把后端DB压垮。</p>\n<h2 id=\"解决方案-2\"><a href=\"#解决方案-2\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"1-使用互斥锁-mutex-key\"><a href=\"#1-使用互斥锁-mutex-key\" class=\"headerlink\" title=\"1.使用互斥锁(mutex key)\"></a>1.使用互斥锁(mutex key)</h3><p>业界比较常用的做法，是使用mutex。简单地来说，就是在缓存失效的时候（判断拿出来的值为空），不是立即去load db，而是先使用缓存工具的某些带成功操作返回值的操作（比如Redis的SETNX或者Memcache的ADD）去set一个mutex key，当操作返回成功时，再进行load db的操作并回设缓存；否则，就重试整个get缓存的方法。</p>\n<p>SETNX，是「SET if Not eXists」的缩写，也就是只有不存在的时候才设置，可以利用它来实现锁的效果。在redis2.6.1之前版本未实现setnx的过期时间，所以这里给出两种版本代码参考：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//2.6.1前单机版本锁  </span></span><br><span class=\"line\"><span class=\"function\">String <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;    </span><br><span class=\"line\">   String value = redis.get(key);    </span><br><span class=\"line\">   <span class=\"keyword\">if</span> (value  == <span class=\"keyword\">null</span>) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (redis.setnx(key_mutex, <span class=\"string\">\"1\"</span>)) &#123;    </span><br><span class=\"line\">        <span class=\"comment\">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class=\"line\">        redis.expire(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span>)    </span><br><span class=\"line\">        value = db.get(key);    </span><br><span class=\"line\">        redis.set(key, value);    </span><br><span class=\"line\">        redis.delete(key_mutex);    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">        <span class=\"comment\">//其他线程休息50毫秒后重试    </span></span><br><span class=\"line\">        Thread.sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">        get(key);    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">  &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最新版本代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">get</span><span class=\"params\">(key)</span> </span>&#123;  </span><br><span class=\"line\">      String value = redis.get(key);  </span><br><span class=\"line\">      <span class=\"keyword\">if</span> (value == <span class=\"keyword\">null</span>) &#123; <span class=\"comment\">//代表缓存值过期  </span></span><br><span class=\"line\">          <span class=\"comment\">//设置3min的超时，防止del操作失败的时候，下次缓存过期一直不能load db  </span></span><br><span class=\"line\">          <span class=\"keyword\">if</span> (redis.setnx(key_mutex, <span class=\"number\">1</span>, <span class=\"number\">3</span> * <span class=\"number\">60</span>) == <span class=\"number\">1</span>) &#123;  <span class=\"comment\">//代表设置成功  </span></span><br><span class=\"line\">               value = db.get(key);  </span><br><span class=\"line\">                      redis.set(key, value, expire_secs);  </span><br><span class=\"line\">                      redis.del(key_mutex);  </span><br><span class=\"line\">              &#125; <span class=\"keyword\">else</span> &#123;  <span class=\"comment\">//这个时候代表同时候的其他线程已经load db并回设到缓存了，这时候重试获取缓存值即可  </span></span><br><span class=\"line\">                      sleep(<span class=\"number\">50</span>);  </span><br><span class=\"line\">                      get(key);  <span class=\"comment\">//重试  </span></span><br><span class=\"line\">              &#125;  </span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;  </span><br><span class=\"line\">              <span class=\"keyword\">return</span> value;        </span><br><span class=\"line\">          &#125;  </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>memcache代码：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (memcache.get(key) == <span class=\"keyword\">null</span>) &#123;    </span><br><span class=\"line\">    <span class=\"comment\">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (memcache.add(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) == <span class=\"keyword\">true</span>) &#123;    </span><br><span class=\"line\">        value = db.get(key);    </span><br><span class=\"line\">        memcache.set(key, value);    </span><br><span class=\"line\">        memcache.delete(key_mutex);    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">        sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">        retry();    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-“提前”使用互斥锁-mutex-key-：\"><a href=\"#2-“提前”使用互斥锁-mutex-key-：\" class=\"headerlink\" title=\"2. “提前”使用互斥锁(mutex key)：\"></a>2. “提前”使用互斥锁(mutex key)：</h3><p>在value内部设置1个超时值(timeout1), timeout1比实际的memcache timeout(timeout2)小。当从cache读取到timeout1发现它已经过期时候，马上延长timeout1并重新设置到cache。然后再从数据库加载数据并设置到cache中。伪代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v = memcache.get(key);    </span><br><span class=\"line\"><span class=\"keyword\">if</span> (v == <span class=\"keyword\">null</span>) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (memcache.add(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) == <span class=\"keyword\">true</span>) &#123;    </span><br><span class=\"line\">        value = db.get(key);    </span><br><span class=\"line\">        memcache.set(key, value);    </span><br><span class=\"line\">        memcache.delete(key_mutex);    </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">        sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">        retry();    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (v.timeout &lt;= now()) &#123;    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (memcache.add(key_mutex, <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>) == <span class=\"keyword\">true</span>) &#123;    </span><br><span class=\"line\">            <span class=\"comment\">// extend the timeout for other threads    </span></span><br><span class=\"line\">            v.timeout += <span class=\"number\">3</span> * <span class=\"number\">60</span> * <span class=\"number\">1000</span>;    </span><br><span class=\"line\">            memcache.set(key, v, KEY_TIMEOUT * <span class=\"number\">2</span>);    </span><br><span class=\"line\">    </span><br><span class=\"line\">            <span class=\"comment\">// load the latest value from db    </span></span><br><span class=\"line\">            v = db.get(key);    </span><br><span class=\"line\">            v.timeout = KEY_TIMEOUT;    </span><br><span class=\"line\">            memcache.set(key, value, KEY_TIMEOUT * <span class=\"number\">2</span>);    </span><br><span class=\"line\">            memcache.delete(key_mutex);    </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;    </span><br><span class=\"line\">            sleep(<span class=\"number\">50</span>);    </span><br><span class=\"line\">            retry();    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">    &#125;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"3-“永远不过期”：\"><a href=\"#3-“永远不过期”：\" class=\"headerlink\" title=\"3. “永远不过期”：\"></a>3. “永远不过期”：</h3><p>这里的“永远不过期”包含两层意思：</p>\n<ul>\n<li>(1) 从redis上看，确实没有设置过期时间，这就保证了，不会出现热点key过期问题，也就是“物理”不过期。</li>\n<li>(2) 从功能上看，如果不过期，那不就成静态的了吗？所以我们把过期时间存在key对应的value里，如果发现要过期了，通过一个后台的异步线程进行缓存的构建，也就是“逻辑”过期</li>\n</ul>\n<p>从实战看，这种方法对于性能非常友好，唯一不足的就是构建缓存时候，其余线程(非构建缓存的线程)可能访问的是老数据，但是对于一般的互联网功能来说这个还是可以忍受。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">String <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">final</span> String key)</span> </span>&#123;    </span><br><span class=\"line\">        V v = redis.get(key);    </span><br><span class=\"line\">        String value = v.getValue();    </span><br><span class=\"line\">        <span class=\"keyword\">long</span> timeout = v.getTimeout();    </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v.timeout &lt;= System.currentTimeMillis()) &#123;    </span><br><span class=\"line\">            <span class=\"comment\">// 异步更新后台异常执行    </span></span><br><span class=\"line\">            threadPool.execute(<span class=\"keyword\">new</span> Runnable() &#123;    </span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;    </span><br><span class=\"line\">                    String keyMutex = <span class=\"string\">\"mutex:\"</span> + key;    </span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (redis.setnx(keyMutex, <span class=\"string\">\"1\"</span>)) &#123;    </span><br><span class=\"line\">                        <span class=\"comment\">// 3 min timeout to avoid mutex holder crash    </span></span><br><span class=\"line\">                        redis.expire(keyMutex, <span class=\"number\">3</span> * <span class=\"number\">60</span>);    </span><br><span class=\"line\">                        String dbValue = db.get(key);    </span><br><span class=\"line\">                        redis.set(key, dbValue);    </span><br><span class=\"line\">                        redis.delete(keyMutex);    </span><br><span class=\"line\">                    &#125;    </span><br><span class=\"line\">                &#125;    </span><br><span class=\"line\">            &#125;);    </span><br><span class=\"line\">        &#125;    </span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-资源保护：\"><a href=\"#4-资源保护：\" class=\"headerlink\" title=\"4. 资源保护：\"></a>4. 资源保护：</h3><p>采用netflix的hystrix，可以做资源的隔离保护主线程池，如果把这个应用到缓存的构建也未尝不可。</p>\n<p>四种解决方案：没有最佳只有最合适</p>\n<h4 id=\"一、简单分布式互斥锁（mutex-key）\"><a href=\"#一、简单分布式互斥锁（mutex-key）\" class=\"headerlink\" title=\"一、简单分布式互斥锁（mutex key）\"></a>一、简单分布式互斥锁（mutex key）</h4><p> 优点：1. 思路简单，2. 保证一致性</p>\n<p> 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险</p>\n<h4 id=\"二、“提前”使用互斥锁\"><a href=\"#二、“提前”使用互斥锁\" class=\"headerlink\" title=\"二、“提前”使用互斥锁\"></a>二、“提前”使用互斥锁</h4><p> 优点：1. 保证一致性</p>\n<p> 缺点：1. 代码复杂度增大，2. 存在死锁的风险，3. 存在线程池阻塞的风险</p>\n<h4 id=\"三、不过期-本文\"><a href=\"#三、不过期-本文\" class=\"headerlink\" title=\"三、不过期(本文)\"></a>三、不过期(本文)</h4><p> 优点：1. 异步构建缓存，不会阻塞线程池</p>\n<p> 缺点：1. 不保证一致性。2. 代码复杂度增大(每个value都要维护一个timekey)。3. 占用一定的内存空间(每个value都要维护一个timekey)。</p>\n<h4 id=\"四、资源隔离组件hystrix-本文\"><a href=\"#四、资源隔离组件hystrix-本文\" class=\"headerlink\" title=\"四、资源隔离组件hystrix(本文)\"></a>四、资源隔离组件hystrix(本文)</h4><p> 优点：1. hystrix技术成熟，有效保证后端。2. hystrix监控强大。</p>\n<p> 缺点：1. 部分访问存在降级策略。</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>针对业务系统，永远都是具体情况具体分析，没有最好，只有最合适。</p>\n<p>最后，对于缓存系统常见的缓存满了和数据丢失问题，需要根据具体业务分析，通常我们采用LRU策略处理溢出，Redis的RDB和AOF持久化策略来保证一定情况下的数据安全。</p>"},{"title":"SpringBoot启动Tomcat失败：Unable to start embedded Tomcat","date":"2017-12-12T11:40:00.000Z","_content":"\n# 异常描述\n\n>之前项目是dubbo的，分为两个服务，service数据层和web请求控制，使用dubbo互相调用的，现在要把dubbo去掉，使用SpringCloud的eureka了，要把两个合并成一个项目，这里并不是要把所有代码复制过去，而是把service使用maven引用到web项目里面，然后修改对应的配置和包路劲，启动的时候，竟然报错了，编译是没有任何问题的。\n\n<!--more-->\n\n```\n10:02:26.349 logback [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23\n10:02:26.463 logback [Tomcat-startStop-1] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start\njava.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]\n        at java.util.concurrent.FutureTask.report(Unknown Source)\n        at java.util.concurrent.FutureTask.get(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)\n        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)\n        at java.util.concurrent.FutureTask.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        ... 6 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [Pipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5117)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 6 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [org.apache.catalina.authenticator.NonLoginAuthenticator[]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardPipeline.startInternal(StandardPipeline.java:182)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 8 common frames omitted\nCaused by: java.lang.NoSuchMethodError: javax.servlet.ServletContext.getVirtualServerName()Ljava/lang/String;\n        at org.apache.catalina.authenticator.AuthenticatorBase.startInternal(AuthenticatorBase.java:1141)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 10 common frames omitted\n10:02:26.464 logback [main] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start\njava.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]\n        at java.util.concurrent.FutureTask.report(Unknown Source)\n        at java.util.concurrent.FutureTask.get(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)\n        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.<init>(TomcatEmbeddedServletContainer.java:84)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\n        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)\n        at java.util.concurrent.FutureTask.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: org.apache.catalina.LifecycleException: A child container failed during start\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)\n        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 6 common frames omitted\n10:02:26.465 logback [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded conta\niner; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat\n10:02:26.485 logback [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer -\n\nError starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.\n10:02:26.492 logback [main] ERROR o.s.boot.SpringApplication - Application startup failed\norg.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\n        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)\nCaused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:123)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.<init>(TomcatEmbeddedServletContainer.java:84)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)\n        ... 16 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardServer[-1]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)\n        ... 21 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Tomcat]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 23 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 25 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: A child container failed during start\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)\n        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 27 common frames omitted\n\n```\n\n# 异常分析\n\n刚开始有点蒙蔽，之前项目一直可以运行，怎么就报错了呢，日了狗了，于是乎各种百度谷歌的，一顿查，基本上两个答案：\n\n1. servlet-api-xxx.jar包冲突\n2. servlet-api-xxx.jar版本问题\n\n各种修改了以后，根本解决不了，看来只能靠自己了，有开始检查pom.xml，目前只能从pom.xml入手了检查了:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <parent>\n    <artifactId>dfs-parent</artifactId>\n    <groupId>com.gwghk.base.platform</groupId>\n    <version>1.0-SNAPSHOT</version>\n    <relativePath>../parent/pom.xml</relativePath>\n  </parent>\n  <modelVersion>4.0.0</modelVersion>\n\n  <artifactId>dfs-api</artifactId>\n  <version>1.0-SNAPSHOT</version>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n      <version>${spring.boot.version}</version>\n    </dependency>\n\n    ......\n\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n    <resources>\n      <resource>\n        <directory>src/main/resources/</directory>\n        <filtering>true</filtering>\n        <includes>\n          <include>**/*.*</include>\n        </includes>\n      </resource>\n    </resources>\n  </build>\n</project>\n```\n\n我家pom是这样的，发现缺少两个属性配置的,没有`<groupId>xxx</groupId>`和`<packaging>jar</packaging>`。  \n其实之前都看到这个问题了，因为这项目是我修改别人的代码，就没在乎这个，以为没关系，然后我就加上试试看，是不是这个问题：\n\n```xml\n<artifactId>dfs-api</artifactId>\n<version>1.0-SNAPSHOT</version>\n<groupId>com.gwghk.base.platform</groupId>\n<packaging>jar</packaging>\n```\n\n再重新编译一次启动试试看，卧槽，竟然成功了，就这个破问题，解决了一天！！！\n\n# 解决办法\n\n问题就出现在pom配置不严谨，该有的还是要有的，不要瞎JB省略。  \n在pom中添加`<groupId>xxx</groupId>`和`<packaging>jar</packaging>`就可以正常启动了：\n\n```xml\n<artifactId>dfs-api</artifactId>\n<version>1.0-SNAPSHOT</version>\n<groupId>com.gwghk.base.platform</groupId>\n<packaging>jar</packaging>\n```","source":"_posts/exception/spring-boot-tomcat-qi-dong-shi-bai.md","raw":"---\ntitle: SpringBoot启动Tomcat失败：Unable to start embedded Tomcat\ndate: 2017-12-12 19:40:00\ntags: [Exception,SpringBoot]\ncategories: \n  - 异常记录\n---\n\n# 异常描述\n\n>之前项目是dubbo的，分为两个服务，service数据层和web请求控制，使用dubbo互相调用的，现在要把dubbo去掉，使用SpringCloud的eureka了，要把两个合并成一个项目，这里并不是要把所有代码复制过去，而是把service使用maven引用到web项目里面，然后修改对应的配置和包路劲，启动的时候，竟然报错了，编译是没有任何问题的。\n\n<!--more-->\n\n```\n10:02:26.349 logback [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23\n10:02:26.463 logback [Tomcat-startStop-1] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start\njava.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]\n        at java.util.concurrent.FutureTask.report(Unknown Source)\n        at java.util.concurrent.FutureTask.get(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)\n        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)\n        at java.util.concurrent.FutureTask.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        ... 6 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [Pipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5117)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 6 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [org.apache.catalina.authenticator.NonLoginAuthenticator[]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardPipeline.startInternal(StandardPipeline.java:182)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 8 common frames omitted\nCaused by: java.lang.NoSuchMethodError: javax.servlet.ServletContext.getVirtualServerName()Ljava/lang/String;\n        at org.apache.catalina.authenticator.AuthenticatorBase.startInternal(AuthenticatorBase.java:1141)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 10 common frames omitted\n10:02:26.464 logback [main] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start\njava.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]\n        at java.util.concurrent.FutureTask.report(Unknown Source)\n        at java.util.concurrent.FutureTask.get(Unknown Source)\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)\n        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.<init>(TomcatEmbeddedServletContainer.java:84)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\n        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)\n        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)\n        at java.util.concurrent.FutureTask.run(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: org.apache.catalina.LifecycleException: A child container failed during start\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)\n        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 6 common frames omitted\n10:02:26.465 logback [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded conta\niner; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat\n10:02:26.485 logback [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer -\n\nError starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.\n10:02:26.492 logback [main] ERROR o.s.boot.SpringApplication - Application startup failed\norg.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137)\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)\n        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)\n        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)\n        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)\nCaused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:123)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.<init>(TomcatEmbeddedServletContainer.java:84)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)\n        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)\n        ... 16 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardServer[-1]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)\n        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)\n        ... 21 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Tomcat]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 23 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat]]\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)\n        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 25 common frames omitted\nCaused by: org.apache.catalina.LifecycleException: A child container failed during start\n        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)\n        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)\n        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n        ... 27 common frames omitted\n\n```\n\n# 异常分析\n\n刚开始有点蒙蔽，之前项目一直可以运行，怎么就报错了呢，日了狗了，于是乎各种百度谷歌的，一顿查，基本上两个答案：\n\n1. servlet-api-xxx.jar包冲突\n2. servlet-api-xxx.jar版本问题\n\n各种修改了以后，根本解决不了，看来只能靠自己了，有开始检查pom.xml，目前只能从pom.xml入手了检查了:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <parent>\n    <artifactId>dfs-parent</artifactId>\n    <groupId>com.gwghk.base.platform</groupId>\n    <version>1.0-SNAPSHOT</version>\n    <relativePath>../parent/pom.xml</relativePath>\n  </parent>\n  <modelVersion>4.0.0</modelVersion>\n\n  <artifactId>dfs-api</artifactId>\n  <version>1.0-SNAPSHOT</version>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n      <version>${spring.boot.version}</version>\n    </dependency>\n\n    ......\n\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n    <resources>\n      <resource>\n        <directory>src/main/resources/</directory>\n        <filtering>true</filtering>\n        <includes>\n          <include>**/*.*</include>\n        </includes>\n      </resource>\n    </resources>\n  </build>\n</project>\n```\n\n我家pom是这样的，发现缺少两个属性配置的,没有`<groupId>xxx</groupId>`和`<packaging>jar</packaging>`。  \n其实之前都看到这个问题了，因为这项目是我修改别人的代码，就没在乎这个，以为没关系，然后我就加上试试看，是不是这个问题：\n\n```xml\n<artifactId>dfs-api</artifactId>\n<version>1.0-SNAPSHOT</version>\n<groupId>com.gwghk.base.platform</groupId>\n<packaging>jar</packaging>\n```\n\n再重新编译一次启动试试看，卧槽，竟然成功了，就这个破问题，解决了一天！！！\n\n# 解决办法\n\n问题就出现在pom配置不严谨，该有的还是要有的，不要瞎JB省略。  \n在pom中添加`<groupId>xxx</groupId>`和`<packaging>jar</packaging>`就可以正常启动了：\n\n```xml\n<artifactId>dfs-api</artifactId>\n<version>1.0-SNAPSHOT</version>\n<groupId>com.gwghk.base.platform</groupId>\n<packaging>jar</packaging>\n```","slug":"exception/spring-boot-tomcat-qi-dong-shi-bai","published":1,"updated":"2020-03-11T10:48:16.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5al002iw8mxxv0hqkqw","content":"<h1 id=\"异常描述\"><a href=\"#异常描述\" class=\"headerlink\" title=\"异常描述\"></a>异常描述</h1><blockquote>\n<p>之前项目是dubbo的，分为两个服务，service数据层和web请求控制，使用dubbo互相调用的，现在要把dubbo去掉，使用SpringCloud的eureka了，要把两个合并成一个项目，这里并不是要把所有代码复制过去，而是把service使用maven引用到web项目里面，然后修改对应的配置和包路劲，启动的时候，竟然报错了，编译是没有任何问题的。</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10:02:26.349 logback [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23</span><br><span class=\"line\">10:02:26.463 logback [Tomcat-startStop-1] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start</span><br><span class=\"line\">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.report(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.get(Unknown Source)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.run(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)</span><br><span class=\"line\">        at java.lang.Thread.run(Unknown Source)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        ... 6 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [Pipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5117)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 6 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [org.apache.catalina.authenticator.NonLoginAuthenticator[]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardPipeline.startInternal(StandardPipeline.java:182)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 8 common frames omitted</span><br><span class=\"line\">Caused by: java.lang.NoSuchMethodError: javax.servlet.ServletContext.getVirtualServerName()Ljava/lang/String;</span><br><span class=\"line\">        at org.apache.catalina.authenticator.AuthenticatorBase.startInternal(AuthenticatorBase.java:1141)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 10 common frames omitted</span><br><span class=\"line\">10:02:26.464 logback [main] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start</span><br><span class=\"line\">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.report(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.get(Unknown Source)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.&lt;init&gt;(TomcatEmbeddedServletContainer.java:84)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)</span><br><span class=\"line\">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class=\"line\">        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at java.lang.reflect.Method.invoke(Unknown Source)</span><br><span class=\"line\">        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)</span><br><span class=\"line\">        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.run(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)</span><br><span class=\"line\">        at java.lang.Thread.run(Unknown Source)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 6 common frames omitted</span><br><span class=\"line\">10:02:26.465 logback [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded conta</span><br><span class=\"line\">iner; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class=\"line\">10:02:26.485 logback [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer -</span><br><span class=\"line\"></span><br><span class=\"line\">Error starting ApplicationContext. To display the auto-configuration report re-run your application with &apos;debug&apos; enabled.</span><br><span class=\"line\">10:02:26.492 logback [main] ERROR o.s.boot.SpringApplication - Application startup failed</span><br><span class=\"line\">org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137)</span><br><span class=\"line\">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class=\"line\">        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at java.lang.reflect.Method.invoke(Unknown Source)</span><br><span class=\"line\">        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)</span><br><span class=\"line\">        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)</span><br><span class=\"line\">Caused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:123)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.&lt;init&gt;(TomcatEmbeddedServletContainer.java:84)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)</span><br><span class=\"line\">        ... 16 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardServer[-1]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)</span><br><span class=\"line\">        ... 21 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Tomcat]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 23 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 25 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 27 common frames omitted</span><br></pre></td></tr></table></figure>\n<h1 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h1><p>刚开始有点蒙蔽，之前项目一直可以运行，怎么就报错了呢，日了狗了，于是乎各种百度谷歌的，一顿查，基本上两个答案：</p>\n<ol>\n<li>servlet-api-xxx.jar包冲突</li>\n<li>servlet-api-xxx.jar版本问题</li>\n</ol>\n<p>各种修改了以后，根本解决不了，看来只能靠自己了，有开始检查pom.xml，目前只能从pom.xml入手了检查了:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.gwghk.base.platform<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>&gt;</span>../parent/pom.xml<span class=\"tag\">&lt;/<span class=\"name\">relativePath</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ......</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources/<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.*<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我家pom是这样的，发现缺少两个属性配置的,没有<code>&lt;groupId&gt;xxx&lt;/groupId&gt;</code>和<code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>。<br>其实之前都看到这个问题了，因为这项目是我修改别人的代码，就没在乎这个，以为没关系，然后我就加上试试看，是不是这个问题：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.gwghk.base.platform<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再重新编译一次启动试试看，卧槽，竟然成功了，就这个破问题，解决了一天！！！</p>\n<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><p>问题就出现在pom配置不严谨，该有的还是要有的，不要瞎JB省略。<br>在pom中添加<code>&lt;groupId&gt;xxx&lt;/groupId&gt;</code>和<code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>就可以正常启动了：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.gwghk.base.platform<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"异常描述\"><a href=\"#异常描述\" class=\"headerlink\" title=\"异常描述\"></a>异常描述</h1><blockquote>\n<p>之前项目是dubbo的，分为两个服务，service数据层和web请求控制，使用dubbo互相调用的，现在要把dubbo去掉，使用SpringCloud的eureka了，要把两个合并成一个项目，这里并不是要把所有代码复制过去，而是把service使用maven引用到web项目里面，然后修改对应的配置和包路劲，启动的时候，竟然报错了，编译是没有任何问题的。</p>\n</blockquote>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10:02:26.349 logback [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.23</span><br><span class=\"line\">10:02:26.463 logback [Tomcat-startStop-1] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start</span><br><span class=\"line\">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.report(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.get(Unknown Source)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.run(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)</span><br><span class=\"line\">        at java.lang.Thread.run(Unknown Source)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        ... 6 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [Pipeline[StandardEngine[Tomcat].StandardHost[localhost].TomcatEmbeddedContext[]]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5117)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 6 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [org.apache.catalina.authenticator.NonLoginAuthenticator[]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardPipeline.startInternal(StandardPipeline.java:182)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 8 common frames omitted</span><br><span class=\"line\">Caused by: java.lang.NoSuchMethodError: javax.servlet.ServletContext.getVirtualServerName()Ljava/lang/String;</span><br><span class=\"line\">        at org.apache.catalina.authenticator.AuthenticatorBase.startInternal(AuthenticatorBase.java:1141)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 10 common frames omitted</span><br><span class=\"line\">10:02:26.464 logback [main] ERROR o.apache.catalina.core.ContainerBase - A child container failed during start</span><br><span class=\"line\">java.util.concurrent.ExecutionException: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.report(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.get(Unknown Source)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:939)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.&lt;init&gt;(TomcatEmbeddedServletContainer.java:84)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)</span><br><span class=\"line\">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class=\"line\">        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at java.lang.reflect.Method.invoke(Unknown Source)</span><br><span class=\"line\">        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)</span><br><span class=\"line\">        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat].StandardHost[localhost]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1419)</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1409)</span><br><span class=\"line\">        at java.util.concurrent.FutureTask.run(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)</span><br><span class=\"line\">        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)</span><br><span class=\"line\">        at java.lang.Thread.run(Unknown Source)</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardHost.startInternal(StandardHost.java:872)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 6 common frames omitted</span><br><span class=\"line\">10:02:26.465 logback [main] WARN  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Unable to start embedded conta</span><br><span class=\"line\">iner; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class=\"line\">10:02:26.485 logback [main] INFO  o.s.b.a.l.AutoConfigurationReportLoggingInitializer -</span><br><span class=\"line\"></span><br><span class=\"line\">Error starting ApplicationContext. To display the auto-configuration report re-run your application with &apos;debug&apos; enabled.</span><br><span class=\"line\">10:02:26.492 logback [main] ERROR o.s.boot.SpringApplication - Application startup failed</span><br><span class=\"line\">org.springframework.context.ApplicationContextException: Unable to start embedded container; nested exception is org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:137)</span><br><span class=\"line\">        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:537)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:303)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118)</span><br><span class=\"line\">        at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107)</span><br><span class=\"line\">        at com.gwghk.base.platform.dfs.Application.main(Application.java:22)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class=\"line\">        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)</span><br><span class=\"line\">        at java.lang.reflect.Method.invoke(Unknown Source)</span><br><span class=\"line\">        at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)</span><br><span class=\"line\">        at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)</span><br><span class=\"line\">        at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)</span><br><span class=\"line\">Caused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException: Unable to start embedded Tomcat</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:123)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.&lt;init&gt;(TomcatEmbeddedServletContainer.java:84)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getTomcatEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:554)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainerFactory.getEmbeddedServletContainer(TomcatEmbeddedServletContainerFactory.java:179)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.createEmbeddedServletContainer(EmbeddedWebApplicationContext.java:164)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.onRefresh(EmbeddedWebApplicationContext.java:134)</span><br><span class=\"line\">        ... 16 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardServer[-1]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.startup.Tomcat.start(Tomcat.java:367)</span><br><span class=\"line\">        at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:99)</span><br><span class=\"line\">        ... 21 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardService[Tomcat]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardServer.startInternal(StandardServer.java:793)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 23 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: Failed to start component [StandardEngine[Tomcat]]</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardService.startInternal(StandardService.java:422)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 25 common frames omitted</span><br><span class=\"line\">Caused by: org.apache.catalina.LifecycleException: A child container failed during start</span><br><span class=\"line\">        at org.apache.catalina.core.ContainerBase.startInternal(ContainerBase.java:948)</span><br><span class=\"line\">        at org.apache.catalina.core.StandardEngine.startInternal(StandardEngine.java:262)</span><br><span class=\"line\">        at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)</span><br><span class=\"line\">        ... 27 common frames omitted</span><br></pre></td></tr></table></figure>\n<h1 id=\"异常分析\"><a href=\"#异常分析\" class=\"headerlink\" title=\"异常分析\"></a>异常分析</h1><p>刚开始有点蒙蔽，之前项目一直可以运行，怎么就报错了呢，日了狗了，于是乎各种百度谷歌的，一顿查，基本上两个答案：</p>\n<ol>\n<li>servlet-api-xxx.jar包冲突</li>\n<li>servlet-api-xxx.jar版本问题</li>\n</ol>\n<p>各种修改了以后，根本解决不了，看来只能靠自己了，有开始检查pom.xml，目前只能从pom.xml入手了检查了:</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xmlns:xsi</span>=<span class=\"string\">\"http://www.w3.org/2001/XMLSchema-instance\"</span></span></span><br><span class=\"line\"><span class=\"tag\">  <span class=\"attr\">xsi:schemaLocation</span>=<span class=\"string\">\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.gwghk.base.platform<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">relativePath</span>&gt;</span>../parent/pom.xml<span class=\"tag\">&lt;/<span class=\"name\">relativePath</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring.boot.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    ......</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.maven.plugins<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>maven-compiler-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">plugin</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">plugins</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">directory</span>&gt;</span>src/main/resources/<span class=\"tag\">&lt;/<span class=\"name\">directory</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">filtering</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">filtering</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">          <span class=\"tag\">&lt;<span class=\"name\">include</span>&gt;</span>**/*.*<span class=\"tag\">&lt;/<span class=\"name\">include</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">includes</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">resource</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">build</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>我家pom是这样的，发现缺少两个属性配置的,没有<code>&lt;groupId&gt;xxx&lt;/groupId&gt;</code>和<code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>。<br>其实之前都看到这个问题了，因为这项目是我修改别人的代码，就没在乎这个，以为没关系，然后我就加上试试看，是不是这个问题：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.gwghk.base.platform<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>再重新编译一次启动试试看，卧槽，竟然成功了，就这个破问题，解决了一天！！！</p>\n<h1 id=\"解决办法\"><a href=\"#解决办法\" class=\"headerlink\" title=\"解决办法\"></a>解决办法</h1><p>问题就出现在pom配置不严谨，该有的还是要有的，不要瞎JB省略。<br>在pom中添加<code>&lt;groupId&gt;xxx&lt;/groupId&gt;</code>和<code>&lt;packaging&gt;jar&lt;/packaging&gt;</code>就可以正常启动了：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>dfs-api<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.gwghk.base.platform<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">packaging</span>&gt;</span>jar<span class=\"tag\">&lt;/<span class=\"name\">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Apollo分布式配置中心部署以及使用","date":"2018-06-12T03:18:00.000Z","_content":"\n# 一、简介\n\n>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。\n\n官方github：https://github.com/ctripcorp/apollo  \n\n作者对Apollo对介绍：\nhttps://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D  \n\n<!--more-->\n\n# 二、安装部署\n\n## 基础设施\n\n本次部署环境为DEV（开发环境）、FAT（测试环境）、UAT（预生产）、PRO（生产）  \n\n**应用服务器：**\n\n| 环境 | 服务器 | 服务 | 端口 |\n| :---: | --- | --- | :---: |\n| / | 192.168.35.206 | apollo-portal | 9102 |\n| DEV | 192.168.35.207 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n| FAT | 192.168.35.208 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n| UAT | 192.168.35.209 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n| PRO | 192.168.35.210 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n\n**数据库服务器：**\n\n| 环境 | 服务器 | 服务 | 数据库 | 端口 |\n| :---: | --- | --- | --- | :---: |\n| / | 192.168.35.226 | apollo-portal | ApolloPortalDB | 3306 |\n| DEV | 192.168.35.227 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n| FAT | 192.168.35.228 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n| UAT | 192.168.35.229 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n| PRO | 192.168.35.230 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n\n##  配置\n\n**下载代码：**  \n\n```\ngit clone https://github.com/ctripcorp/apollo.git\n```\n\n比较重要的几个项目：  \n- apollo-configservice：提供配置获取接口，提供配置更新推送接口，接口服务对象为Apollo客户端  \n- apollo-adminservice：提供配置管理接口，提供配置修改、发布等接口，接口服务对象为Portal，以及Eureka  \n- apollo-portal：提供Web界面供用户管理配置  \n- apollo-client：Apollo提供的客户端程序，为应用提供配置获取、实时更新等功能  \n\n![](http://pa74vwr85.bkt.clouddn.com/release-message-notification-design.png)\n\n上图简要描述了配置发布的大致过程：\n\n- 用户在Portal操作配置发布\n- Portal调用Admin Service的接口操作发布\n- Admin Service发布配置后，发送ReleaseMessage给各个Config Service\n- Config Service收到ReleaseMessage后，通知对应的客户端\n\n**数据库初始化：**  \n\n*下面的sql为大写格式，注意数据库的大小写敏感设置*\n\n- ApolloPortalDB：执行`apollo\\scripts\\sql\\apolloportaldb.sql`\n- ApolloConfigDB：DEV FAT UAT PRO 环境执行`apollo\\scripts\\sql\\apolloconfigdb.sql`\n\n**调整配置并打包：**  \n\n在`Apollo`项目中找到目录`apollo\\scripts\\`的配置文件`build.sh`或者`build.bat`  \n1. 数据库配置  \n修改数据库配置，上面的是`ApolloConfigDB`配置，下面的是`ApolloPortalDB`配置：\n\n```\n# apollo config db info  该数据库配置只需要配置一次，不同环境无需修改\napollo_config_db_url=jdbc:mysql://192.168.35.227:3306/ApolloConfigDB?characterEncoding=utf8\napollo_config_db_username=XXXX\napollo_config_db_password=XXXX\n\n# apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打对应环境的JAR包\napollo_portal_db_url=jdbc:mysql://192.168.35.226:3306/ApolloPortalDB?characterEncoding=utf8\napollo_portal_db_username=XXXX\napollo_portal_db_password=XXXX\n```\n\n- apollo config db info  该数据库配置只需要配置一次，不同环境无需修改\n- apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打\n\n\n2. 修改环境调用地址  \n\n```\n# meta server url, different environments should have different meta server addresses\ndev_meta=http://192.168.35.207:9100\nfat_meta=http://192.168.35.208:9100\nuat_meta=http://192.168.35.209:9100\npro_meta=http://192.168.35.210:9100\n```\n\n3. 修改数据库数据  \n\n在DEV FAT UAT PRO 对应的`ApolloConfigDB`数据库中,找到表`ServerConfig`中的`eureka.service.url`配置项：\n\n```sql\nUPDATE apolloconfigdb.ServerConfig SET ServerConfig.`Value`='http://localhost:9100/eureka/' WHERE `Key`='eureka.service.url';\n```\n\n修改环境配置，在`ApolloPortalDB`数据库修改表`ServerConfig`中的`apollo.portal.envs`:\n\n```sql\nUPDATE apolloportaldb.serverconfig SET serverconfig.`Value`='dev,fat,uat,pro' WHERE `Key`='apollo.portal.envs';\n```\n\n具体`eureka`配置，可以查看官网：https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97\n\n4. 编译、打包\n\n```\n./build.sh\n```\n\n- 该脚本会依次打包`apollo-configservice`, `apollo-adminservice`, `apollo-portal`和`apollo-client`。\n- 由于`ApolloConfigDB`在每个环境都有部署，所以对不同环境的`config-service`和`admin-service`需要使用不同的数据库连接信息打不同的包，`portal`和`client`只需要打一次包即可\n\n##  开始部署\n\n**部署程序到对应的服务器**  \n\n1. 部署apollo-configservice\n\n将`apollo-configservice/target/`目录下的`apollo-configservice-x.x.x-github.zip`上传到服务器上，解压  \n修改`scripts/startup.sh` ： \n\n```\nLOG_DIR=/opt/logs/100003171\nSERVER_PORT=9100\n```\n\n执行`scripts/startup.sh`即可  \n如需停止服务，执行`scripts/shutdown.sh.`  \n\n\n2. 部署apollo-adminservice\n\n将`apollo-adminservice/target/`目录下的`apollo-adminservice-x.x.x-github.zip`上传到服务器上，解压  \n修改`scripts/startup.sh`：\n\n```\nLOG_DIR=/opt/logs/100003172\nSERVER_PORT=9101\n```\n\n执行`scripts/startup.sh`即可  \n如需停止服务，执行`scripts/shutdown.sh.`  \n\n3. 部署apollo-portal\n\n将`apollo-portal/target/`目录下的`apollo-portal-x.x.x-github.zip`上传到服务器上，解压  \n修改`scripts/startup.sh`：\n\n```\nLOG_DIR=/opt/logs/100003173\nSERVER_PORT=9102\n```\n\n执行`scripts/startup.sh`即可  \n如需停止服务，执行`scripts/shutdown.sh.`  \n\n**访问测试**  \n\n上面部署完成，可以测试\n\n访问不同环境的`eureka`，查看服务注册情况是否正确：\n\n```\nhttp://192.168.35.207:9100/\n```\n\n如果可以看到:\n\n```\n192.168.35.207:apollo-adminservice:9101\n192.168.35.207:apollo-configservice:9100\n```\n\n两个服务都为UP，正常！\n\n访问客户端：\n\n```\nhttp://192.168.35.206:9102/\n```\n\n登录，默认用户名密码为：`apollo/admin`  \n\n新建项目测试。\n\n# 三、使用配置中心配置信息\n\n1. maven引入上面步骤编译打包成功的`apollo-core`和`apollo-client`包：  \n\n```xml\n<dependency>\n    <groupId>com.ctrip.framework.apollo</groupId>\n    <artifactId>apollo-core</artifactId>\n    <version>0.11.0-SNAPSHOT</version>\n</dependency>\n<dependency>\n    <groupId>com.ctrip.framework.apollo</groupId>\n    <artifactId>apollo-client</artifactId>\n    <version>0.11.0-SNAPSHOT</version>\n</dependency>\n```\n\n2. 创建app.properties  \n\n请确保classpath:/META-INF/app.properties文件存在，并且其中内容为自己的项目名称，而且要保持唯一：\n```\napp.id=demo\n```\n\n3. 环境变量配置  \n\n**本地开发**  \n\n如果是本地开发，可以在开发工具添加Environment：\n\n```\nenv=DEV\n```\n\n**线上环境配置方式：**  \n- 使用Java启动参数添加`java -Denv=YOUR-ENVIRONMENT -jar xxx.jar`\n- 通过操作系统的System Environment\n- 通过配置文件：  \n对于Mac/Linux，文件位置为/opt/settings/server.properties  \n对于Windows，文件位置为C:\\opt\\settings\\server.properties  \n\n4. 配置apollo-env.properties  \n\n在项目中引用`apollo-core`和`apollo-client`包，在`apollo-core`包中可以看到`apollo-env.properties`配置文件，默认配置为打包前配置的信息：\n\n```\nlocal.meta=http://localhost:8080\ndev.meta=http://192.168.35.207:9100\nfat.meta=http://192.168.35.208:9100\nuat.meta=http://192.168.35.209:9100\nlpt.meta=${lpt_meta}\npro.meta=http://192.168.35.210:9100\n```\n\n如果需要修改或者覆盖的话，在项目的`resources`从上面复制一个`apollo-env.properties`文件，修改对应环境信息就可以了\n\n5. 启用配置  \n在启动类添加`@EnableApolloConfig`注解即可：\n\n```java\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n\n/**\n * @author chihiro.zhang\n */\n@EnableApolloConfig\n@SpringBootApplication\npublic class Application {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n\n}\n```\n\n5. 测试  \n\n添加一个测试的类`DemoConfiguration`，当然配置中心要有下面配置的配置信息:\n```\n@Configuration\n@EnableAutoConfiguration\npublic class DemoConfiguration {\n    @Value(\"${demo}\")\n    private String demo;\n}\n```\n\n完成！\n\n# 四、部署方案\n\n这个图是计划部署的方案，并不是上面写的例子的方案\n\n![](http://pa74vwr85.bkt.clouddn.com/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E4%B8%AD%E5%BF%83.png)\n\n\n\n","source":"_posts/tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu.md","raw":"---\ntitle: Apollo分布式配置中心部署以及使用\ndate: 2018-06-12 11:18:00\ntags: [Java,分布式,SpringBoot,Spring Cloud]\ncategories: \n  - 技术杂文\n---\n\n# 一、简介\n\n>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。\n\n官方github：https://github.com/ctripcorp/apollo  \n\n作者对Apollo对介绍：\nhttps://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D  \n\n<!--more-->\n\n# 二、安装部署\n\n## 基础设施\n\n本次部署环境为DEV（开发环境）、FAT（测试环境）、UAT（预生产）、PRO（生产）  \n\n**应用服务器：**\n\n| 环境 | 服务器 | 服务 | 端口 |\n| :---: | --- | --- | :---: |\n| / | 192.168.35.206 | apollo-portal | 9102 |\n| DEV | 192.168.35.207 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n| FAT | 192.168.35.208 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n| UAT | 192.168.35.209 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n| PRO | 192.168.35.210 | apollo-configservice<br/>apollo-adminservice | 9100<br/>9101 |\n\n**数据库服务器：**\n\n| 环境 | 服务器 | 服务 | 数据库 | 端口 |\n| :---: | --- | --- | --- | :---: |\n| / | 192.168.35.226 | apollo-portal | ApolloPortalDB | 3306 |\n| DEV | 192.168.35.227 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n| FAT | 192.168.35.228 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n| UAT | 192.168.35.229 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n| PRO | 192.168.35.230 | apollo-configservice<br/>apollo-adminservice | ApolloConfigDB | 3306 |\n\n##  配置\n\n**下载代码：**  \n\n```\ngit clone https://github.com/ctripcorp/apollo.git\n```\n\n比较重要的几个项目：  \n- apollo-configservice：提供配置获取接口，提供配置更新推送接口，接口服务对象为Apollo客户端  \n- apollo-adminservice：提供配置管理接口，提供配置修改、发布等接口，接口服务对象为Portal，以及Eureka  \n- apollo-portal：提供Web界面供用户管理配置  \n- apollo-client：Apollo提供的客户端程序，为应用提供配置获取、实时更新等功能  \n\n![](http://pa74vwr85.bkt.clouddn.com/release-message-notification-design.png)\n\n上图简要描述了配置发布的大致过程：\n\n- 用户在Portal操作配置发布\n- Portal调用Admin Service的接口操作发布\n- Admin Service发布配置后，发送ReleaseMessage给各个Config Service\n- Config Service收到ReleaseMessage后，通知对应的客户端\n\n**数据库初始化：**  \n\n*下面的sql为大写格式，注意数据库的大小写敏感设置*\n\n- ApolloPortalDB：执行`apollo\\scripts\\sql\\apolloportaldb.sql`\n- ApolloConfigDB：DEV FAT UAT PRO 环境执行`apollo\\scripts\\sql\\apolloconfigdb.sql`\n\n**调整配置并打包：**  \n\n在`Apollo`项目中找到目录`apollo\\scripts\\`的配置文件`build.sh`或者`build.bat`  \n1. 数据库配置  \n修改数据库配置，上面的是`ApolloConfigDB`配置，下面的是`ApolloPortalDB`配置：\n\n```\n# apollo config db info  该数据库配置只需要配置一次，不同环境无需修改\napollo_config_db_url=jdbc:mysql://192.168.35.227:3306/ApolloConfigDB?characterEncoding=utf8\napollo_config_db_username=XXXX\napollo_config_db_password=XXXX\n\n# apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打对应环境的JAR包\napollo_portal_db_url=jdbc:mysql://192.168.35.226:3306/ApolloPortalDB?characterEncoding=utf8\napollo_portal_db_username=XXXX\napollo_portal_db_password=XXXX\n```\n\n- apollo config db info  该数据库配置只需要配置一次，不同环境无需修改\n- apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打\n\n\n2. 修改环境调用地址  \n\n```\n# meta server url, different environments should have different meta server addresses\ndev_meta=http://192.168.35.207:9100\nfat_meta=http://192.168.35.208:9100\nuat_meta=http://192.168.35.209:9100\npro_meta=http://192.168.35.210:9100\n```\n\n3. 修改数据库数据  \n\n在DEV FAT UAT PRO 对应的`ApolloConfigDB`数据库中,找到表`ServerConfig`中的`eureka.service.url`配置项：\n\n```sql\nUPDATE apolloconfigdb.ServerConfig SET ServerConfig.`Value`='http://localhost:9100/eureka/' WHERE `Key`='eureka.service.url';\n```\n\n修改环境配置，在`ApolloPortalDB`数据库修改表`ServerConfig`中的`apollo.portal.envs`:\n\n```sql\nUPDATE apolloportaldb.serverconfig SET serverconfig.`Value`='dev,fat,uat,pro' WHERE `Key`='apollo.portal.envs';\n```\n\n具体`eureka`配置，可以查看官网：https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97\n\n4. 编译、打包\n\n```\n./build.sh\n```\n\n- 该脚本会依次打包`apollo-configservice`, `apollo-adminservice`, `apollo-portal`和`apollo-client`。\n- 由于`ApolloConfigDB`在每个环境都有部署，所以对不同环境的`config-service`和`admin-service`需要使用不同的数据库连接信息打不同的包，`portal`和`client`只需要打一次包即可\n\n##  开始部署\n\n**部署程序到对应的服务器**  \n\n1. 部署apollo-configservice\n\n将`apollo-configservice/target/`目录下的`apollo-configservice-x.x.x-github.zip`上传到服务器上，解压  \n修改`scripts/startup.sh` ： \n\n```\nLOG_DIR=/opt/logs/100003171\nSERVER_PORT=9100\n```\n\n执行`scripts/startup.sh`即可  \n如需停止服务，执行`scripts/shutdown.sh.`  \n\n\n2. 部署apollo-adminservice\n\n将`apollo-adminservice/target/`目录下的`apollo-adminservice-x.x.x-github.zip`上传到服务器上，解压  \n修改`scripts/startup.sh`：\n\n```\nLOG_DIR=/opt/logs/100003172\nSERVER_PORT=9101\n```\n\n执行`scripts/startup.sh`即可  \n如需停止服务，执行`scripts/shutdown.sh.`  \n\n3. 部署apollo-portal\n\n将`apollo-portal/target/`目录下的`apollo-portal-x.x.x-github.zip`上传到服务器上，解压  \n修改`scripts/startup.sh`：\n\n```\nLOG_DIR=/opt/logs/100003173\nSERVER_PORT=9102\n```\n\n执行`scripts/startup.sh`即可  \n如需停止服务，执行`scripts/shutdown.sh.`  \n\n**访问测试**  \n\n上面部署完成，可以测试\n\n访问不同环境的`eureka`，查看服务注册情况是否正确：\n\n```\nhttp://192.168.35.207:9100/\n```\n\n如果可以看到:\n\n```\n192.168.35.207:apollo-adminservice:9101\n192.168.35.207:apollo-configservice:9100\n```\n\n两个服务都为UP，正常！\n\n访问客户端：\n\n```\nhttp://192.168.35.206:9102/\n```\n\n登录，默认用户名密码为：`apollo/admin`  \n\n新建项目测试。\n\n# 三、使用配置中心配置信息\n\n1. maven引入上面步骤编译打包成功的`apollo-core`和`apollo-client`包：  \n\n```xml\n<dependency>\n    <groupId>com.ctrip.framework.apollo</groupId>\n    <artifactId>apollo-core</artifactId>\n    <version>0.11.0-SNAPSHOT</version>\n</dependency>\n<dependency>\n    <groupId>com.ctrip.framework.apollo</groupId>\n    <artifactId>apollo-client</artifactId>\n    <version>0.11.0-SNAPSHOT</version>\n</dependency>\n```\n\n2. 创建app.properties  \n\n请确保classpath:/META-INF/app.properties文件存在，并且其中内容为自己的项目名称，而且要保持唯一：\n```\napp.id=demo\n```\n\n3. 环境变量配置  \n\n**本地开发**  \n\n如果是本地开发，可以在开发工具添加Environment：\n\n```\nenv=DEV\n```\n\n**线上环境配置方式：**  \n- 使用Java启动参数添加`java -Denv=YOUR-ENVIRONMENT -jar xxx.jar`\n- 通过操作系统的System Environment\n- 通过配置文件：  \n对于Mac/Linux，文件位置为/opt/settings/server.properties  \n对于Windows，文件位置为C:\\opt\\settings\\server.properties  \n\n4. 配置apollo-env.properties  \n\n在项目中引用`apollo-core`和`apollo-client`包，在`apollo-core`包中可以看到`apollo-env.properties`配置文件，默认配置为打包前配置的信息：\n\n```\nlocal.meta=http://localhost:8080\ndev.meta=http://192.168.35.207:9100\nfat.meta=http://192.168.35.208:9100\nuat.meta=http://192.168.35.209:9100\nlpt.meta=${lpt_meta}\npro.meta=http://192.168.35.210:9100\n```\n\n如果需要修改或者覆盖的话，在项目的`resources`从上面复制一个`apollo-env.properties`文件，修改对应环境信息就可以了\n\n5. 启用配置  \n在启动类添加`@EnableApolloConfig`注解即可：\n\n```java\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n\n/**\n * @author chihiro.zhang\n */\n@EnableApolloConfig\n@SpringBootApplication\npublic class Application {\n\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n\n}\n```\n\n5. 测试  \n\n添加一个测试的类`DemoConfiguration`，当然配置中心要有下面配置的配置信息:\n```\n@Configuration\n@EnableAutoConfiguration\npublic class DemoConfiguration {\n    @Value(\"${demo}\")\n    private String demo;\n}\n```\n\n完成！\n\n# 四、部署方案\n\n这个图是计划部署的方案，并不是上面写的例子的方案\n\n![](http://pa74vwr85.bkt.clouddn.com/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E4%B8%AD%E5%BF%83.png)\n\n\n\n","slug":"tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu","published":1,"updated":"2020-03-11T10:48:16.858Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5am002lw8mxu90hbise","content":"<h1 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h1><blockquote>\n<p>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p>\n</blockquote>\n<p>官方github：<a href=\"https://github.com/ctripcorp/apollo\">https://github.com/ctripcorp/apollo</a>  </p>\n<p>作者对Apollo对介绍：<br><a href=\"https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D\">https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D</a>  </p>\n<a id=\"more\"></a>\n<h1 id=\"二、安装部署\"><a href=\"#二、安装部署\" class=\"headerlink\" title=\"二、安装部署\"></a>二、安装部署</h1><h2 id=\"基础设施\"><a href=\"#基础设施\" class=\"headerlink\" title=\"基础设施\"></a>基础设施</h2><p>本次部署环境为DEV（开发环境）、FAT（测试环境）、UAT（预生产）、PRO（生产）  </p>\n<p><strong>应用服务器：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">环境</th>\n<th>服务器</th>\n<th>服务</th>\n<th style=\"text-align:center\">端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td>192.168.35.206</td>\n<td>apollo-portal</td>\n<td style=\"text-align:center\">9102</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DEV</td>\n<td>192.168.35.207</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FAT</td>\n<td>192.168.35.208</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">UAT</td>\n<td>192.168.35.209</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PRO</td>\n<td>192.168.35.210</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n</tbody>\n</table>\n<p><strong>数据库服务器：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">环境</th>\n<th>服务器</th>\n<th>服务</th>\n<th>数据库</th>\n<th style=\"text-align:center\">端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td>192.168.35.226</td>\n<td>apollo-portal</td>\n<td>ApolloPortalDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DEV</td>\n<td>192.168.35.227</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FAT</td>\n<td>192.168.35.228</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">UAT</td>\n<td>192.168.35.229</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PRO</td>\n<td>192.168.35.230</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p><strong>下载代码：</strong>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/ctripcorp/apollo.git</span><br></pre></td></tr></table></figure>\n<p>比较重要的几个项目：  </p>\n<ul>\n<li>apollo-configservice：提供配置获取接口，提供配置更新推送接口，接口服务对象为Apollo客户端  </li>\n<li>apollo-adminservice：提供配置管理接口，提供配置修改、发布等接口，接口服务对象为Portal，以及Eureka  </li>\n<li>apollo-portal：提供Web界面供用户管理配置  </li>\n<li>apollo-client：Apollo提供的客户端程序，为应用提供配置获取、实时更新等功能  </li>\n</ul>\n<p><img src=\"http://pa74vwr85.bkt.clouddn.com/release-message-notification-design.png\" alt=\"\"></p>\n<p>上图简要描述了配置发布的大致过程：</p>\n<ul>\n<li>用户在Portal操作配置发布</li>\n<li>Portal调用Admin Service的接口操作发布</li>\n<li>Admin Service发布配置后，发送ReleaseMessage给各个Config Service</li>\n<li>Config Service收到ReleaseMessage后，通知对应的客户端</li>\n</ul>\n<p><strong>数据库初始化：</strong>  </p>\n<p><em>下面的sql为大写格式，注意数据库的大小写敏感设置</em></p>\n<ul>\n<li>ApolloPortalDB：执行<code>apollo\\scripts\\sql\\apolloportaldb.sql</code></li>\n<li>ApolloConfigDB：DEV FAT UAT PRO 环境执行<code>apollo\\scripts\\sql\\apolloconfigdb.sql</code></li>\n</ul>\n<p><strong>调整配置并打包：</strong>  </p>\n<p>在<code>Apollo</code>项目中找到目录<code>apollo\\scripts\\</code>的配置文件<code>build.sh</code>或者<code>build.bat</code>  </p>\n<ol>\n<li>数据库配置<br>修改数据库配置，上面的是<code>ApolloConfigDB</code>配置，下面的是<code>ApolloPortalDB</code>配置：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># apollo config db info  该数据库配置只需要配置一次，不同环境无需修改</span><br><span class=\"line\">apollo_config_db_url=jdbc:mysql://192.168.35.227:3306/ApolloConfigDB?characterEncoding=utf8</span><br><span class=\"line\">apollo_config_db_username=XXXX</span><br><span class=\"line\">apollo_config_db_password=XXXX</span><br><span class=\"line\"></span><br><span class=\"line\"># apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打对应环境的JAR包</span><br><span class=\"line\">apollo_portal_db_url=jdbc:mysql://192.168.35.226:3306/ApolloPortalDB?characterEncoding=utf8</span><br><span class=\"line\">apollo_portal_db_username=XXXX</span><br><span class=\"line\">apollo_portal_db_password=XXXX</span><br></pre></td></tr></table></figure>\n<ul>\n<li>apollo config db info  该数据库配置只需要配置一次，不同环境无需修改</li>\n<li>apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打</li>\n</ul>\n<ol start=\"2\">\n<li>修改环境调用地址  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># meta server url, different environments should have different meta server addresses</span><br><span class=\"line\">dev_meta=http://192.168.35.207:9100</span><br><span class=\"line\">fat_meta=http://192.168.35.208:9100</span><br><span class=\"line\">uat_meta=http://192.168.35.209:9100</span><br><span class=\"line\">pro_meta=http://192.168.35.210:9100</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>修改数据库数据  </li>\n</ol>\n<p>在DEV FAT UAT PRO 对应的<code>ApolloConfigDB</code>数据库中,找到表<code>ServerConfig</code>中的<code>eureka.service.url</code>配置项：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> apolloconfigdb.ServerConfig <span class=\"keyword\">SET</span> ServerConfig.<span class=\"string\">`Value`</span>=<span class=\"string\">'http://localhost:9100/eureka/'</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`Key`</span>=<span class=\"string\">'eureka.service.url'</span>;</span><br></pre></td></tr></table></figure>\n<p>修改环境配置，在<code>ApolloPortalDB</code>数据库修改表<code>ServerConfig</code>中的<code>apollo.portal.envs</code>:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> apolloportaldb.serverconfig <span class=\"keyword\">SET</span> serverconfig.<span class=\"string\">`Value`</span>=<span class=\"string\">'dev,fat,uat,pro'</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`Key`</span>=<span class=\"string\">'apollo.portal.envs'</span>;</span><br></pre></td></tr></table></figure>\n<p>具体<code>eureka</code>配置，可以查看官网：<a href=\"https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97\">https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97</a></p>\n<ol start=\"4\">\n<li>编译、打包</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./build.sh</span><br></pre></td></tr></table></figure>\n<ul>\n<li>该脚本会依次打包<code>apollo-configservice</code>, <code>apollo-adminservice</code>, <code>apollo-portal</code>和<code>apollo-client</code>。</li>\n<li>由于<code>ApolloConfigDB</code>在每个环境都有部署，所以对不同环境的<code>config-service</code>和<code>admin-service</code>需要使用不同的数据库连接信息打不同的包，<code>portal</code>和<code>client</code>只需要打一次包即可</li>\n</ul>\n<h2 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h2><p><strong>部署程序到对应的服务器</strong>  </p>\n<ol>\n<li>部署apollo-configservice</li>\n</ol>\n<p>将<code>apollo-configservice/target/</code>目录下的<code>apollo-configservice-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code> ： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_DIR=/opt/logs/100003171</span><br><span class=\"line\">SERVER_PORT=9100</span><br></pre></td></tr></table></figure>\n<p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p>\n<ol start=\"2\">\n<li>部署apollo-adminservice</li>\n</ol>\n<p>将<code>apollo-adminservice/target/</code>目录下的<code>apollo-adminservice-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_DIR=/opt/logs/100003172</span><br><span class=\"line\">SERVER_PORT=9101</span><br></pre></td></tr></table></figure>\n<p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p>\n<ol start=\"3\">\n<li>部署apollo-portal</li>\n</ol>\n<p>将<code>apollo-portal/target/</code>目录下的<code>apollo-portal-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_DIR=/opt/logs/100003173</span><br><span class=\"line\">SERVER_PORT=9102</span><br></pre></td></tr></table></figure>\n<p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p>\n<p><strong>访问测试</strong>  </p>\n<p>上面部署完成，可以测试</p>\n<p>访问不同环境的<code>eureka</code>，查看服务注册情况是否正确：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.35.207:9100/</span><br></pre></td></tr></table></figure>\n<p>如果可以看到:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.35.207:apollo-adminservice:9101</span><br><span class=\"line\">192.168.35.207:apollo-configservice:9100</span><br></pre></td></tr></table></figure>\n<p>两个服务都为UP，正常！</p>\n<p>访问客户端：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.35.206:9102/</span><br></pre></td></tr></table></figure>\n<p>登录，默认用户名密码为：<code>apollo/admin</code>  </p>\n<p>新建项目测试。</p>\n<h1 id=\"三、使用配置中心配置信息\"><a href=\"#三、使用配置中心配置信息\" class=\"headerlink\" title=\"三、使用配置中心配置信息\"></a>三、使用配置中心配置信息</h1><ol>\n<li>maven引入上面步骤编译打包成功的<code>apollo-core</code>和<code>apollo-client</code>包：  </li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>apollo-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.11.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>apollo-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.11.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>创建app.properties  </li>\n</ol>\n<p>请确保classpath:/META-INF/app.properties文件存在，并且其中内容为自己的项目名称，而且要保持唯一：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.id=demo</span><br></pre></td></tr></table></figure></p>\n<ol start=\"3\">\n<li>环境变量配置  </li>\n</ol>\n<p><strong>本地开发</strong>  </p>\n<p>如果是本地开发，可以在开发工具添加Environment：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env=DEV</span><br></pre></td></tr></table></figure>\n<p><strong>线上环境配置方式：</strong>  </p>\n<ul>\n<li>使用Java启动参数添加<code>java -Denv=YOUR-ENVIRONMENT -jar xxx.jar</code></li>\n<li>通过操作系统的System Environment</li>\n<li>通过配置文件：<br>对于Mac/Linux，文件位置为/opt/settings/server.properties<br>对于Windows，文件位置为C:\\opt\\settings\\server.properties  </li>\n</ul>\n<ol start=\"4\">\n<li>配置apollo-env.properties  </li>\n</ol>\n<p>在项目中引用<code>apollo-core</code>和<code>apollo-client</code>包，在<code>apollo-core</code>包中可以看到<code>apollo-env.properties</code>配置文件，默认配置为打包前配置的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local.meta=http://localhost:8080</span><br><span class=\"line\">dev.meta=http://192.168.35.207:9100</span><br><span class=\"line\">fat.meta=http://192.168.35.208:9100</span><br><span class=\"line\">uat.meta=http://192.168.35.209:9100</span><br><span class=\"line\">lpt.meta=$&#123;lpt_meta&#125;</span><br><span class=\"line\">pro.meta=http://192.168.35.210:9100</span><br></pre></td></tr></table></figure>\n<p>如果需要修改或者覆盖的话，在项目的<code>resources</code>从上面复制一个<code>apollo-env.properties</code>文件，修改对应环境信息就可以了</p>\n<ol start=\"5\">\n<li>启用配置<br>在启动类添加<code>@EnableApolloConfig</code>注解即可：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@EnableApolloConfig</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Application.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>测试  </li>\n</ol>\n<p>添加一个测试的类<code>DemoConfiguration</code>，当然配置中心要有下面配置的配置信息:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Configuration</span><br><span class=\"line\">@EnableAutoConfiguration</span><br><span class=\"line\">public class DemoConfiguration &#123;</span><br><span class=\"line\">    @Value(&quot;$&#123;demo&#125;&quot;)</span><br><span class=\"line\">    private String demo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>完成！</p>\n<h1 id=\"四、部署方案\"><a href=\"#四、部署方案\" class=\"headerlink\" title=\"四、部署方案\"></a>四、部署方案</h1><p>这个图是计划部署的方案，并不是上面写的例子的方案</p>\n<p><img src=\"http://pa74vwr85.bkt.clouddn.com/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E4%B8%AD%E5%BF%83.png\" alt=\"\"></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"一、简介\"><a href=\"#一、简介\" class=\"headerlink\" title=\"一、简介\"></a>一、简介</h1><blockquote>\n<p>Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</p>\n</blockquote>\n<p>官方github：<a href=\"https://github.com/ctripcorp/apollo\">https://github.com/ctripcorp/apollo</a>  </p>\n<p>作者对Apollo对介绍：<br><a href=\"https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D\">https://github.com/ctripcorp/apollo/wiki/Apollo%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%E4%BB%8B%E7%BB%8D</a>  </p>","more":"<h1 id=\"二、安装部署\"><a href=\"#二、安装部署\" class=\"headerlink\" title=\"二、安装部署\"></a>二、安装部署</h1><h2 id=\"基础设施\"><a href=\"#基础设施\" class=\"headerlink\" title=\"基础设施\"></a>基础设施</h2><p>本次部署环境为DEV（开发环境）、FAT（测试环境）、UAT（预生产）、PRO（生产）  </p>\n<p><strong>应用服务器：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">环境</th>\n<th>服务器</th>\n<th>服务</th>\n<th style=\"text-align:center\">端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td>192.168.35.206</td>\n<td>apollo-portal</td>\n<td style=\"text-align:center\">9102</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DEV</td>\n<td>192.168.35.207</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FAT</td>\n<td>192.168.35.208</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">UAT</td>\n<td>192.168.35.209</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PRO</td>\n<td>192.168.35.210</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td style=\"text-align:center\">9100<br>9101</td>\n</tr>\n</tbody>\n</table>\n<p><strong>数据库服务器：</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">环境</th>\n<th>服务器</th>\n<th>服务</th>\n<th>数据库</th>\n<th style=\"text-align:center\">端口</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td>192.168.35.226</td>\n<td>apollo-portal</td>\n<td>ApolloPortalDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DEV</td>\n<td>192.168.35.227</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">FAT</td>\n<td>192.168.35.228</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">UAT</td>\n<td>192.168.35.229</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PRO</td>\n<td>192.168.35.230</td>\n<td>apollo-configservice<br>apollo-adminservice</td>\n<td>ApolloConfigDB</td>\n<td style=\"text-align:center\">3306</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p><strong>下载代码：</strong>  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/ctripcorp/apollo.git</span><br></pre></td></tr></table></figure>\n<p>比较重要的几个项目：  </p>\n<ul>\n<li>apollo-configservice：提供配置获取接口，提供配置更新推送接口，接口服务对象为Apollo客户端  </li>\n<li>apollo-adminservice：提供配置管理接口，提供配置修改、发布等接口，接口服务对象为Portal，以及Eureka  </li>\n<li>apollo-portal：提供Web界面供用户管理配置  </li>\n<li>apollo-client：Apollo提供的客户端程序，为应用提供配置获取、实时更新等功能  </li>\n</ul>\n<p><img src=\"http://pa74vwr85.bkt.clouddn.com/release-message-notification-design.png\" alt=\"\"></p>\n<p>上图简要描述了配置发布的大致过程：</p>\n<ul>\n<li>用户在Portal操作配置发布</li>\n<li>Portal调用Admin Service的接口操作发布</li>\n<li>Admin Service发布配置后，发送ReleaseMessage给各个Config Service</li>\n<li>Config Service收到ReleaseMessage后，通知对应的客户端</li>\n</ul>\n<p><strong>数据库初始化：</strong>  </p>\n<p><em>下面的sql为大写格式，注意数据库的大小写敏感设置</em></p>\n<ul>\n<li>ApolloPortalDB：执行<code>apollo\\scripts\\sql\\apolloportaldb.sql</code></li>\n<li>ApolloConfigDB：DEV FAT UAT PRO 环境执行<code>apollo\\scripts\\sql\\apolloconfigdb.sql</code></li>\n</ul>\n<p><strong>调整配置并打包：</strong>  </p>\n<p>在<code>Apollo</code>项目中找到目录<code>apollo\\scripts\\</code>的配置文件<code>build.sh</code>或者<code>build.bat</code>  </p>\n<ol>\n<li>数据库配置<br>修改数据库配置，上面的是<code>ApolloConfigDB</code>配置，下面的是<code>ApolloPortalDB</code>配置：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># apollo config db info  该数据库配置只需要配置一次，不同环境无需修改</span><br><span class=\"line\">apollo_config_db_url=jdbc:mysql://192.168.35.227:3306/ApolloConfigDB?characterEncoding=utf8</span><br><span class=\"line\">apollo_config_db_username=XXXX</span><br><span class=\"line\">apollo_config_db_password=XXXX</span><br><span class=\"line\"></span><br><span class=\"line\"># apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打对应环境的JAR包</span><br><span class=\"line\">apollo_portal_db_url=jdbc:mysql://192.168.35.226:3306/ApolloPortalDB?characterEncoding=utf8</span><br><span class=\"line\">apollo_portal_db_username=XXXX</span><br><span class=\"line\">apollo_portal_db_password=XXXX</span><br></pre></td></tr></table></figure>\n<ul>\n<li>apollo config db info  该数据库配置只需要配置一次，不同环境无需修改</li>\n<li>apollo portal db info  该数据库依据不同环境配置对应的数据库连接，并且需要多次打</li>\n</ul>\n<ol start=\"2\">\n<li>修改环境调用地址  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># meta server url, different environments should have different meta server addresses</span><br><span class=\"line\">dev_meta=http://192.168.35.207:9100</span><br><span class=\"line\">fat_meta=http://192.168.35.208:9100</span><br><span class=\"line\">uat_meta=http://192.168.35.209:9100</span><br><span class=\"line\">pro_meta=http://192.168.35.210:9100</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>修改数据库数据  </li>\n</ol>\n<p>在DEV FAT UAT PRO 对应的<code>ApolloConfigDB</code>数据库中,找到表<code>ServerConfig</code>中的<code>eureka.service.url</code>配置项：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> apolloconfigdb.ServerConfig <span class=\"keyword\">SET</span> ServerConfig.<span class=\"string\">`Value`</span>=<span class=\"string\">'http://localhost:9100/eureka/'</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`Key`</span>=<span class=\"string\">'eureka.service.url'</span>;</span><br></pre></td></tr></table></figure>\n<p>修改环境配置，在<code>ApolloPortalDB</code>数据库修改表<code>ServerConfig</code>中的<code>apollo.portal.envs</code>:</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> apolloportaldb.serverconfig <span class=\"keyword\">SET</span> serverconfig.<span class=\"string\">`Value`</span>=<span class=\"string\">'dev,fat,uat,pro'</span> <span class=\"keyword\">WHERE</span> <span class=\"string\">`Key`</span>=<span class=\"string\">'apollo.portal.envs'</span>;</span><br></pre></td></tr></table></figure>\n<p>具体<code>eureka</code>配置，可以查看官网：<a href=\"https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97\">https://github.com/ctripcorp/apollo/wiki/%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97</a></p>\n<ol start=\"4\">\n<li>编译、打包</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./build.sh</span><br></pre></td></tr></table></figure>\n<ul>\n<li>该脚本会依次打包<code>apollo-configservice</code>, <code>apollo-adminservice</code>, <code>apollo-portal</code>和<code>apollo-client</code>。</li>\n<li>由于<code>ApolloConfigDB</code>在每个环境都有部署，所以对不同环境的<code>config-service</code>和<code>admin-service</code>需要使用不同的数据库连接信息打不同的包，<code>portal</code>和<code>client</code>只需要打一次包即可</li>\n</ul>\n<h2 id=\"开始部署\"><a href=\"#开始部署\" class=\"headerlink\" title=\"开始部署\"></a>开始部署</h2><p><strong>部署程序到对应的服务器</strong>  </p>\n<ol>\n<li>部署apollo-configservice</li>\n</ol>\n<p>将<code>apollo-configservice/target/</code>目录下的<code>apollo-configservice-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code> ： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_DIR=/opt/logs/100003171</span><br><span class=\"line\">SERVER_PORT=9100</span><br></pre></td></tr></table></figure>\n<p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p>\n<ol start=\"2\">\n<li>部署apollo-adminservice</li>\n</ol>\n<p>将<code>apollo-adminservice/target/</code>目录下的<code>apollo-adminservice-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_DIR=/opt/logs/100003172</span><br><span class=\"line\">SERVER_PORT=9101</span><br></pre></td></tr></table></figure>\n<p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p>\n<ol start=\"3\">\n<li>部署apollo-portal</li>\n</ol>\n<p>将<code>apollo-portal/target/</code>目录下的<code>apollo-portal-x.x.x-github.zip</code>上传到服务器上，解压<br>修改<code>scripts/startup.sh</code>：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOG_DIR=/opt/logs/100003173</span><br><span class=\"line\">SERVER_PORT=9102</span><br></pre></td></tr></table></figure>\n<p>执行<code>scripts/startup.sh</code>即可<br>如需停止服务，执行<code>scripts/shutdown.sh.</code>  </p>\n<p><strong>访问测试</strong>  </p>\n<p>上面部署完成，可以测试</p>\n<p>访问不同环境的<code>eureka</code>，查看服务注册情况是否正确：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.35.207:9100/</span><br></pre></td></tr></table></figure>\n<p>如果可以看到:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.35.207:apollo-adminservice:9101</span><br><span class=\"line\">192.168.35.207:apollo-configservice:9100</span><br></pre></td></tr></table></figure>\n<p>两个服务都为UP，正常！</p>\n<p>访问客户端：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://192.168.35.206:9102/</span><br></pre></td></tr></table></figure>\n<p>登录，默认用户名密码为：<code>apollo/admin</code>  </p>\n<p>新建项目测试。</p>\n<h1 id=\"三、使用配置中心配置信息\"><a href=\"#三、使用配置中心配置信息\" class=\"headerlink\" title=\"三、使用配置中心配置信息\"></a>三、使用配置中心配置信息</h1><ol>\n<li>maven引入上面步骤编译打包成功的<code>apollo-core</code>和<code>apollo-client</code>包：  </li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>apollo-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.11.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.ctrip.framework.apollo<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>apollo-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.11.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>创建app.properties  </li>\n</ol>\n<p>请确保classpath:/META-INF/app.properties文件存在，并且其中内容为自己的项目名称，而且要保持唯一：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.id=demo</span><br></pre></td></tr></table></figure></p>\n<ol start=\"3\">\n<li>环境变量配置  </li>\n</ol>\n<p><strong>本地开发</strong>  </p>\n<p>如果是本地开发，可以在开发工具添加Environment：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">env=DEV</span><br></pre></td></tr></table></figure>\n<p><strong>线上环境配置方式：</strong>  </p>\n<ul>\n<li>使用Java启动参数添加<code>java -Denv=YOUR-ENVIRONMENT -jar xxx.jar</code></li>\n<li>通过操作系统的System Environment</li>\n<li>通过配置文件：<br>对于Mac/Linux，文件位置为/opt/settings/server.properties<br>对于Windows，文件位置为C:\\opt\\settings\\server.properties  </li>\n</ul>\n<ol start=\"4\">\n<li>配置apollo-env.properties  </li>\n</ol>\n<p>在项目中引用<code>apollo-core</code>和<code>apollo-client</code>包，在<code>apollo-core</code>包中可以看到<code>apollo-env.properties</code>配置文件，默认配置为打包前配置的信息：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local.meta=http://localhost:8080</span><br><span class=\"line\">dev.meta=http://192.168.35.207:9100</span><br><span class=\"line\">fat.meta=http://192.168.35.208:9100</span><br><span class=\"line\">uat.meta=http://192.168.35.209:9100</span><br><span class=\"line\">lpt.meta=$&#123;lpt_meta&#125;</span><br><span class=\"line\">pro.meta=http://192.168.35.210:9100</span><br></pre></td></tr></table></figure>\n<p>如果需要修改或者覆盖的话，在项目的<code>resources</code>从上面复制一个<code>apollo-env.properties</code>文件，修改对应环境信息就可以了</p>\n<ol start=\"5\">\n<li>启用配置<br>在启动类添加<code>@EnableApolloConfig</code>注解即可：</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@EnableApolloConfig</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Application.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>测试  </li>\n</ol>\n<p>添加一个测试的类<code>DemoConfiguration</code>，当然配置中心要有下面配置的配置信息:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Configuration</span><br><span class=\"line\">@EnableAutoConfiguration</span><br><span class=\"line\">public class DemoConfiguration &#123;</span><br><span class=\"line\">    @Value(&quot;$&#123;demo&#125;&quot;)</span><br><span class=\"line\">    private String demo;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>完成！</p>\n<h1 id=\"四、部署方案\"><a href=\"#四、部署方案\" class=\"headerlink\" title=\"四、部署方案\"></a>四、部署方案</h1><p>这个图是计划部署的方案，并不是上面写的例子的方案</p>\n<p><img src=\"http://pa74vwr85.bkt.clouddn.com/Apollo%E5%88%86%E5%B8%83%E5%BC%8F%E9%83%A8%E7%BD%B2%E4%B8%AD%E5%BF%83.png\" alt=\"\"></p>"},{"title":"HttpUtil工具类","date":"2017-01-07T16:55:44.000Z","updated":"2020-03-11T10:48:16.860Z","_content":"HttpUtil工具类使用HttpClients\n<!-- more -->\n```\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\nimport java.security.GeneralSecurityException;\nimport java.security.cert.CertificateException;\nimport java.security.cert.X509Certificate;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport javax.net.ssl.HostnameVerifier;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLSession;\nimport org.apache.commons.io.IOUtils;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.config.RequestConfig;\nimport  org.apache.http.client.entity.UrlEncodedFormEntity;\nimport  org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.utils.HttpClientUtils;\nimport  org.apache.http.conn.ssl.SSLConnectionSocketFactory;\nimport org.apache.http.conn.ssl.TrustStrategy;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport  org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.ssl.SSLContextBuilder;\nimport org.apache.http.util.EntityUtils;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.yeahka.loan.yunxin.constant.YunXinConstant;\nimport com.yeahka.util.JsonUtil;\npublic class YunXinHttpUtil {\n     private static final Log log =  LogFactory.getLog(YunXinHttpUtil.class);\n     private static PoolingHttpClientConnectionManager  connMgr;\n     private static RequestConfig requestConfig;\n     private static final int MAX_TIMEOUT = 30000;\n     static {\n          // 设置连接池\n          connMgr = new  PoolingHttpClientConnectionManager();\n          // 设置连接池大小\n          connMgr.setMaxTotal(100);\n          connMgr.setDefaultMaxPerRoute(connMgr.getMaxTotal());\n          RequestConfig.Builder configBuilder =  RequestConfig.custom();\n          // 设置连接超时\n          configBuilder.setConnectTimeout(MAX_TIMEOUT);\n          // 设置读取超时\n          configBuilder.setSocketTimeout(MAX_TIMEOUT);\n          // 设置从连接池获取连接实例的超时\n          configBuilder.setConnectionRequestTimeout(MAX_TIMEOUT);\n          // 在提交请求之前 测试连接是否可用\n          //  configBuilder.setValidateAfterInactivity(true);\n          requestConfig = configBuilder.build();\n     }\n     /**\n      * 发送 GET 请求（HTTP/HTTPS），K-V形式\n      *\n      * @param url\n      * @param params\n      * @return\n      */\n     public static String doGet(String url, Map<String,  Object> params) {\n          String apiUrl = url;\n          CloseableHttpClient httpClient = null;\n          if(url.startsWith(\"https:\")){\n              httpClient = HttpClients.custom()\n                        .setSSLSocketFactory(createSSLConnSocketFactory())\n                        .setConnectionManager(connMgr)\n                        .setDefaultRequestConfig(requestConfig).build();\n          }else{\n              httpClient = HttpClients.createDefault();\n          }\n          StringBuffer param = new StringBuffer();\n          \n          int i = 0;\n          for (String key : params.keySet()) {\n              if (i == 0)\n                   param.append(\"?\");\n              else\n                   param.append(\"&\");\n               param.append(key).append(\"=\").append(params.get(key));\n              i++;\n          }\n          apiUrl += param;\n          String result = null;\n          \n          try {\n              HttpGet httpPost = new HttpGet(apiUrl);\n              HttpResponse response =  httpClient.execute(httpPost);\n              int statusCode =  response.getStatusLine().getStatusCode();\n              System.out.println(\"执行状态码 : \" +  statusCode);\n              HttpEntity entity = response.getEntity();\n              if (entity != null) {\n                   InputStream instream =  entity.getContent();\n                   result = IOUtils.toString(instream,  \"UTF-8\");\n              }\n          } catch (IOException e) {\n              e.printStackTrace();\n          } finally {\n              if (httpClient != null) {\n                   HttpClientUtils.closeQuietly(httpClient);\n              }\n          }\n          log.info(\"request to : {\"+apiUrl+\"} , param :  {\"+param.toString()+\"} , result : {\"+result+\"}\");\n          return result;\n     }\n     \n     /**\n      * 发送 POST 请求（HTTP/HTTPS），K-V形式\n      *\n      * @param url\n      *            API接口URL\n      * @param params\n      *            参数map\n      * @return\n      */\n     public static String doPost(String url, Map<String,  Object> params) {\n          CloseableHttpClient httpClient = null;\n          String httpStr = null;\n          HttpPost httpPost = null;\n          CloseableHttpResponse response = null;\n          if(url.startsWith(\"https:\")){\n              httpClient = HttpClients.custom()\n                        .setSSLSocketFactory(createSSLConnSocketFactory())\n                        .setConnectionManager(connMgr)\n                        .setDefaultRequestConfig(requestConfig).build();\n              httpPost = new HttpPost(url);\n          }else{\n              httpClient = HttpClients.createDefault();\n              httpPost = new HttpPost(url);\n          }\n          try {\n              httpPost.setConfig(requestConfig);\n              List<NameValuePair> pairList = new  ArrayList<NameValuePair>();\n              for (Map.Entry<String, Object> entry :  params.entrySet()) {\n                   NameValuePair pair = new  BasicNameValuePair(entry.getKey(),\n                             entry.getValue().toString());\n                   pairList.add(pair);\n              }\n              httpPost.setEntity(new  UrlEncodedFormEntity(pairList, Charset\n                        .forName(\"UTF-8\")));\n              response = httpClient.execute(httpPost);\n              System.out.println(response.toString());\n              HttpEntity entity = response.getEntity();\n              httpStr = EntityUtils.toString(entity,  \"UTF-8\");\n          } catch (IOException e) {\n              e.printStackTrace();\n          } finally {\n              if (response != null) {\n                   try {\n                        EntityUtils.consume(response.getEntity());\n                   } catch (IOException e) {\n                        e.printStackTrace();\n                   }\n              }\n          }\n          return httpStr;\n     }\n     /**\n      * 发送 POST 请求（HTTP/HTTPS），JSON形式\n      *\n      * @param url\n      * @param json\n      *            json对象\n      * @return\n      */\n     public static String doPost(String url,Object obj) {\n          CloseableHttpClient httpClient = null;\n          String httpStr = null;\n          HttpPost httpPost = null;\n          CloseableHttpResponse response = null;\n          if(url.startsWith(\"https:\")){\n              httpClient = HttpClients.custom()\n                        .setSSLSocketFactory(createSSLConnSocketFactory())\n                        .setConnectionManager(connMgr)\n                        .setDefaultRequestConfig(requestConfig).build();\n              httpPost = new HttpPost(url);\n          }else{\n              httpClient = HttpClients.createDefault();\n              httpPost = new HttpPost(url);\n          }\n          try {\n              String json = JsonUtil.obj2json(obj);\n              log.info(json);\n              ObjectMapper mapper = new ObjectMapper();\n              httpPost.setConfig(requestConfig);\n              httpPost.setHeader(\"Content-Type\",  \"application/json\");\n              httpPost.setHeader(\"MerId\",  YunXinConstant.merId);\n              httpPost.setHeader(\"SecretKey\",  YunXinConstant.secretKey);\n               httpPost.setHeader(\"SignedMsg\",getSignMsg(mapper.writeValueAsString(obj)));\n              StringEntity stringEntity = new  StringEntity(json,\"UTF-8\");// 解决中文乱码问题\n              stringEntity.setContentEncoding(\"UTF-8\");\n               stringEntity.setContentType(\"application/json\");\n              httpPost.setEntity(stringEntity);\n              response = httpClient.execute(httpPost);\n              HttpEntity entity = response.getEntity();\n              httpStr = EntityUtils.toString(entity,  \"UTF-8\");\n          } catch (IOException e) {\n              e.printStackTrace();\n          } finally {\n              if (response != null) {\n                   try {\n                        EntityUtils.consume(response.getEntity());\n                   } catch (IOException e) {\n                        e.printStackTrace();\n                   }\n              }\n          }\n          return httpStr;\n     }\n     private static String getSignMsg(String msg){\n          RsaSignUtils utl = new  RsaSignUtils(YunXinConstant.privateKeyPath,YunXinConstant.privateCertPassword);\n          return utl.generate(msg);\n     }\n     /**\n      * 创建SSL安全连接\n      *\n      * @return\n      */\n     private static SSLConnectionSocketFactory  createSSLConnSocketFactory() {\n          SSLConnectionSocketFactory sslsf = null;\n          try {\n              SSLContext sslContext = new  SSLContextBuilder().loadTrustMaterial(\n                        null, new TrustStrategy() {\n                             public boolean  isTrusted(X509Certificate[] chain,\n                                      String authType)  throws CertificateException {\n                                  return true;\n                             }\n                        }).build();\n              sslsf = new  SSLConnectionSocketFactory(sslContext,\n                        new HostnameVerifier() {\n                   public boolean verify(String hostname,\n                             SSLSession session) {\n                        // TODO Auto-generated method  stub\n                        return false;\n                   }\n              });\n          } catch (GeneralSecurityException e) {\n              e.printStackTrace();\n          }\n          return sslsf;\n     }\n}\n\n```","source":"_posts/utils/httpUtil.md","raw":"---\ntitle: HttpUtil工具类\ndate: 2017-01-07 24:55:44\nupdated: \ncategories: \n  - code工具\npermalink:\ntags: [HttpUtil,工具类]\n---\nHttpUtil工具类使用HttpClients\n<!-- more -->\n```\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.charset.Charset;\nimport java.security.GeneralSecurityException;\nimport java.security.cert.CertificateException;\nimport java.security.cert.X509Certificate;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Map;\nimport javax.net.ssl.HostnameVerifier;\nimport javax.net.ssl.SSLContext;\nimport javax.net.ssl.SSLSession;\nimport org.apache.commons.io.IOUtils;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.apache.http.HttpEntity;\nimport org.apache.http.HttpResponse;\nimport org.apache.http.NameValuePair;\nimport org.apache.http.client.config.RequestConfig;\nimport  org.apache.http.client.entity.UrlEncodedFormEntity;\nimport  org.apache.http.client.methods.CloseableHttpResponse;\nimport org.apache.http.client.methods.HttpGet;\nimport org.apache.http.client.methods.HttpPost;\nimport org.apache.http.client.utils.HttpClientUtils;\nimport  org.apache.http.conn.ssl.SSLConnectionSocketFactory;\nimport org.apache.http.conn.ssl.TrustStrategy;\nimport org.apache.http.entity.StringEntity;\nimport org.apache.http.impl.client.CloseableHttpClient;\nimport org.apache.http.impl.client.HttpClients;\nimport  org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\nimport org.apache.http.message.BasicNameValuePair;\nimport org.apache.http.ssl.SSLContextBuilder;\nimport org.apache.http.util.EntityUtils;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.yeahka.loan.yunxin.constant.YunXinConstant;\nimport com.yeahka.util.JsonUtil;\npublic class YunXinHttpUtil {\n     private static final Log log =  LogFactory.getLog(YunXinHttpUtil.class);\n     private static PoolingHttpClientConnectionManager  connMgr;\n     private static RequestConfig requestConfig;\n     private static final int MAX_TIMEOUT = 30000;\n     static {\n          // 设置连接池\n          connMgr = new  PoolingHttpClientConnectionManager();\n          // 设置连接池大小\n          connMgr.setMaxTotal(100);\n          connMgr.setDefaultMaxPerRoute(connMgr.getMaxTotal());\n          RequestConfig.Builder configBuilder =  RequestConfig.custom();\n          // 设置连接超时\n          configBuilder.setConnectTimeout(MAX_TIMEOUT);\n          // 设置读取超时\n          configBuilder.setSocketTimeout(MAX_TIMEOUT);\n          // 设置从连接池获取连接实例的超时\n          configBuilder.setConnectionRequestTimeout(MAX_TIMEOUT);\n          // 在提交请求之前 测试连接是否可用\n          //  configBuilder.setValidateAfterInactivity(true);\n          requestConfig = configBuilder.build();\n     }\n     /**\n      * 发送 GET 请求（HTTP/HTTPS），K-V形式\n      *\n      * @param url\n      * @param params\n      * @return\n      */\n     public static String doGet(String url, Map<String,  Object> params) {\n          String apiUrl = url;\n          CloseableHttpClient httpClient = null;\n          if(url.startsWith(\"https:\")){\n              httpClient = HttpClients.custom()\n                        .setSSLSocketFactory(createSSLConnSocketFactory())\n                        .setConnectionManager(connMgr)\n                        .setDefaultRequestConfig(requestConfig).build();\n          }else{\n              httpClient = HttpClients.createDefault();\n          }\n          StringBuffer param = new StringBuffer();\n          \n          int i = 0;\n          for (String key : params.keySet()) {\n              if (i == 0)\n                   param.append(\"?\");\n              else\n                   param.append(\"&\");\n               param.append(key).append(\"=\").append(params.get(key));\n              i++;\n          }\n          apiUrl += param;\n          String result = null;\n          \n          try {\n              HttpGet httpPost = new HttpGet(apiUrl);\n              HttpResponse response =  httpClient.execute(httpPost);\n              int statusCode =  response.getStatusLine().getStatusCode();\n              System.out.println(\"执行状态码 : \" +  statusCode);\n              HttpEntity entity = response.getEntity();\n              if (entity != null) {\n                   InputStream instream =  entity.getContent();\n                   result = IOUtils.toString(instream,  \"UTF-8\");\n              }\n          } catch (IOException e) {\n              e.printStackTrace();\n          } finally {\n              if (httpClient != null) {\n                   HttpClientUtils.closeQuietly(httpClient);\n              }\n          }\n          log.info(\"request to : {\"+apiUrl+\"} , param :  {\"+param.toString()+\"} , result : {\"+result+\"}\");\n          return result;\n     }\n     \n     /**\n      * 发送 POST 请求（HTTP/HTTPS），K-V形式\n      *\n      * @param url\n      *            API接口URL\n      * @param params\n      *            参数map\n      * @return\n      */\n     public static String doPost(String url, Map<String,  Object> params) {\n          CloseableHttpClient httpClient = null;\n          String httpStr = null;\n          HttpPost httpPost = null;\n          CloseableHttpResponse response = null;\n          if(url.startsWith(\"https:\")){\n              httpClient = HttpClients.custom()\n                        .setSSLSocketFactory(createSSLConnSocketFactory())\n                        .setConnectionManager(connMgr)\n                        .setDefaultRequestConfig(requestConfig).build();\n              httpPost = new HttpPost(url);\n          }else{\n              httpClient = HttpClients.createDefault();\n              httpPost = new HttpPost(url);\n          }\n          try {\n              httpPost.setConfig(requestConfig);\n              List<NameValuePair> pairList = new  ArrayList<NameValuePair>();\n              for (Map.Entry<String, Object> entry :  params.entrySet()) {\n                   NameValuePair pair = new  BasicNameValuePair(entry.getKey(),\n                             entry.getValue().toString());\n                   pairList.add(pair);\n              }\n              httpPost.setEntity(new  UrlEncodedFormEntity(pairList, Charset\n                        .forName(\"UTF-8\")));\n              response = httpClient.execute(httpPost);\n              System.out.println(response.toString());\n              HttpEntity entity = response.getEntity();\n              httpStr = EntityUtils.toString(entity,  \"UTF-8\");\n          } catch (IOException e) {\n              e.printStackTrace();\n          } finally {\n              if (response != null) {\n                   try {\n                        EntityUtils.consume(response.getEntity());\n                   } catch (IOException e) {\n                        e.printStackTrace();\n                   }\n              }\n          }\n          return httpStr;\n     }\n     /**\n      * 发送 POST 请求（HTTP/HTTPS），JSON形式\n      *\n      * @param url\n      * @param json\n      *            json对象\n      * @return\n      */\n     public static String doPost(String url,Object obj) {\n          CloseableHttpClient httpClient = null;\n          String httpStr = null;\n          HttpPost httpPost = null;\n          CloseableHttpResponse response = null;\n          if(url.startsWith(\"https:\")){\n              httpClient = HttpClients.custom()\n                        .setSSLSocketFactory(createSSLConnSocketFactory())\n                        .setConnectionManager(connMgr)\n                        .setDefaultRequestConfig(requestConfig).build();\n              httpPost = new HttpPost(url);\n          }else{\n              httpClient = HttpClients.createDefault();\n              httpPost = new HttpPost(url);\n          }\n          try {\n              String json = JsonUtil.obj2json(obj);\n              log.info(json);\n              ObjectMapper mapper = new ObjectMapper();\n              httpPost.setConfig(requestConfig);\n              httpPost.setHeader(\"Content-Type\",  \"application/json\");\n              httpPost.setHeader(\"MerId\",  YunXinConstant.merId);\n              httpPost.setHeader(\"SecretKey\",  YunXinConstant.secretKey);\n               httpPost.setHeader(\"SignedMsg\",getSignMsg(mapper.writeValueAsString(obj)));\n              StringEntity stringEntity = new  StringEntity(json,\"UTF-8\");// 解决中文乱码问题\n              stringEntity.setContentEncoding(\"UTF-8\");\n               stringEntity.setContentType(\"application/json\");\n              httpPost.setEntity(stringEntity);\n              response = httpClient.execute(httpPost);\n              HttpEntity entity = response.getEntity();\n              httpStr = EntityUtils.toString(entity,  \"UTF-8\");\n          } catch (IOException e) {\n              e.printStackTrace();\n          } finally {\n              if (response != null) {\n                   try {\n                        EntityUtils.consume(response.getEntity());\n                   } catch (IOException e) {\n                        e.printStackTrace();\n                   }\n              }\n          }\n          return httpStr;\n     }\n     private static String getSignMsg(String msg){\n          RsaSignUtils utl = new  RsaSignUtils(YunXinConstant.privateKeyPath,YunXinConstant.privateCertPassword);\n          return utl.generate(msg);\n     }\n     /**\n      * 创建SSL安全连接\n      *\n      * @return\n      */\n     private static SSLConnectionSocketFactory  createSSLConnSocketFactory() {\n          SSLConnectionSocketFactory sslsf = null;\n          try {\n              SSLContext sslContext = new  SSLContextBuilder().loadTrustMaterial(\n                        null, new TrustStrategy() {\n                             public boolean  isTrusted(X509Certificate[] chain,\n                                      String authType)  throws CertificateException {\n                                  return true;\n                             }\n                        }).build();\n              sslsf = new  SSLConnectionSocketFactory(sslContext,\n                        new HostnameVerifier() {\n                   public boolean verify(String hostname,\n                             SSLSession session) {\n                        // TODO Auto-generated method  stub\n                        return false;\n                   }\n              });\n          } catch (GeneralSecurityException e) {\n              e.printStackTrace();\n          }\n          return sslsf;\n     }\n}\n\n```","slug":"utils/httpUtil","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5ao002nw8mxf4ie06g1","content":"<p>HttpUtil工具类使用HttpClients<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.io.InputStream;</span><br><span class=\"line\">import java.nio.charset.Charset;</span><br><span class=\"line\">import java.security.GeneralSecurityException;</span><br><span class=\"line\">import java.security.cert.CertificateException;</span><br><span class=\"line\">import java.security.cert.X509Certificate;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\">import javax.net.ssl.HostnameVerifier;</span><br><span class=\"line\">import javax.net.ssl.SSLContext;</span><br><span class=\"line\">import javax.net.ssl.SSLSession;</span><br><span class=\"line\">import org.apache.commons.io.IOUtils;</span><br><span class=\"line\">import org.apache.commons.logging.Log;</span><br><span class=\"line\">import org.apache.commons.logging.LogFactory;</span><br><span class=\"line\">import org.apache.http.HttpEntity;</span><br><span class=\"line\">import org.apache.http.HttpResponse;</span><br><span class=\"line\">import org.apache.http.NameValuePair;</span><br><span class=\"line\">import org.apache.http.client.config.RequestConfig;</span><br><span class=\"line\">import  org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class=\"line\">import  org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class=\"line\">import org.apache.http.client.methods.HttpGet;</span><br><span class=\"line\">import org.apache.http.client.methods.HttpPost;</span><br><span class=\"line\">import org.apache.http.client.utils.HttpClientUtils;</span><br><span class=\"line\">import  org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class=\"line\">import org.apache.http.conn.ssl.TrustStrategy;</span><br><span class=\"line\">import org.apache.http.entity.StringEntity;</span><br><span class=\"line\">import org.apache.http.impl.client.CloseableHttpClient;</span><br><span class=\"line\">import org.apache.http.impl.client.HttpClients;</span><br><span class=\"line\">import  org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class=\"line\">import org.apache.http.message.BasicNameValuePair;</span><br><span class=\"line\">import org.apache.http.ssl.SSLContextBuilder;</span><br><span class=\"line\">import org.apache.http.util.EntityUtils;</span><br><span class=\"line\">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\">import com.yeahka.loan.yunxin.constant.YunXinConstant;</span><br><span class=\"line\">import com.yeahka.util.JsonUtil;</span><br><span class=\"line\">public class YunXinHttpUtil &#123;</span><br><span class=\"line\">     private static final Log log =  LogFactory.getLog(YunXinHttpUtil.class);</span><br><span class=\"line\">     private static PoolingHttpClientConnectionManager  connMgr;</span><br><span class=\"line\">     private static RequestConfig requestConfig;</span><br><span class=\"line\">     private static final int MAX_TIMEOUT = 30000;</span><br><span class=\"line\">     static &#123;</span><br><span class=\"line\">          // 设置连接池</span><br><span class=\"line\">          connMgr = new  PoolingHttpClientConnectionManager();</span><br><span class=\"line\">          // 设置连接池大小</span><br><span class=\"line\">          connMgr.setMaxTotal(100);</span><br><span class=\"line\">          connMgr.setDefaultMaxPerRoute(connMgr.getMaxTotal());</span><br><span class=\"line\">          RequestConfig.Builder configBuilder =  RequestConfig.custom();</span><br><span class=\"line\">          // 设置连接超时</span><br><span class=\"line\">          configBuilder.setConnectTimeout(MAX_TIMEOUT);</span><br><span class=\"line\">          // 设置读取超时</span><br><span class=\"line\">          configBuilder.setSocketTimeout(MAX_TIMEOUT);</span><br><span class=\"line\">          // 设置从连接池获取连接实例的超时</span><br><span class=\"line\">          configBuilder.setConnectionRequestTimeout(MAX_TIMEOUT);</span><br><span class=\"line\">          // 在提交请求之前 测试连接是否可用</span><br><span class=\"line\">          //  configBuilder.setValidateAfterInactivity(true);</span><br><span class=\"line\">          requestConfig = configBuilder.build();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 发送 GET 请求（HTTP/HTTPS），K-V形式</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @param url</span><br><span class=\"line\">      * @param params</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     public static String doGet(String url, Map&lt;String,  Object&gt; params) &#123;</span><br><span class=\"line\">          String apiUrl = url;</span><br><span class=\"line\">          CloseableHttpClient httpClient = null;</span><br><span class=\"line\">          if(url.startsWith(&quot;https:&quot;))&#123;</span><br><span class=\"line\">              httpClient = HttpClients.custom()</span><br><span class=\"line\">                        .setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class=\"line\">                        .setConnectionManager(connMgr)</span><br><span class=\"line\">                        .setDefaultRequestConfig(requestConfig).build();</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">              httpClient = HttpClients.createDefault();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          StringBuffer param = new StringBuffer();</span><br><span class=\"line\">          </span><br><span class=\"line\">          int i = 0;</span><br><span class=\"line\">          for (String key : params.keySet()) &#123;</span><br><span class=\"line\">              if (i == 0)</span><br><span class=\"line\">                   param.append(&quot;?&quot;);</span><br><span class=\"line\">              else</span><br><span class=\"line\">                   param.append(&quot;&amp;&quot;);</span><br><span class=\"line\">               param.append(key).append(&quot;=&quot;).append(params.get(key));</span><br><span class=\"line\">              i++;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          apiUrl += param;</span><br><span class=\"line\">          String result = null;</span><br><span class=\"line\">          </span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              HttpGet httpPost = new HttpGet(apiUrl);</span><br><span class=\"line\">              HttpResponse response =  httpClient.execute(httpPost);</span><br><span class=\"line\">              int statusCode =  response.getStatusLine().getStatusCode();</span><br><span class=\"line\">              System.out.println(&quot;执行状态码 : &quot; +  statusCode);</span><br><span class=\"line\">              HttpEntity entity = response.getEntity();</span><br><span class=\"line\">              if (entity != null) &#123;</span><br><span class=\"line\">                   InputStream instream =  entity.getContent();</span><br><span class=\"line\">                   result = IOUtils.toString(instream,  &quot;UTF-8&quot;);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125; catch (IOException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125; finally &#123;</span><br><span class=\"line\">              if (httpClient != null) &#123;</span><br><span class=\"line\">                   HttpClientUtils.closeQuietly(httpClient);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          log.info(&quot;request to : &#123;&quot;+apiUrl+&quot;&#125; , param :  &#123;&quot;+param.toString()+&quot;&#125; , result : &#123;&quot;+result+&quot;&#125;&quot;);</span><br><span class=\"line\">          return result;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 发送 POST 请求（HTTP/HTTPS），K-V形式</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @param url</span><br><span class=\"line\">      *            API接口URL</span><br><span class=\"line\">      * @param params</span><br><span class=\"line\">      *            参数map</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     public static String doPost(String url, Map&lt;String,  Object&gt; params) &#123;</span><br><span class=\"line\">          CloseableHttpClient httpClient = null;</span><br><span class=\"line\">          String httpStr = null;</span><br><span class=\"line\">          HttpPost httpPost = null;</span><br><span class=\"line\">          CloseableHttpResponse response = null;</span><br><span class=\"line\">          if(url.startsWith(&quot;https:&quot;))&#123;</span><br><span class=\"line\">              httpClient = HttpClients.custom()</span><br><span class=\"line\">                        .setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class=\"line\">                        .setConnectionManager(connMgr)</span><br><span class=\"line\">                        .setDefaultRequestConfig(requestConfig).build();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">              httpClient = HttpClients.createDefault();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              httpPost.setConfig(requestConfig);</span><br><span class=\"line\">              List&lt;NameValuePair&gt; pairList = new  ArrayList&lt;NameValuePair&gt;();</span><br><span class=\"line\">              for (Map.Entry&lt;String, Object&gt; entry :  params.entrySet()) &#123;</span><br><span class=\"line\">                   NameValuePair pair = new  BasicNameValuePair(entry.getKey(),</span><br><span class=\"line\">                             entry.getValue().toString());</span><br><span class=\"line\">                   pairList.add(pair);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              httpPost.setEntity(new  UrlEncodedFormEntity(pairList, Charset</span><br><span class=\"line\">                        .forName(&quot;UTF-8&quot;)));</span><br><span class=\"line\">              response = httpClient.execute(httpPost);</span><br><span class=\"line\">              System.out.println(response.toString());</span><br><span class=\"line\">              HttpEntity entity = response.getEntity();</span><br><span class=\"line\">              httpStr = EntityUtils.toString(entity,  &quot;UTF-8&quot;);</span><br><span class=\"line\">          &#125; catch (IOException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125; finally &#123;</span><br><span class=\"line\">              if (response != null) &#123;</span><br><span class=\"line\">                   try &#123;</span><br><span class=\"line\">                        EntityUtils.consume(response.getEntity());</span><br><span class=\"line\">                   &#125; catch (IOException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return httpStr;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 发送 POST 请求（HTTP/HTTPS），JSON形式</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @param url</span><br><span class=\"line\">      * @param json</span><br><span class=\"line\">      *            json对象</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     public static String doPost(String url,Object obj) &#123;</span><br><span class=\"line\">          CloseableHttpClient httpClient = null;</span><br><span class=\"line\">          String httpStr = null;</span><br><span class=\"line\">          HttpPost httpPost = null;</span><br><span class=\"line\">          CloseableHttpResponse response = null;</span><br><span class=\"line\">          if(url.startsWith(&quot;https:&quot;))&#123;</span><br><span class=\"line\">              httpClient = HttpClients.custom()</span><br><span class=\"line\">                        .setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class=\"line\">                        .setConnectionManager(connMgr)</span><br><span class=\"line\">                        .setDefaultRequestConfig(requestConfig).build();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">              httpClient = HttpClients.createDefault();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              String json = JsonUtil.obj2json(obj);</span><br><span class=\"line\">              log.info(json);</span><br><span class=\"line\">              ObjectMapper mapper = new ObjectMapper();</span><br><span class=\"line\">              httpPost.setConfig(requestConfig);</span><br><span class=\"line\">              httpPost.setHeader(&quot;Content-Type&quot;,  &quot;application/json&quot;);</span><br><span class=\"line\">              httpPost.setHeader(&quot;MerId&quot;,  YunXinConstant.merId);</span><br><span class=\"line\">              httpPost.setHeader(&quot;SecretKey&quot;,  YunXinConstant.secretKey);</span><br><span class=\"line\">               httpPost.setHeader(&quot;SignedMsg&quot;,getSignMsg(mapper.writeValueAsString(obj)));</span><br><span class=\"line\">              StringEntity stringEntity = new  StringEntity(json,&quot;UTF-8&quot;);// 解决中文乱码问题</span><br><span class=\"line\">              stringEntity.setContentEncoding(&quot;UTF-8&quot;);</span><br><span class=\"line\">               stringEntity.setContentType(&quot;application/json&quot;);</span><br><span class=\"line\">              httpPost.setEntity(stringEntity);</span><br><span class=\"line\">              response = httpClient.execute(httpPost);</span><br><span class=\"line\">              HttpEntity entity = response.getEntity();</span><br><span class=\"line\">              httpStr = EntityUtils.toString(entity,  &quot;UTF-8&quot;);</span><br><span class=\"line\">          &#125; catch (IOException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125; finally &#123;</span><br><span class=\"line\">              if (response != null) &#123;</span><br><span class=\"line\">                   try &#123;</span><br><span class=\"line\">                        EntityUtils.consume(response.getEntity());</span><br><span class=\"line\">                   &#125; catch (IOException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return httpStr;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     private static String getSignMsg(String msg)&#123;</span><br><span class=\"line\">          RsaSignUtils utl = new  RsaSignUtils(YunXinConstant.privateKeyPath,YunXinConstant.privateCertPassword);</span><br><span class=\"line\">          return utl.generate(msg);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 创建SSL安全连接</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     private static SSLConnectionSocketFactory  createSSLConnSocketFactory() &#123;</span><br><span class=\"line\">          SSLConnectionSocketFactory sslsf = null;</span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              SSLContext sslContext = new  SSLContextBuilder().loadTrustMaterial(</span><br><span class=\"line\">                        null, new TrustStrategy() &#123;</span><br><span class=\"line\">                             public boolean  isTrusted(X509Certificate[] chain,</span><br><span class=\"line\">                                      String authType)  throws CertificateException &#123;</span><br><span class=\"line\">                                  return true;</span><br><span class=\"line\">                             &#125;</span><br><span class=\"line\">                        &#125;).build();</span><br><span class=\"line\">              sslsf = new  SSLConnectionSocketFactory(sslContext,</span><br><span class=\"line\">                        new HostnameVerifier() &#123;</span><br><span class=\"line\">                   public boolean verify(String hostname,</span><br><span class=\"line\">                             SSLSession session) &#123;</span><br><span class=\"line\">                        // TODO Auto-generated method  stub</span><br><span class=\"line\">                        return false;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">          &#125; catch (GeneralSecurityException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return sslsf;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>HttpUtil工具类使用HttpClients<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.io.InputStream;</span><br><span class=\"line\">import java.nio.charset.Charset;</span><br><span class=\"line\">import java.security.GeneralSecurityException;</span><br><span class=\"line\">import java.security.cert.CertificateException;</span><br><span class=\"line\">import java.security.cert.X509Certificate;</span><br><span class=\"line\">import java.util.ArrayList;</span><br><span class=\"line\">import java.util.List;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\">import javax.net.ssl.HostnameVerifier;</span><br><span class=\"line\">import javax.net.ssl.SSLContext;</span><br><span class=\"line\">import javax.net.ssl.SSLSession;</span><br><span class=\"line\">import org.apache.commons.io.IOUtils;</span><br><span class=\"line\">import org.apache.commons.logging.Log;</span><br><span class=\"line\">import org.apache.commons.logging.LogFactory;</span><br><span class=\"line\">import org.apache.http.HttpEntity;</span><br><span class=\"line\">import org.apache.http.HttpResponse;</span><br><span class=\"line\">import org.apache.http.NameValuePair;</span><br><span class=\"line\">import org.apache.http.client.config.RequestConfig;</span><br><span class=\"line\">import  org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class=\"line\">import  org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class=\"line\">import org.apache.http.client.methods.HttpGet;</span><br><span class=\"line\">import org.apache.http.client.methods.HttpPost;</span><br><span class=\"line\">import org.apache.http.client.utils.HttpClientUtils;</span><br><span class=\"line\">import  org.apache.http.conn.ssl.SSLConnectionSocketFactory;</span><br><span class=\"line\">import org.apache.http.conn.ssl.TrustStrategy;</span><br><span class=\"line\">import org.apache.http.entity.StringEntity;</span><br><span class=\"line\">import org.apache.http.impl.client.CloseableHttpClient;</span><br><span class=\"line\">import org.apache.http.impl.client.HttpClients;</span><br><span class=\"line\">import  org.apache.http.impl.conn.PoolingHttpClientConnectionManager;</span><br><span class=\"line\">import org.apache.http.message.BasicNameValuePair;</span><br><span class=\"line\">import org.apache.http.ssl.SSLContextBuilder;</span><br><span class=\"line\">import org.apache.http.util.EntityUtils;</span><br><span class=\"line\">import com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class=\"line\">import com.yeahka.loan.yunxin.constant.YunXinConstant;</span><br><span class=\"line\">import com.yeahka.util.JsonUtil;</span><br><span class=\"line\">public class YunXinHttpUtil &#123;</span><br><span class=\"line\">     private static final Log log =  LogFactory.getLog(YunXinHttpUtil.class);</span><br><span class=\"line\">     private static PoolingHttpClientConnectionManager  connMgr;</span><br><span class=\"line\">     private static RequestConfig requestConfig;</span><br><span class=\"line\">     private static final int MAX_TIMEOUT = 30000;</span><br><span class=\"line\">     static &#123;</span><br><span class=\"line\">          // 设置连接池</span><br><span class=\"line\">          connMgr = new  PoolingHttpClientConnectionManager();</span><br><span class=\"line\">          // 设置连接池大小</span><br><span class=\"line\">          connMgr.setMaxTotal(100);</span><br><span class=\"line\">          connMgr.setDefaultMaxPerRoute(connMgr.getMaxTotal());</span><br><span class=\"line\">          RequestConfig.Builder configBuilder =  RequestConfig.custom();</span><br><span class=\"line\">          // 设置连接超时</span><br><span class=\"line\">          configBuilder.setConnectTimeout(MAX_TIMEOUT);</span><br><span class=\"line\">          // 设置读取超时</span><br><span class=\"line\">          configBuilder.setSocketTimeout(MAX_TIMEOUT);</span><br><span class=\"line\">          // 设置从连接池获取连接实例的超时</span><br><span class=\"line\">          configBuilder.setConnectionRequestTimeout(MAX_TIMEOUT);</span><br><span class=\"line\">          // 在提交请求之前 测试连接是否可用</span><br><span class=\"line\">          //  configBuilder.setValidateAfterInactivity(true);</span><br><span class=\"line\">          requestConfig = configBuilder.build();</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 发送 GET 请求（HTTP/HTTPS），K-V形式</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @param url</span><br><span class=\"line\">      * @param params</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     public static String doGet(String url, Map&lt;String,  Object&gt; params) &#123;</span><br><span class=\"line\">          String apiUrl = url;</span><br><span class=\"line\">          CloseableHttpClient httpClient = null;</span><br><span class=\"line\">          if(url.startsWith(&quot;https:&quot;))&#123;</span><br><span class=\"line\">              httpClient = HttpClients.custom()</span><br><span class=\"line\">                        .setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class=\"line\">                        .setConnectionManager(connMgr)</span><br><span class=\"line\">                        .setDefaultRequestConfig(requestConfig).build();</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">              httpClient = HttpClients.createDefault();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          StringBuffer param = new StringBuffer();</span><br><span class=\"line\">          </span><br><span class=\"line\">          int i = 0;</span><br><span class=\"line\">          for (String key : params.keySet()) &#123;</span><br><span class=\"line\">              if (i == 0)</span><br><span class=\"line\">                   param.append(&quot;?&quot;);</span><br><span class=\"line\">              else</span><br><span class=\"line\">                   param.append(&quot;&amp;&quot;);</span><br><span class=\"line\">               param.append(key).append(&quot;=&quot;).append(params.get(key));</span><br><span class=\"line\">              i++;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          apiUrl += param;</span><br><span class=\"line\">          String result = null;</span><br><span class=\"line\">          </span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              HttpGet httpPost = new HttpGet(apiUrl);</span><br><span class=\"line\">              HttpResponse response =  httpClient.execute(httpPost);</span><br><span class=\"line\">              int statusCode =  response.getStatusLine().getStatusCode();</span><br><span class=\"line\">              System.out.println(&quot;执行状态码 : &quot; +  statusCode);</span><br><span class=\"line\">              HttpEntity entity = response.getEntity();</span><br><span class=\"line\">              if (entity != null) &#123;</span><br><span class=\"line\">                   InputStream instream =  entity.getContent();</span><br><span class=\"line\">                   result = IOUtils.toString(instream,  &quot;UTF-8&quot;);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125; catch (IOException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125; finally &#123;</span><br><span class=\"line\">              if (httpClient != null) &#123;</span><br><span class=\"line\">                   HttpClientUtils.closeQuietly(httpClient);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          log.info(&quot;request to : &#123;&quot;+apiUrl+&quot;&#125; , param :  &#123;&quot;+param.toString()+&quot;&#125; , result : &#123;&quot;+result+&quot;&#125;&quot;);</span><br><span class=\"line\">          return result;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     </span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 发送 POST 请求（HTTP/HTTPS），K-V形式</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @param url</span><br><span class=\"line\">      *            API接口URL</span><br><span class=\"line\">      * @param params</span><br><span class=\"line\">      *            参数map</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     public static String doPost(String url, Map&lt;String,  Object&gt; params) &#123;</span><br><span class=\"line\">          CloseableHttpClient httpClient = null;</span><br><span class=\"line\">          String httpStr = null;</span><br><span class=\"line\">          HttpPost httpPost = null;</span><br><span class=\"line\">          CloseableHttpResponse response = null;</span><br><span class=\"line\">          if(url.startsWith(&quot;https:&quot;))&#123;</span><br><span class=\"line\">              httpClient = HttpClients.custom()</span><br><span class=\"line\">                        .setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class=\"line\">                        .setConnectionManager(connMgr)</span><br><span class=\"line\">                        .setDefaultRequestConfig(requestConfig).build();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">              httpClient = HttpClients.createDefault();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              httpPost.setConfig(requestConfig);</span><br><span class=\"line\">              List&lt;NameValuePair&gt; pairList = new  ArrayList&lt;NameValuePair&gt;();</span><br><span class=\"line\">              for (Map.Entry&lt;String, Object&gt; entry :  params.entrySet()) &#123;</span><br><span class=\"line\">                   NameValuePair pair = new  BasicNameValuePair(entry.getKey(),</span><br><span class=\"line\">                             entry.getValue().toString());</span><br><span class=\"line\">                   pairList.add(pair);</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">              httpPost.setEntity(new  UrlEncodedFormEntity(pairList, Charset</span><br><span class=\"line\">                        .forName(&quot;UTF-8&quot;)));</span><br><span class=\"line\">              response = httpClient.execute(httpPost);</span><br><span class=\"line\">              System.out.println(response.toString());</span><br><span class=\"line\">              HttpEntity entity = response.getEntity();</span><br><span class=\"line\">              httpStr = EntityUtils.toString(entity,  &quot;UTF-8&quot;);</span><br><span class=\"line\">          &#125; catch (IOException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125; finally &#123;</span><br><span class=\"line\">              if (response != null) &#123;</span><br><span class=\"line\">                   try &#123;</span><br><span class=\"line\">                        EntityUtils.consume(response.getEntity());</span><br><span class=\"line\">                   &#125; catch (IOException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return httpStr;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 发送 POST 请求（HTTP/HTTPS），JSON形式</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @param url</span><br><span class=\"line\">      * @param json</span><br><span class=\"line\">      *            json对象</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     public static String doPost(String url,Object obj) &#123;</span><br><span class=\"line\">          CloseableHttpClient httpClient = null;</span><br><span class=\"line\">          String httpStr = null;</span><br><span class=\"line\">          HttpPost httpPost = null;</span><br><span class=\"line\">          CloseableHttpResponse response = null;</span><br><span class=\"line\">          if(url.startsWith(&quot;https:&quot;))&#123;</span><br><span class=\"line\">              httpClient = HttpClients.custom()</span><br><span class=\"line\">                        .setSSLSocketFactory(createSSLConnSocketFactory())</span><br><span class=\"line\">                        .setConnectionManager(connMgr)</span><br><span class=\"line\">                        .setDefaultRequestConfig(requestConfig).build();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;else&#123;</span><br><span class=\"line\">              httpClient = HttpClients.createDefault();</span><br><span class=\"line\">              httpPost = new HttpPost(url);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              String json = JsonUtil.obj2json(obj);</span><br><span class=\"line\">              log.info(json);</span><br><span class=\"line\">              ObjectMapper mapper = new ObjectMapper();</span><br><span class=\"line\">              httpPost.setConfig(requestConfig);</span><br><span class=\"line\">              httpPost.setHeader(&quot;Content-Type&quot;,  &quot;application/json&quot;);</span><br><span class=\"line\">              httpPost.setHeader(&quot;MerId&quot;,  YunXinConstant.merId);</span><br><span class=\"line\">              httpPost.setHeader(&quot;SecretKey&quot;,  YunXinConstant.secretKey);</span><br><span class=\"line\">               httpPost.setHeader(&quot;SignedMsg&quot;,getSignMsg(mapper.writeValueAsString(obj)));</span><br><span class=\"line\">              StringEntity stringEntity = new  StringEntity(json,&quot;UTF-8&quot;);// 解决中文乱码问题</span><br><span class=\"line\">              stringEntity.setContentEncoding(&quot;UTF-8&quot;);</span><br><span class=\"line\">               stringEntity.setContentType(&quot;application/json&quot;);</span><br><span class=\"line\">              httpPost.setEntity(stringEntity);</span><br><span class=\"line\">              response = httpClient.execute(httpPost);</span><br><span class=\"line\">              HttpEntity entity = response.getEntity();</span><br><span class=\"line\">              httpStr = EntityUtils.toString(entity,  &quot;UTF-8&quot;);</span><br><span class=\"line\">          &#125; catch (IOException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125; finally &#123;</span><br><span class=\"line\">              if (response != null) &#123;</span><br><span class=\"line\">                   try &#123;</span><br><span class=\"line\">                        EntityUtils.consume(response.getEntity());</span><br><span class=\"line\">                   &#125; catch (IOException e) &#123;</span><br><span class=\"line\">                        e.printStackTrace();</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return httpStr;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     private static String getSignMsg(String msg)&#123;</span><br><span class=\"line\">          RsaSignUtils utl = new  RsaSignUtils(YunXinConstant.privateKeyPath,YunXinConstant.privateCertPassword);</span><br><span class=\"line\">          return utl.generate(msg);</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     /**</span><br><span class=\"line\">      * 创建SSL安全连接</span><br><span class=\"line\">      *</span><br><span class=\"line\">      * @return</span><br><span class=\"line\">      */</span><br><span class=\"line\">     private static SSLConnectionSocketFactory  createSSLConnSocketFactory() &#123;</span><br><span class=\"line\">          SSLConnectionSocketFactory sslsf = null;</span><br><span class=\"line\">          try &#123;</span><br><span class=\"line\">              SSLContext sslContext = new  SSLContextBuilder().loadTrustMaterial(</span><br><span class=\"line\">                        null, new TrustStrategy() &#123;</span><br><span class=\"line\">                             public boolean  isTrusted(X509Certificate[] chain,</span><br><span class=\"line\">                                      String authType)  throws CertificateException &#123;</span><br><span class=\"line\">                                  return true;</span><br><span class=\"line\">                             &#125;</span><br><span class=\"line\">                        &#125;).build();</span><br><span class=\"line\">              sslsf = new  SSLConnectionSocketFactory(sslContext,</span><br><span class=\"line\">                        new HostnameVerifier() &#123;</span><br><span class=\"line\">                   public boolean verify(String hostname,</span><br><span class=\"line\">                             SSLSession session) &#123;</span><br><span class=\"line\">                        // TODO Auto-generated method  stub</span><br><span class=\"line\">                        return false;</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">              &#125;);</span><br><span class=\"line\">          &#125; catch (GeneralSecurityException e) &#123;</span><br><span class=\"line\">              e.printStackTrace();</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          return sslsf;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"如何上传自己的jar包到maven公共远程中央仓库","date":"2018-03-16T06:48:41.000Z","_content":"\n本文是以上传`https://oss.sonatype.org/`maven中央仓库为例\n\n# 注册账号\n如果有账号可忽略该步骤，注册地址：`https://issues.sonatype.org`，这里的账号和密码一定要记住。\n\n# 创建工单\n**在首页最上面导航中点击`Create`创建工单：**\n<!--more-->\n![](http://ofbphtmkb.bkt.clouddn.com/201805/qqjie-tu-20180516105345.png)\n\n**填写工单资料：**\n\n![](http://ofbphtmkb.bkt.clouddn.com/201805/2.png)\n\n- Project：选择开源项目\n- Issue Type：选择创建新项目\n- Summary：随意命名\n- Group Id：唯一标识，我是用`com.qianxunclub`,因为这个是我自己的域名，管理员会问qianxunclub.com这个是不是自己的网站，回答是就好了，如果使用`com.github.xxxxx`之类的，会方便一些。\n- Project URL：项目源码地址，如`https://gitee.com/qianxunclub/qianxunclub-maven-plugin`\n- SCM url：项目管理地址，如：https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git\n\n**发布**\n\n然后点击发布会成功创建一个工单，工单状态为：open\n\n# 查看工单状态\n\n**点击上方导航栏`Issue`选择自己的工单：**\n\n![](http://ofbphtmkb.bkt.clouddn.com/201805/3.png)\n\n等到审核状态为`RESOLVED `，恭喜你，审核已经成功，第一次审核要一天左右 ，因为时差原因，他们工作时间是我们的晚上，之后在创建工单如果GroupId 满足基本要求基本就是秒过。\n\n![](http://ofbphtmkb.bkt.clouddn.com/201805/4.png)\n\n# 上传jar包到maven中央仓库\n\n**配置maven到`settings.xml`文件，添加以下内容：**\n\n```\n<servers> \n    <server> \n        <id>snapshots</id> \n        <username>https://issues.sonatype.org的注册账号</username> \n        <password>https://issues.sonatype.org的注册密码</password> \n    </server>\n</servers>\n```\n> 这里注意以下，如果使用特殊符号，是需要转义的，例如：`pwd&`，密码要填写成`pwd&amp;`\n> \n**在自己的项目中修改`pom.xml`，添加以下内容：**\n\n\n```\n<distributionManagement>\n    <repository>\n        <id>snapshots</id>\n        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </repository>\n    <snapshotRepository>\n        <id>snapshots</id>\n        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </snapshotRepository>\n</distributionManagement>\n```\n\n**到这里就配置完成了，接下来开始发布试试了：**\n\n```\nmvn clean package deploy\n```\n\n出现`success`字样，代表已经成功，可以在`https://oss.sonatype.org/content/groups/public`找到自己的jar包了。","source":"_posts/java/maven/ru-he-shang-chuan-zi-ji-de-jarbao-dao-mavengong-gong-yuan-cheng-zhong-yang-cang-ku.md","raw":"---\ntitle: 如何上传自己的jar包到maven公共远程中央仓库\ndate: 2018-03-16 14:48:41\ntags: [Java,Maven]\ncategories: \n  - Java\n  - Maven\n---\n\n本文是以上传`https://oss.sonatype.org/`maven中央仓库为例\n\n# 注册账号\n如果有账号可忽略该步骤，注册地址：`https://issues.sonatype.org`，这里的账号和密码一定要记住。\n\n# 创建工单\n**在首页最上面导航中点击`Create`创建工单：**\n<!--more-->\n![](http://ofbphtmkb.bkt.clouddn.com/201805/qqjie-tu-20180516105345.png)\n\n**填写工单资料：**\n\n![](http://ofbphtmkb.bkt.clouddn.com/201805/2.png)\n\n- Project：选择开源项目\n- Issue Type：选择创建新项目\n- Summary：随意命名\n- Group Id：唯一标识，我是用`com.qianxunclub`,因为这个是我自己的域名，管理员会问qianxunclub.com这个是不是自己的网站，回答是就好了，如果使用`com.github.xxxxx`之类的，会方便一些。\n- Project URL：项目源码地址，如`https://gitee.com/qianxunclub/qianxunclub-maven-plugin`\n- SCM url：项目管理地址，如：https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git\n\n**发布**\n\n然后点击发布会成功创建一个工单，工单状态为：open\n\n# 查看工单状态\n\n**点击上方导航栏`Issue`选择自己的工单：**\n\n![](http://ofbphtmkb.bkt.clouddn.com/201805/3.png)\n\n等到审核状态为`RESOLVED `，恭喜你，审核已经成功，第一次审核要一天左右 ，因为时差原因，他们工作时间是我们的晚上，之后在创建工单如果GroupId 满足基本要求基本就是秒过。\n\n![](http://ofbphtmkb.bkt.clouddn.com/201805/4.png)\n\n# 上传jar包到maven中央仓库\n\n**配置maven到`settings.xml`文件，添加以下内容：**\n\n```\n<servers> \n    <server> \n        <id>snapshots</id> \n        <username>https://issues.sonatype.org的注册账号</username> \n        <password>https://issues.sonatype.org的注册密码</password> \n    </server>\n</servers>\n```\n> 这里注意以下，如果使用特殊符号，是需要转义的，例如：`pwd&`，密码要填写成`pwd&amp;`\n> \n**在自己的项目中修改`pom.xml`，添加以下内容：**\n\n\n```\n<distributionManagement>\n    <repository>\n        <id>snapshots</id>\n        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </repository>\n    <snapshotRepository>\n        <id>snapshots</id>\n        <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </snapshotRepository>\n</distributionManagement>\n```\n\n**到这里就配置完成了，接下来开始发布试试了：**\n\n```\nmvn clean package deploy\n```\n\n出现`success`字样，代表已经成功，可以在`https://oss.sonatype.org/content/groups/public`找到自己的jar包了。","slug":"java/maven/ru-he-shang-chuan-zi-ji-de-jarbao-dao-mavengong-gong-yuan-cheng-zhong-yang-cang-ku","published":1,"updated":"2020-03-11T10:48:16.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5b00034w8mxgdxerzqn","content":"<p>本文是以上传<code>https://oss.sonatype.org/</code>maven中央仓库为例</p>\n<h1 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h1><p>如果有账号可忽略该步骤，注册地址：<code>https://issues.sonatype.org</code>，这里的账号和密码一定要记住。</p>\n<h1 id=\"创建工单\"><a href=\"#创建工单\" class=\"headerlink\" title=\"创建工单\"></a>创建工单</h1><p><strong>在首页最上面导航中点击<code>Create</code>创建工单：</strong><br><a id=\"more\"></a><br><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/qqjie-tu-20180516105345.png\" alt=\"\"></p>\n<p><strong>填写工单资料：</strong></p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/2.png\" alt=\"\"></p>\n<ul>\n<li>Project：选择开源项目</li>\n<li>Issue Type：选择创建新项目</li>\n<li>Summary：随意命名</li>\n<li>Group Id：唯一标识，我是用<code>com.qianxunclub</code>,因为这个是我自己的域名，管理员会问qianxunclub.com这个是不是自己的网站，回答是就好了，如果使用<code>com.github.xxxxx</code>之类的，会方便一些。</li>\n<li>Project URL：项目源码地址，如<code>https://gitee.com/qianxunclub/qianxunclub-maven-plugin</code></li>\n<li>SCM url：项目管理地址，如：<a href=\"https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git</a></li>\n</ul>\n<p><strong>发布</strong></p>\n<p>然后点击发布会成功创建一个工单，工单状态为：open</p>\n<h1 id=\"查看工单状态\"><a href=\"#查看工单状态\" class=\"headerlink\" title=\"查看工单状态\"></a>查看工单状态</h1><p><strong>点击上方导航栏<code>Issue</code>选择自己的工单：</strong></p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/3.png\" alt=\"\"></p>\n<p>等到审核状态为<code>RESOLVED</code>，恭喜你，审核已经成功，第一次审核要一天左右 ，因为时差原因，他们工作时间是我们的晚上，之后在创建工单如果GroupId 满足基本要求基本就是秒过。</p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/4.png\" alt=\"\"></p>\n<h1 id=\"上传jar包到maven中央仓库\"><a href=\"#上传jar包到maven中央仓库\" class=\"headerlink\" title=\"上传jar包到maven中央仓库\"></a>上传jar包到maven中央仓库</h1><p><strong>配置maven到<code>settings.xml</code>文件，添加以下内容：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;servers&gt; </span><br><span class=\"line\">    &lt;server&gt; </span><br><span class=\"line\">        &lt;id&gt;snapshots&lt;/id&gt; </span><br><span class=\"line\">        &lt;username&gt;https://issues.sonatype.org的注册账号&lt;/username&gt; </span><br><span class=\"line\">        &lt;password&gt;https://issues.sonatype.org的注册密码&lt;/password&gt; </span><br><span class=\"line\">    &lt;/server&gt;</span><br><span class=\"line\">&lt;/servers&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里注意以下，如果使用特殊符号，是需要转义的，例如：<code>pwd&amp;</code>，密码要填写成<code>pwd&amp;amp;</code></p>\n</blockquote>\n<p><strong>在自己的项目中修改<code>pom.xml</code>，添加以下内容：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;distributionManagement&gt;</span><br><span class=\"line\">    &lt;repository&gt;</span><br><span class=\"line\">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class=\"line\">        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;</span><br><span class=\"line\">    &lt;/repository&gt;</span><br><span class=\"line\">    &lt;snapshotRepository&gt;</span><br><span class=\"line\">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class=\"line\">        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;</span><br><span class=\"line\">    &lt;/snapshotRepository&gt;</span><br><span class=\"line\">&lt;/distributionManagement&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>到这里就配置完成了，接下来开始发布试试了：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package deploy</span><br></pre></td></tr></table></figure>\n<p>出现<code>success</code>字样，代表已经成功，可以在<code>https://oss.sonatype.org/content/groups/public</code>找到自己的jar包了。</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>本文是以上传<code>https://oss.sonatype.org/</code>maven中央仓库为例</p>\n<h1 id=\"注册账号\"><a href=\"#注册账号\" class=\"headerlink\" title=\"注册账号\"></a>注册账号</h1><p>如果有账号可忽略该步骤，注册地址：<code>https://issues.sonatype.org</code>，这里的账号和密码一定要记住。</p>\n<h1 id=\"创建工单\"><a href=\"#创建工单\" class=\"headerlink\" title=\"创建工单\"></a>创建工单</h1><p><strong>在首页最上面导航中点击<code>Create</code>创建工单：</strong><br>","more":"<br><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/qqjie-tu-20180516105345.png\" alt=\"\"></p>\n<p><strong>填写工单资料：</strong></p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/2.png\" alt=\"\"></p>\n<ul>\n<li>Project：选择开源项目</li>\n<li>Issue Type：选择创建新项目</li>\n<li>Summary：随意命名</li>\n<li>Group Id：唯一标识，我是用<code>com.qianxunclub</code>,因为这个是我自己的域名，管理员会问qianxunclub.com这个是不是自己的网站，回答是就好了，如果使用<code>com.github.xxxxx</code>之类的，会方便一些。</li>\n<li>Project URL：项目源码地址，如<code>https://gitee.com/qianxunclub/qianxunclub-maven-plugin</code></li>\n<li>SCM url：项目管理地址，如：<a href=\"https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git</a></li>\n</ul>\n<p><strong>发布</strong></p>\n<p>然后点击发布会成功创建一个工单，工单状态为：open</p>\n<h1 id=\"查看工单状态\"><a href=\"#查看工单状态\" class=\"headerlink\" title=\"查看工单状态\"></a>查看工单状态</h1><p><strong>点击上方导航栏<code>Issue</code>选择自己的工单：</strong></p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/3.png\" alt=\"\"></p>\n<p>等到审核状态为<code>RESOLVED</code>，恭喜你，审核已经成功，第一次审核要一天左右 ，因为时差原因，他们工作时间是我们的晚上，之后在创建工单如果GroupId 满足基本要求基本就是秒过。</p>\n<p><img src=\"http://ofbphtmkb.bkt.clouddn.com/201805/4.png\" alt=\"\"></p>\n<h1 id=\"上传jar包到maven中央仓库\"><a href=\"#上传jar包到maven中央仓库\" class=\"headerlink\" title=\"上传jar包到maven中央仓库\"></a>上传jar包到maven中央仓库</h1><p><strong>配置maven到<code>settings.xml</code>文件，添加以下内容：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;servers&gt; </span><br><span class=\"line\">    &lt;server&gt; </span><br><span class=\"line\">        &lt;id&gt;snapshots&lt;/id&gt; </span><br><span class=\"line\">        &lt;username&gt;https://issues.sonatype.org的注册账号&lt;/username&gt; </span><br><span class=\"line\">        &lt;password&gt;https://issues.sonatype.org的注册密码&lt;/password&gt; </span><br><span class=\"line\">    &lt;/server&gt;</span><br><span class=\"line\">&lt;/servers&gt;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>这里注意以下，如果使用特殊符号，是需要转义的，例如：<code>pwd&amp;</code>，密码要填写成<code>pwd&amp;amp;</code></p>\n</blockquote>\n<p><strong>在自己的项目中修改<code>pom.xml</code>，添加以下内容：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;distributionManagement&gt;</span><br><span class=\"line\">    &lt;repository&gt;</span><br><span class=\"line\">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class=\"line\">        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;</span><br><span class=\"line\">    &lt;/repository&gt;</span><br><span class=\"line\">    &lt;snapshotRepository&gt;</span><br><span class=\"line\">        &lt;id&gt;snapshots&lt;/id&gt;</span><br><span class=\"line\">        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;</span><br><span class=\"line\">    &lt;/snapshotRepository&gt;</span><br><span class=\"line\">&lt;/distributionManagement&gt;</span><br></pre></td></tr></table></figure>\n<p><strong>到这里就配置完成了，接下来开始发布试试了：</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package deploy</span><br></pre></td></tr></table></figure>\n<p>出现<code>success</code>字样，代表已经成功，可以在<code>https://oss.sonatype.org/content/groups/public</code>找到自己的jar包了。</p>"},{"title":"apidoc的maven插件，自动生成apidoc.json","date":"2018-05-15T18:41:37.000Z","_content":"\n\n插件是用apidoc插件生成文档的，具体使用方式可查看官网：http://apidocjs.com/  \n该插件不会直接生成APIDOC文档，只会自动生成apidoc.json文件，需要执行`apidoc`命令才可以生成  \napidoc.json文件会生成在项目根目录apidoc文件夹下\n<!--more-->\n# 下载依赖包\n可配置MAVEN仓库`https://oss.sonatype.org/content/groups/public`\n或者\n下载源码包进行编译打包:https://gitee.com/qianxunclub/qianxunclub-maven-plugin\n```\ngit clone https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git\n```\n```\ncd qianxunclub-maven-plugin\n```\n```\nmvn clean install\n```\n\n\n# 编辑pom.xml，引入maven plugin\n在项目的pom文件中引入以下：\n```\n<plugin>\n\t<groupId>com.qianxunclub</groupId>\n\t<artifactId>qianxunclub-plugin-apidoc</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<executions>\n\t\t<execution>\n\t\t\t<goals>\n\t\t\t\t<goal>apidoc</goal>\n\t\t\t</goals>\n\t\t</execution>\n\t</executions>\n</plugin>\n```\n\n在`properties`定义API的生成规范：\n```\n<properties>\n\t<apidoc.skip>false/</apidoc.skip>\n\t<apidoc.gen>false</apidoc.gen>\n\t<apidoc.url>http://ip:port/</apidoc.url>\n\t<apidoc.sampleUrl>http://ip:port/</apidoc.sampleUrl>\n</properties>\n```\napidoc.skip：编译代码是否跳过生成apidoc.json  \napidoc.gen：是否覆盖更新apidoc.json  \napidoc.url：实例接口前缀  \napidoc.sampleUrl：生成测试方法的请求地址  \n\n# 开始生成\n执行命令：\n```\nmvn clean package\n```\n可以添加以下参数：\n```\nmvn clean package -Dapidoc.skip=true\n```\n\n-Dapidoc.skip=true：编译代码是否跳过生成apidoc.json  \n-Dapidoc.gen=true：是否覆盖更新apidoc.json  \n-Dapidoc.url=xxx：实例接口前缀  \n-Dapidoc.sampleUrl=xxx：生成测试方法的请求地址  \n\n如果出现以下字样，说明生成完成：\n```\napidoc.json完成\n```\n\n# 生成api文档\n在项目跟目录执行：\n```\napidoc -i apidoc/ -o API文档存放目录/\n```\n\n打开API文档存放目录中的`index.html`即可查看文档。","source":"_posts/java/maven/apidocde-mavencha-jian-zi-dong-sheng-cheng-apidoc-json.md","raw":"---\ntitle: apidoc的maven插件，自动生成apidoc.json\ndate: 2018-05-16 02:41:37\ntags: [Java,Maven]\ncategories: \n  - Java\n  - Maven\n---\n\n\n插件是用apidoc插件生成文档的，具体使用方式可查看官网：http://apidocjs.com/  \n该插件不会直接生成APIDOC文档，只会自动生成apidoc.json文件，需要执行`apidoc`命令才可以生成  \napidoc.json文件会生成在项目根目录apidoc文件夹下\n<!--more-->\n# 下载依赖包\n可配置MAVEN仓库`https://oss.sonatype.org/content/groups/public`\n或者\n下载源码包进行编译打包:https://gitee.com/qianxunclub/qianxunclub-maven-plugin\n```\ngit clone https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git\n```\n```\ncd qianxunclub-maven-plugin\n```\n```\nmvn clean install\n```\n\n\n# 编辑pom.xml，引入maven plugin\n在项目的pom文件中引入以下：\n```\n<plugin>\n\t<groupId>com.qianxunclub</groupId>\n\t<artifactId>qianxunclub-plugin-apidoc</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<executions>\n\t\t<execution>\n\t\t\t<goals>\n\t\t\t\t<goal>apidoc</goal>\n\t\t\t</goals>\n\t\t</execution>\n\t</executions>\n</plugin>\n```\n\n在`properties`定义API的生成规范：\n```\n<properties>\n\t<apidoc.skip>false/</apidoc.skip>\n\t<apidoc.gen>false</apidoc.gen>\n\t<apidoc.url>http://ip:port/</apidoc.url>\n\t<apidoc.sampleUrl>http://ip:port/</apidoc.sampleUrl>\n</properties>\n```\napidoc.skip：编译代码是否跳过生成apidoc.json  \napidoc.gen：是否覆盖更新apidoc.json  \napidoc.url：实例接口前缀  \napidoc.sampleUrl：生成测试方法的请求地址  \n\n# 开始生成\n执行命令：\n```\nmvn clean package\n```\n可以添加以下参数：\n```\nmvn clean package -Dapidoc.skip=true\n```\n\n-Dapidoc.skip=true：编译代码是否跳过生成apidoc.json  \n-Dapidoc.gen=true：是否覆盖更新apidoc.json  \n-Dapidoc.url=xxx：实例接口前缀  \n-Dapidoc.sampleUrl=xxx：生成测试方法的请求地址  \n\n如果出现以下字样，说明生成完成：\n```\napidoc.json完成\n```\n\n# 生成api文档\n在项目跟目录执行：\n```\napidoc -i apidoc/ -o API文档存放目录/\n```\n\n打开API文档存放目录中的`index.html`即可查看文档。","slug":"java/maven/apidocde-mavencha-jian-zi-dong-sheng-cheng-apidoc-json","published":1,"updated":"2020-03-11T10:48:16.852Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5b10035w8mxjjyb8dui","content":"<p>插件是用apidoc插件生成文档的，具体使用方式可查看官网：<a href=\"http://apidocjs.com/\" target=\"_blank\" rel=\"noopener\">http://apidocjs.com/</a><br>该插件不会直接生成APIDOC文档，只会自动生成apidoc.json文件，需要执行<code>apidoc</code>命令才可以生成<br>apidoc.json文件会生成在项目根目录apidoc文件夹下<br><a id=\"more\"></a></p>\n<h1 id=\"下载依赖包\"><a href=\"#下载依赖包\" class=\"headerlink\" title=\"下载依赖包\"></a>下载依赖包</h1><p>可配置MAVEN仓库<code>https://oss.sonatype.org/content/groups/public</code><br>或者<br>下载源码包进行编译打包:<a href=\"https://gitee.com/qianxunclub/qianxunclub-maven-plugin\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-maven-plugin</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd qianxunclub-maven-plugin</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑pom-xml，引入maven-plugin\"><a href=\"#编辑pom-xml，引入maven-plugin\" class=\"headerlink\" title=\"编辑pom.xml，引入maven plugin\"></a>编辑pom.xml，引入maven plugin</h1><p>在项目的pom文件中引入以下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">\t&lt;groupId&gt;com.qianxunclub&lt;/groupId&gt;</span><br><span class=\"line\">\t&lt;artifactId&gt;qianxunclub-plugin-apidoc&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">\t&lt;executions&gt;</span><br><span class=\"line\">\t\t&lt;execution&gt;</span><br><span class=\"line\">\t\t\t&lt;goals&gt;</span><br><span class=\"line\">\t\t\t\t&lt;goal&gt;apidoc&lt;/goal&gt;</span><br><span class=\"line\">\t\t\t&lt;/goals&gt;</span><br><span class=\"line\">\t\t&lt;/execution&gt;</span><br><span class=\"line\">\t&lt;/executions&gt;</span><br><span class=\"line\">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在<code>properties</code>定义API的生成规范：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">\t&lt;apidoc.skip&gt;false/&lt;/apidoc.skip&gt;</span><br><span class=\"line\">\t&lt;apidoc.gen&gt;false&lt;/apidoc.gen&gt;</span><br><span class=\"line\">\t&lt;apidoc.url&gt;http://ip:port/&lt;/apidoc.url&gt;</span><br><span class=\"line\">\t&lt;apidoc.sampleUrl&gt;http://ip:port/&lt;/apidoc.sampleUrl&gt;</span><br><span class=\"line\">&lt;/properties&gt;</span><br></pre></td></tr></table></figure></p>\n<p>apidoc.skip：编译代码是否跳过生成apidoc.json<br>apidoc.gen：是否覆盖更新apidoc.json<br>apidoc.url：实例接口前缀<br>apidoc.sampleUrl：生成测试方法的请求地址  </p>\n<h1 id=\"开始生成\"><a href=\"#开始生成\" class=\"headerlink\" title=\"开始生成\"></a>开始生成</h1><p>执行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package</span><br></pre></td></tr></table></figure></p>\n<p>可以添加以下参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package -Dapidoc.skip=true</span><br></pre></td></tr></table></figure></p>\n<p>-Dapidoc.skip=true：编译代码是否跳过生成apidoc.json<br>-Dapidoc.gen=true：是否覆盖更新apidoc.json<br>-Dapidoc.url=xxx：实例接口前缀<br>-Dapidoc.sampleUrl=xxx：生成测试方法的请求地址  </p>\n<p>如果出现以下字样，说明生成完成：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apidoc.json完成</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"生成api文档\"><a href=\"#生成api文档\" class=\"headerlink\" title=\"生成api文档\"></a>生成api文档</h1><p>在项目跟目录执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apidoc -i apidoc/ -o API文档存放目录/</span><br></pre></td></tr></table></figure></p>\n<p>打开API文档存放目录中的<code>index.html</code>即可查看文档。</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<p>插件是用apidoc插件生成文档的，具体使用方式可查看官网：<a href=\"http://apidocjs.com/\" target=\"_blank\" rel=\"noopener\">http://apidocjs.com/</a><br>该插件不会直接生成APIDOC文档，只会自动生成apidoc.json文件，需要执行<code>apidoc</code>命令才可以生成<br>apidoc.json文件会生成在项目根目录apidoc文件夹下<br>","more":"</p>\n<h1 id=\"下载依赖包\"><a href=\"#下载依赖包\" class=\"headerlink\" title=\"下载依赖包\"></a>下载依赖包</h1><p>可配置MAVEN仓库<code>https://oss.sonatype.org/content/groups/public</code><br>或者<br>下载源码包进行编译打包:<a href=\"https://gitee.com/qianxunclub/qianxunclub-maven-plugin\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-maven-plugin</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/qianxunclub/qianxunclub-maven-plugin.git</span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd qianxunclub-maven-plugin</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑pom-xml，引入maven-plugin\"><a href=\"#编辑pom-xml，引入maven-plugin\" class=\"headerlink\" title=\"编辑pom.xml，引入maven plugin\"></a>编辑pom.xml，引入maven plugin</h1><p>在项目的pom文件中引入以下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">\t&lt;groupId&gt;com.qianxunclub&lt;/groupId&gt;</span><br><span class=\"line\">\t&lt;artifactId&gt;qianxunclub-plugin-apidoc&lt;/artifactId&gt;</span><br><span class=\"line\">\t&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span><br><span class=\"line\">\t&lt;executions&gt;</span><br><span class=\"line\">\t\t&lt;execution&gt;</span><br><span class=\"line\">\t\t\t&lt;goals&gt;</span><br><span class=\"line\">\t\t\t\t&lt;goal&gt;apidoc&lt;/goal&gt;</span><br><span class=\"line\">\t\t\t&lt;/goals&gt;</span><br><span class=\"line\">\t\t&lt;/execution&gt;</span><br><span class=\"line\">\t&lt;/executions&gt;</span><br><span class=\"line\">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure></p>\n<p>在<code>properties</code>定义API的生成规范：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;properties&gt;</span><br><span class=\"line\">\t&lt;apidoc.skip&gt;false/&lt;/apidoc.skip&gt;</span><br><span class=\"line\">\t&lt;apidoc.gen&gt;false&lt;/apidoc.gen&gt;</span><br><span class=\"line\">\t&lt;apidoc.url&gt;http://ip:port/&lt;/apidoc.url&gt;</span><br><span class=\"line\">\t&lt;apidoc.sampleUrl&gt;http://ip:port/&lt;/apidoc.sampleUrl&gt;</span><br><span class=\"line\">&lt;/properties&gt;</span><br></pre></td></tr></table></figure></p>\n<p>apidoc.skip：编译代码是否跳过生成apidoc.json<br>apidoc.gen：是否覆盖更新apidoc.json<br>apidoc.url：实例接口前缀<br>apidoc.sampleUrl：生成测试方法的请求地址  </p>\n<h1 id=\"开始生成\"><a href=\"#开始生成\" class=\"headerlink\" title=\"开始生成\"></a>开始生成</h1><p>执行命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package</span><br></pre></td></tr></table></figure></p>\n<p>可以添加以下参数：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean package -Dapidoc.skip=true</span><br></pre></td></tr></table></figure></p>\n<p>-Dapidoc.skip=true：编译代码是否跳过生成apidoc.json<br>-Dapidoc.gen=true：是否覆盖更新apidoc.json<br>-Dapidoc.url=xxx：实例接口前缀<br>-Dapidoc.sampleUrl=xxx：生成测试方法的请求地址  </p>\n<p>如果出现以下字样，说明生成完成：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apidoc.json完成</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"生成api文档\"><a href=\"#生成api文档\" class=\"headerlink\" title=\"生成api文档\"></a>生成api文档</h1><p>在项目跟目录执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apidoc -i apidoc/ -o API文档存放目录/</span><br></pre></td></tr></table></figure></p>\n<p>打开API文档存放目录中的<code>index.html</code>即可查看文档。</p>"},{"title":"SpringBoot使用hibernate-validator利用AOP实现统一参数校验","date":"2018-04-25T18:22:12.000Z","_content":"\n# 引入maven包\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n    <version>1.5.9.RELEASE</version>\n</dependency>\n\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-aop</artifactId>\n    <version>2.0.1.RELEASE</version>\n</dependency>\n\n<dependency>\n    <groupId>org.glassfish</groupId>\n    <artifactId>javax.el</artifactId>\n    <version>3.0.1-b08</version>\n</dependency>\n```\n<!--more-->\n# 注入Validator的bean\n```java\npackage com.qianxunclub.starter.web.autoconfigure;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.hibernate.validator.HibernateValidator;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport javax.validation.Validation;\nimport javax.validation.Validator;\nimport javax.validation.ValidatorFactory;\n\n/**\n * @author chihiro.zhang\n */\n@Slf4j\n@Configuration\npublic class ValidatorConfiguration {\n\n    @Bean\n    public Validator getValidatorFactory(){\n        ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class).configure().failFast(true).buildValidatorFactory();\n        return validatorFactory.getValidator();\n    }\n}\n\n```\n\n# 添加参数校验的AOP\n\n```java\npackage com.qianxunclub.starter.web.validator;\n\nimport com.qianxunclub.common.framework.constant.CommonReturnCode;\nimport com.qianxunclub.common.framework.response.Result;\nimport com.qianxunclub.utils.HttpResponseUtil;\nimport com.qianxunclub.utils.JsonUtil;\nimport lombok.AllArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.Signature;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\nimport org.aspectj.lang.reflect.MethodSignature;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport javax.servlet.http.HttpServletResponse;\nimport javax.validation.ConstraintViolation;\nimport javax.validation.Path;\nimport javax.validation.Validator;\nimport java.lang.reflect.Method;\nimport java.util.Set;\n\n/**\n * @author chihiro.zhang\n */\n@Slf4j\n@Aspect\n@Component\n@AllArgsConstructor\npublic class ValidatorAspect {\n\n    private Validator validator;\n\n      //定义校验的包位置\n      @Pointcut(\"execution(* com.qianxunclub..*.web.*.*(..))\")\n      public void pointcut() {\n      }\n\n    /**\n     * 入参校验\n     * @param joinPoint\n     * @throws Throwable\n     */\n    @Around(\"pointcut()\")\n    public Object execute(ProceedingJoinPoint joinPoint) throws Throwable {\n        Result result = Result.newBuilder().build();\n        String methodName = \"\";\n        try{\n            Signature sig = joinPoint.getSignature();\n            MethodSignature msig = (MethodSignature) sig;\n            Object target = joinPoint.getTarget();\n            Method currentMethod = target.getClass().getMethod(msig.getName(), msig.getParameterTypes());\n            methodName = currentMethod.getName();\n        } catch (Exception e){\n            log.debug(\"无法获取方法名称\" ,e);\n        }\n        Object[] args = joinPoint.getArgs();\n        for (Object arg : args){\n            log.debug(\"→→→→→\" + methodName + \">>>>Into parameter :\" + JsonUtil.objectToJson(arg));\n            if(arg != null){\n                Set<ConstraintViolation<Object>> constraintViolations = validator.validate(arg);\n                if(constraintViolations.size() > 0){\n                    for (ConstraintViolation<Object> constraintViolation : constraintViolations) {\n                        Path property = constraintViolation.getPropertyPath();\n                        String name = property.iterator().next().getName();\n                        result = Result.newBuilder().fail().code(CommonReturnCode.PARAM_ERROR).message(\"[\" + name + \"]\" + constraintViolation.getMessage()).build();\n                        break;\n                    }\n                    ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();\n                    HttpServletResponse response = attributes.getResponse();\n                    String responseStr = JsonUtil.objectToJson(result);\n                    log.error(responseStr);\n                    log.debug(\"→→→→→\" + methodName + \">>>>Return to the result :\" + responseStr);\n                    HttpResponseUtil.setResponseJsonBody(response,responseStr);\n                    return null;\n                }\n            }\n        }\n        Object object = joinPoint.proceed();\n        log.debug(\"→→→→→\" + methodName + \">>>>Return to the result :\" + JsonUtil.objectToJson(object));\n        return object;\n    }\n}\n\n```\n\n上面`@Pointcut(\"execution(* com.gwghk..*.web.*.*(..))\")为Controller`切点位置\nBaseResponse为一个统一返回对象，这个可以自定义\n\n# 使用\n使用是需要再Controller入参对象添加校验注解即可：\n```java\n@Data\npublic class RegisteProxyParam {\n    @NotEmpty\n    private String appId;\n}\n```\n\n","source":"_posts/java/spring-boot/springbootshi-yong-hibernate-validatorli-yong-aop.md","raw":"---\ntitle: SpringBoot使用hibernate-validator利用AOP实现统一参数校验\ndate: 2018-04-26 02:22:12\ntags: [Java,SpringBoot]\ncategories: \n  - Java\n  - SpringBoot\n---\n\n# 引入maven包\n\n```xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n    <version>1.5.9.RELEASE</version>\n</dependency>\n\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-aop</artifactId>\n    <version>2.0.1.RELEASE</version>\n</dependency>\n\n<dependency>\n    <groupId>org.glassfish</groupId>\n    <artifactId>javax.el</artifactId>\n    <version>3.0.1-b08</version>\n</dependency>\n```\n<!--more-->\n# 注入Validator的bean\n```java\npackage com.qianxunclub.starter.web.autoconfigure;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.hibernate.validator.HibernateValidator;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\n\nimport javax.validation.Validation;\nimport javax.validation.Validator;\nimport javax.validation.ValidatorFactory;\n\n/**\n * @author chihiro.zhang\n */\n@Slf4j\n@Configuration\npublic class ValidatorConfiguration {\n\n    @Bean\n    public Validator getValidatorFactory(){\n        ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class).configure().failFast(true).buildValidatorFactory();\n        return validatorFactory.getValidator();\n    }\n}\n\n```\n\n# 添加参数校验的AOP\n\n```java\npackage com.qianxunclub.starter.web.validator;\n\nimport com.qianxunclub.common.framework.constant.CommonReturnCode;\nimport com.qianxunclub.common.framework.response.Result;\nimport com.qianxunclub.utils.HttpResponseUtil;\nimport com.qianxunclub.utils.JsonUtil;\nimport lombok.AllArgsConstructor;\nimport lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.Signature;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.annotation.Pointcut;\nimport org.aspectj.lang.reflect.MethodSignature;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.context.request.RequestContextHolder;\nimport org.springframework.web.context.request.ServletRequestAttributes;\n\nimport javax.servlet.http.HttpServletResponse;\nimport javax.validation.ConstraintViolation;\nimport javax.validation.Path;\nimport javax.validation.Validator;\nimport java.lang.reflect.Method;\nimport java.util.Set;\n\n/**\n * @author chihiro.zhang\n */\n@Slf4j\n@Aspect\n@Component\n@AllArgsConstructor\npublic class ValidatorAspect {\n\n    private Validator validator;\n\n      //定义校验的包位置\n      @Pointcut(\"execution(* com.qianxunclub..*.web.*.*(..))\")\n      public void pointcut() {\n      }\n\n    /**\n     * 入参校验\n     * @param joinPoint\n     * @throws Throwable\n     */\n    @Around(\"pointcut()\")\n    public Object execute(ProceedingJoinPoint joinPoint) throws Throwable {\n        Result result = Result.newBuilder().build();\n        String methodName = \"\";\n        try{\n            Signature sig = joinPoint.getSignature();\n            MethodSignature msig = (MethodSignature) sig;\n            Object target = joinPoint.getTarget();\n            Method currentMethod = target.getClass().getMethod(msig.getName(), msig.getParameterTypes());\n            methodName = currentMethod.getName();\n        } catch (Exception e){\n            log.debug(\"无法获取方法名称\" ,e);\n        }\n        Object[] args = joinPoint.getArgs();\n        for (Object arg : args){\n            log.debug(\"→→→→→\" + methodName + \">>>>Into parameter :\" + JsonUtil.objectToJson(arg));\n            if(arg != null){\n                Set<ConstraintViolation<Object>> constraintViolations = validator.validate(arg);\n                if(constraintViolations.size() > 0){\n                    for (ConstraintViolation<Object> constraintViolation : constraintViolations) {\n                        Path property = constraintViolation.getPropertyPath();\n                        String name = property.iterator().next().getName();\n                        result = Result.newBuilder().fail().code(CommonReturnCode.PARAM_ERROR).message(\"[\" + name + \"]\" + constraintViolation.getMessage()).build();\n                        break;\n                    }\n                    ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();\n                    HttpServletResponse response = attributes.getResponse();\n                    String responseStr = JsonUtil.objectToJson(result);\n                    log.error(responseStr);\n                    log.debug(\"→→→→→\" + methodName + \">>>>Return to the result :\" + responseStr);\n                    HttpResponseUtil.setResponseJsonBody(response,responseStr);\n                    return null;\n                }\n            }\n        }\n        Object object = joinPoint.proceed();\n        log.debug(\"→→→→→\" + methodName + \">>>>Return to the result :\" + JsonUtil.objectToJson(object));\n        return object;\n    }\n}\n\n```\n\n上面`@Pointcut(\"execution(* com.gwghk..*.web.*.*(..))\")为Controller`切点位置\nBaseResponse为一个统一返回对象，这个可以自定义\n\n# 使用\n使用是需要再Controller入参对象添加校验注解即可：\n```java\n@Data\npublic class RegisteProxyParam {\n    @NotEmpty\n    private String appId;\n}\n```\n\n","slug":"java/spring-boot/springbootshi-yong-hibernate-validatorli-yong-aop","published":1,"updated":"2020-03-11T10:48:16.853Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5b30038w8mxi8bpbzty","content":"<h1 id=\"引入maven包\"><a href=\"#引入maven包\" class=\"headerlink\" title=\"引入maven包\"></a>引入maven包</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5.9.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.glassfish<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.el<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.1-b08<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h1 id=\"注入Validator的bean\"><a href=\"#注入Validator的bean\" class=\"headerlink\" title=\"注入Validator的bean\"></a>注入Validator的bean</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.qianxunclub.starter.web.autoconfigure;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.hibernate.validator.HibernateValidator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Validation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Validator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.ValidatorFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ValidatorConfiguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Validator <span class=\"title\">getValidatorFactory</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class).configure().failFast(<span class=\"keyword\">true</span>).buildValidatorFactory();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> validatorFactory.getValidator();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"添加参数校验的AOP\"><a href=\"#添加参数校验的AOP\" class=\"headerlink\" title=\"添加参数校验的AOP\"></a>添加参数校验的AOP</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.qianxunclub.starter.web.validator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.common.framework.constant.CommonReturnCode;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.common.framework.response.Result;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.utils.HttpResponseUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.utils.JsonUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.Signature;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintViolation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Validator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ValidatorAspect</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Validator validator;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//定义校验的包位置</span></span><br><span class=\"line\">      <span class=\"meta\">@Pointcut</span>(<span class=\"string\">\"execution(* com.qianxunclub..*.web.*.*(..))\"</span>)</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pointcut</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 入参校验</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> joinPoint</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Throwable</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"pointcut()\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">execute</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">        Result result = Result.newBuilder().build();</span><br><span class=\"line\">        String methodName = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            Signature sig = joinPoint.getSignature();</span><br><span class=\"line\">            MethodSignature msig = (MethodSignature) sig;</span><br><span class=\"line\">            Object target = joinPoint.getTarget();</span><br><span class=\"line\">            Method currentMethod = target.getClass().getMethod(msig.getName(), msig.getParameterTypes());</span><br><span class=\"line\">            methodName = currentMethod.getName();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            log.debug(<span class=\"string\">\"无法获取方法名称\"</span> ,e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Object[] args = joinPoint.getArgs();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object arg : args)&#123;</span><br><span class=\"line\">            log.debug(<span class=\"string\">\"→→→→→\"</span> + methodName + <span class=\"string\">\"&gt;&gt;&gt;&gt;Into parameter :\"</span> + JsonUtil.objectToJson(arg));</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arg != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                Set&lt;ConstraintViolation&lt;Object&gt;&gt; constraintViolations = validator.validate(arg);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(constraintViolations.size() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (ConstraintViolation&lt;Object&gt; constraintViolation : constraintViolations) &#123;</span><br><span class=\"line\">                        Path property = constraintViolation.getPropertyPath();</span><br><span class=\"line\">                        String name = property.iterator().next().getName();</span><br><span class=\"line\">                        result = Result.newBuilder().fail().code(CommonReturnCode.PARAM_ERROR).message(<span class=\"string\">\"[\"</span> + name + <span class=\"string\">\"]\"</span> + constraintViolation.getMessage()).build();</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class=\"line\">                    HttpServletResponse response = attributes.getResponse();</span><br><span class=\"line\">                    String responseStr = JsonUtil.objectToJson(result);</span><br><span class=\"line\">                    log.error(responseStr);</span><br><span class=\"line\">                    log.debug(<span class=\"string\">\"→→→→→\"</span> + methodName + <span class=\"string\">\"&gt;&gt;&gt;&gt;Return to the result :\"</span> + responseStr);</span><br><span class=\"line\">                    HttpResponseUtil.setResponseJsonBody(response,responseStr);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Object object = joinPoint.proceed();</span><br><span class=\"line\">        log.debug(<span class=\"string\">\"→→→→→\"</span> + methodName + <span class=\"string\">\"&gt;&gt;&gt;&gt;Return to the result :\"</span> + JsonUtil.objectToJson(object));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> object;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面<code>@Pointcut(&quot;execution(* com.gwghk..*.web.*.*(..))&quot;)为Controller</code>切点位置<br>BaseResponse为一个统一返回对象，这个可以自定义</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>使用是需要再Controller入参对象添加校验注解即可：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RegisteProxyParam</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String appId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"引入maven包\"><a href=\"#引入maven包\" class=\"headerlink\" title=\"引入maven包\"></a>引入maven包</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.5.9.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-aop<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.0.1.RELEASE<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.glassfish<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>javax.el<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.1-b08<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>","more":"<h1 id=\"注入Validator的bean\"><a href=\"#注入Validator的bean\" class=\"headerlink\" title=\"注入Validator的bean\"></a>注入Validator的bean</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.qianxunclub.starter.web.autoconfigure;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.hibernate.validator.HibernateValidator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Validation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Validator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.ValidatorFactory;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ValidatorConfiguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Validator <span class=\"title\">getValidatorFactory</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        ValidatorFactory validatorFactory = Validation.byProvider(HibernateValidator.class).configure().failFast(<span class=\"keyword\">true</span>).buildValidatorFactory();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> validatorFactory.getValidator();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"添加参数校验的AOP\"><a href=\"#添加参数校验的AOP\" class=\"headerlink\" title=\"添加参数校验的AOP\"></a>添加参数校验的AOP</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.qianxunclub.starter.web.validator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.common.framework.constant.CommonReturnCode;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.common.framework.response.Result;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.utils.HttpResponseUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.qianxunclub.utils.JsonUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.AllArgsConstructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.Signature;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Around;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.ConstraintViolation;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Path;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.validation.Validator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Set;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ValidatorAspect</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Validator validator;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//定义校验的包位置</span></span><br><span class=\"line\">      <span class=\"meta\">@Pointcut</span>(<span class=\"string\">\"execution(* com.qianxunclub..*.web.*.*(..))\"</span>)</span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pointcut</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 入参校验</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> joinPoint</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Throwable</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Around</span>(<span class=\"string\">\"pointcut()\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Object <span class=\"title\">execute</span><span class=\"params\">(ProceedingJoinPoint joinPoint)</span> <span class=\"keyword\">throws</span> Throwable </span>&#123;</span><br><span class=\"line\">        Result result = Result.newBuilder().build();</span><br><span class=\"line\">        String methodName = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;</span><br><span class=\"line\">            Signature sig = joinPoint.getSignature();</span><br><span class=\"line\">            MethodSignature msig = (MethodSignature) sig;</span><br><span class=\"line\">            Object target = joinPoint.getTarget();</span><br><span class=\"line\">            Method currentMethod = target.getClass().getMethod(msig.getName(), msig.getParameterTypes());</span><br><span class=\"line\">            methodName = currentMethod.getName();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e)&#123;</span><br><span class=\"line\">            log.debug(<span class=\"string\">\"无法获取方法名称\"</span> ,e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Object[] args = joinPoint.getArgs();</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Object arg : args)&#123;</span><br><span class=\"line\">            log.debug(<span class=\"string\">\"→→→→→\"</span> + methodName + <span class=\"string\">\"&gt;&gt;&gt;&gt;Into parameter :\"</span> + JsonUtil.objectToJson(arg));</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(arg != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">                Set&lt;ConstraintViolation&lt;Object&gt;&gt; constraintViolations = validator.validate(arg);</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(constraintViolations.size() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> (ConstraintViolation&lt;Object&gt; constraintViolation : constraintViolations) &#123;</span><br><span class=\"line\">                        Path property = constraintViolation.getPropertyPath();</span><br><span class=\"line\">                        String name = property.iterator().next().getName();</span><br><span class=\"line\">                        result = Result.newBuilder().fail().code(CommonReturnCode.PARAM_ERROR).message(<span class=\"string\">\"[\"</span> + name + <span class=\"string\">\"]\"</span> + constraintViolation.getMessage()).build();</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder.getRequestAttributes();</span><br><span class=\"line\">                    HttpServletResponse response = attributes.getResponse();</span><br><span class=\"line\">                    String responseStr = JsonUtil.objectToJson(result);</span><br><span class=\"line\">                    log.error(responseStr);</span><br><span class=\"line\">                    log.debug(<span class=\"string\">\"→→→→→\"</span> + methodName + <span class=\"string\">\"&gt;&gt;&gt;&gt;Return to the result :\"</span> + responseStr);</span><br><span class=\"line\">                    HttpResponseUtil.setResponseJsonBody(response,responseStr);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Object object = joinPoint.proceed();</span><br><span class=\"line\">        log.debug(<span class=\"string\">\"→→→→→\"</span> + methodName + <span class=\"string\">\"&gt;&gt;&gt;&gt;Return to the result :\"</span> + JsonUtil.objectToJson(object));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> object;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面<code>@Pointcut(&quot;execution(* com.gwghk..*.web.*.*(..))&quot;)为Controller</code>切点位置<br>BaseResponse为一个统一返回对象，这个可以自定义</p>\n<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><p>使用是需要再Controller入参对象添加校验注解即可：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RegisteProxyParam</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@NotEmpty</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String appId;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"线程池主线程等待所有子线程执行完成后，再继续后面工作","date":"2018-07-12T02:09:55.000Z","_content":"\n# 代码分析\n项目中生成报表，有时候我们会采用多线程来缩短程序运行时间，在不影响服务器性能的情况下，一个线程生成一个报表，等待所有报表都完成后，再执行某些操作。如果是实现Thread类的情况下，可以采用Thread.join()方法进行线程阻塞，此方法不进行详述，下面的方式是通过ExecutorService线程池的方式实现多线程情况，使用future.get()的阻塞性来实现。先来看一下这段代码，运行的结果会是什么？\n<!-- more -->\n```java\npublic class Test {\n\tpublic static void main(String[] args) {\n\t\tTest test = new Test();\n\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(5); \n\t\tfor (int i = 1; i < 3; i++) {\n\t\t\tfinal int index = i;\n\t\t\tFuture<Integer> future = fixedThreadPool.submit(new Callable<Integer>() {\n\t\t\t\tpublic Integer call() {\n\t\t\t\ttry {\n\t\t\t\t\tif(index==1){\n\t\t\t\t\t\tInteger res = test.querySlowMethod1(1);\n\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res);\n\t\t\t\t\t}\n\t\t\t\t\telse if(index==2){\n\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(2);\n\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res2);\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfixedThreadPool.shutdown();\n\t\tSystem.out.println(\"---------------------main thread end---------------------\");\n\t}\n\tpublic Integer querySlowMethod1(int i){\n\t\t\ttry {\n\t\t\t\tSystem.out.println(\"querySlowMethod1 start ,threadName:\"+Thread.currentThread().getName());\n\t\t\t\tThread.sleep(5000);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tSystem.out.println(\"querySlowMethod1----end\");\n\t\t\treturn i;\n\t}\n\tpublic Integer querySlowMethod2(int i){\n\t\ttry {\n\t\t\tSystem.out.println(\"querySlowMethod2 start,threadName:\"+Thread.currentThread().getName());\n\t\t\tThread.sleep(100);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"querySlowMethod2----end\");\n\t\treturn i;\n\t}\n}\n```\n输出结果是：\n```base\n---------------------main thread end---------------------\nquerySlowMethod1 start ,threadName:pool-1-thread-1\nquerySlowMethod2 start,threadName:pool-1-thread-2\nquerySlowMethod2----end\nloop num：2\nquerySlowMethod1----end\nloop num：1\n```\n有时候我们希望等所有子线程执行完成后，才继续主线程后面的工作，即我们希望最后输出的是：\n---------------------main thread end---------------------\n这时，我们可以使用future.get()的阻塞性来实现，实现代码如下：\n```java\npublic class Test {\n\tpublic static void main(String[] args) {\n\t\tTest test = new Test();\n\t\tList<Future<?>> futures = new ArrayList<Future<?>>(2);\n\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(5); \n\t\tfor (int i = 1; i < 3; i++) {\n\t\t\tfinal int index = i;\n\t\t\tFuture<Integer> future = fixedThreadPool.submit(new Callable<Integer>() {\n\t\t\t\tpublic Integer call() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif(index==1){\n\t\t\t\t\t\t\tInteger res = test.querySlowMethod1(1);\n\t\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(index==2){\n\t\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(2);\n\t\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfutures.add(future);\n\t\t}\n\t\tfixedThreadPool.shutdown();\n\t\tfor(Future<?> item:futures){\n\t\t\ttry {\n\t\t\t\tSystem. out.println(\"线程运行结果---------------\" + item.get());\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (ExecutionException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(\"---------------------main thread end---------------------\");\n\t}\n\tpublic Integer querySlowMethod1(int i){\n\t\ttry {\n\t\t\tSystem.out.println(\"querySlowMethod1 start ,threadName:\"+Thread.currentThread().getName());\n\t\t\tThread.sleep(5000);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"querySlowMethod1----end\");\n\t\treturn i;\n\t}\n\tpublic Integer querySlowMethod2(int i){\n\t\ttry {\n\t\t\tSystem.out.println(\"querySlowMethod2 start,threadName:\"+Thread.currentThread().getName());\n\t\t\tThread.sleep(100);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"querySlowMethod2----end\");\n\t\treturn i;\n\t}\n}\n```\n输出结果为：\n```base\nquerySlowMethod1 start ,threadName:pool-1-thread-1\nquerySlowMethod2----end\nloop num：2\nquerySlowMethod1----end\nloop num：1\n线程运行结果---------------1\n线程运行结果---------------2\n---------------------main thread end---------------------\n```","source":"_posts/java/thread/thread.md","raw":"---\ntitle: 线程池主线程等待所有子线程执行完成后，再继续后面工作\ndate: 2018-07-12 10:09:55\ntags: [Java,线程]\ncategories:\n  - Java\n  - thread\n---\n\n# 代码分析\n项目中生成报表，有时候我们会采用多线程来缩短程序运行时间，在不影响服务器性能的情况下，一个线程生成一个报表，等待所有报表都完成后，再执行某些操作。如果是实现Thread类的情况下，可以采用Thread.join()方法进行线程阻塞，此方法不进行详述，下面的方式是通过ExecutorService线程池的方式实现多线程情况，使用future.get()的阻塞性来实现。先来看一下这段代码，运行的结果会是什么？\n<!-- more -->\n```java\npublic class Test {\n\tpublic static void main(String[] args) {\n\t\tTest test = new Test();\n\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(5); \n\t\tfor (int i = 1; i < 3; i++) {\n\t\t\tfinal int index = i;\n\t\t\tFuture<Integer> future = fixedThreadPool.submit(new Callable<Integer>() {\n\t\t\t\tpublic Integer call() {\n\t\t\t\ttry {\n\t\t\t\t\tif(index==1){\n\t\t\t\t\t\tInteger res = test.querySlowMethod1(1);\n\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res);\n\t\t\t\t\t}\n\t\t\t\t\telse if(index==2){\n\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(2);\n\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res2);\n\t\t\t\t\t}\n\t\t\t\t} catch (Exception e) {\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t}\n\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tfixedThreadPool.shutdown();\n\t\tSystem.out.println(\"---------------------main thread end---------------------\");\n\t}\n\tpublic Integer querySlowMethod1(int i){\n\t\t\ttry {\n\t\t\t\tSystem.out.println(\"querySlowMethod1 start ,threadName:\"+Thread.currentThread().getName());\n\t\t\t\tThread.sleep(5000);\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tSystem.out.println(\"querySlowMethod1----end\");\n\t\t\treturn i;\n\t}\n\tpublic Integer querySlowMethod2(int i){\n\t\ttry {\n\t\t\tSystem.out.println(\"querySlowMethod2 start,threadName:\"+Thread.currentThread().getName());\n\t\t\tThread.sleep(100);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"querySlowMethod2----end\");\n\t\treturn i;\n\t}\n}\n```\n输出结果是：\n```base\n---------------------main thread end---------------------\nquerySlowMethod1 start ,threadName:pool-1-thread-1\nquerySlowMethod2 start,threadName:pool-1-thread-2\nquerySlowMethod2----end\nloop num：2\nquerySlowMethod1----end\nloop num：1\n```\n有时候我们希望等所有子线程执行完成后，才继续主线程后面的工作，即我们希望最后输出的是：\n---------------------main thread end---------------------\n这时，我们可以使用future.get()的阻塞性来实现，实现代码如下：\n```java\npublic class Test {\n\tpublic static void main(String[] args) {\n\t\tTest test = new Test();\n\t\tList<Future<?>> futures = new ArrayList<Future<?>>(2);\n\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(5); \n\t\tfor (int i = 1; i < 3; i++) {\n\t\t\tfinal int index = i;\n\t\t\tFuture<Integer> future = fixedThreadPool.submit(new Callable<Integer>() {\n\t\t\t\tpublic Integer call() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif(index==1){\n\t\t\t\t\t\t\tInteger res = test.querySlowMethod1(1);\n\t\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(index==2){\n\t\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(2);\n\t\t\t\t\t\t\tSystem.out.println(\"loop num：\"+res2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (Exception e) {\n\t\t\t\t\t\te.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t});\n\t\t\tfutures.add(future);\n\t\t}\n\t\tfixedThreadPool.shutdown();\n\t\tfor(Future<?> item:futures){\n\t\t\ttry {\n\t\t\t\tSystem. out.println(\"线程运行结果---------------\" + item.get());\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (ExecutionException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\n\t\tSystem.out.println(\"---------------------main thread end---------------------\");\n\t}\n\tpublic Integer querySlowMethod1(int i){\n\t\ttry {\n\t\t\tSystem.out.println(\"querySlowMethod1 start ,threadName:\"+Thread.currentThread().getName());\n\t\t\tThread.sleep(5000);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"querySlowMethod1----end\");\n\t\treturn i;\n\t}\n\tpublic Integer querySlowMethod2(int i){\n\t\ttry {\n\t\t\tSystem.out.println(\"querySlowMethod2 start,threadName:\"+Thread.currentThread().getName());\n\t\t\tThread.sleep(100);\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tSystem.out.println(\"querySlowMethod2----end\");\n\t\treturn i;\n\t}\n}\n```\n输出结果为：\n```base\nquerySlowMethod1 start ,threadName:pool-1-thread-1\nquerySlowMethod2----end\nloop num：2\nquerySlowMethod1----end\nloop num：1\n线程运行结果---------------1\n线程运行结果---------------2\n---------------------main thread end---------------------\n```","slug":"java/thread/thread","published":1,"updated":"2020-03-11T10:48:16.856Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5b40039w8mx6pz57k2a","content":"<h1 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h1><p>项目中生成报表，有时候我们会采用多线程来缩短程序运行时间，在不影响服务器性能的情况下，一个线程生成一个报表，等待所有报表都完成后，再执行某些操作。如果是实现Thread类的情况下，可以采用Thread.join()方法进行线程阻塞，此方法不进行详述，下面的方式是通过ExecutorService线程池的方式实现多线程情况，使用future.get()的阻塞性来实现。先来看一下这段代码，运行的结果会是什么？<br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tTest test = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(<span class=\"number\">5</span>); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> index = i;</span><br><span class=\"line\">\t\t\tFuture&lt;Integer&gt; future = fixedThreadPool.submit(<span class=\"keyword\">new</span> Callable&lt;Integer&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(index==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tInteger res = test.querySlowMethod1(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res2);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> index;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfixedThreadPool.shutdown();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---------------------main thread end---------------------\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod1</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1 start ,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">5000</span>);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1----end\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod2</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2 start,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2----end\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---------------------main thread end---------------------</span><br><span class=\"line\">querySlowMethod1 start ,threadName:pool-1-thread-1</span><br><span class=\"line\">querySlowMethod2 start,threadName:pool-1-thread-2</span><br><span class=\"line\">querySlowMethod2----end</span><br><span class=\"line\">loop num：2</span><br><span class=\"line\">querySlowMethod1----end</span><br><span class=\"line\">loop num：1</span><br></pre></td></tr></table></figure></p>\n<p>有时候我们希望等所有子线程执行完成后，才继续主线程后面的工作，即我们希望最后输出的是：<br>———————main thread end———————<br>这时，我们可以使用future.get()的阻塞性来实现，实现代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tTest test = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">\t\tList&lt;Future&lt;?&gt;&gt; futures = <span class=\"keyword\">new</span> ArrayList&lt;Future&lt;?&gt;&gt;(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(<span class=\"number\">5</span>); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> index = i;</span><br><span class=\"line\">\t\t\tFuture&lt;Integer&gt; future = fixedThreadPool.submit(<span class=\"keyword\">new</span> Callable&lt;Integer&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(index==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tInteger res = test.querySlowMethod1(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res2);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> index;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t\tfutures.add(future);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfixedThreadPool.shutdown();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Future&lt;?&gt; item:futures)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\tSystem. out.println(<span class=\"string\">\"线程运行结果---------------\"</span> + item.get());</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ExecutionException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---------------------main thread end---------------------\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod1</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1 start ,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">5000</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1----end\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod2</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2 start,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2----end\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">querySlowMethod1 start ,threadName:pool-1-thread-1</span><br><span class=\"line\">querySlowMethod2----end</span><br><span class=\"line\">loop num：2</span><br><span class=\"line\">querySlowMethod1----end</span><br><span class=\"line\">loop num：1</span><br><span class=\"line\">线程运行结果---------------1</span><br><span class=\"line\">线程运行结果---------------2</span><br><span class=\"line\">---------------------main thread end---------------------</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"代码分析\"><a href=\"#代码分析\" class=\"headerlink\" title=\"代码分析\"></a>代码分析</h1><p>项目中生成报表，有时候我们会采用多线程来缩短程序运行时间，在不影响服务器性能的情况下，一个线程生成一个报表，等待所有报表都完成后，再执行某些操作。如果是实现Thread类的情况下，可以采用Thread.join()方法进行线程阻塞，此方法不进行详述，下面的方式是通过ExecutorService线程池的方式实现多线程情况，使用future.get()的阻塞性来实现。先来看一下这段代码，运行的结果会是什么？<br>","more":"<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tTest test = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(<span class=\"number\">5</span>); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> index = i;</span><br><span class=\"line\">\t\t\tFuture&lt;Integer&gt; future = fixedThreadPool.submit(<span class=\"keyword\">new</span> Callable&lt;Integer&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(index==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tInteger res = test.querySlowMethod1(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res2);</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> index;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfixedThreadPool.shutdown();</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---------------------main thread end---------------------\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod1</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1 start ,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\t\tThread.sleep(<span class=\"number\">5000</span>);</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1----end\"</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod2</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2 start,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2----end\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果是：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---------------------main thread end---------------------</span><br><span class=\"line\">querySlowMethod1 start ,threadName:pool-1-thread-1</span><br><span class=\"line\">querySlowMethod2 start,threadName:pool-1-thread-2</span><br><span class=\"line\">querySlowMethod2----end</span><br><span class=\"line\">loop num：2</span><br><span class=\"line\">querySlowMethod1----end</span><br><span class=\"line\">loop num：1</span><br></pre></td></tr></table></figure></p>\n<p>有时候我们希望等所有子线程执行完成后，才继续主线程后面的工作，即我们希望最后输出的是：<br>———————main thread end———————<br>这时，我们可以使用future.get()的阻塞性来实现，实现代码如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tTest test = <span class=\"keyword\">new</span> Test();</span><br><span class=\"line\">\t\tList&lt;Future&lt;?&gt;&gt; futures = <span class=\"keyword\">new</span> ArrayList&lt;Future&lt;?&gt;&gt;(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tExecutorService fixedThreadPool = Executors.newFixedThreadPool(<span class=\"number\">5</span>); </span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">final</span> <span class=\"keyword\">int</span> index = i;</span><br><span class=\"line\">\t\t\tFuture&lt;Integer&gt; future = fixedThreadPool.submit(<span class=\"keyword\">new</span> Callable&lt;Integer&gt;() &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">if</span>(index==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tInteger res = test.querySlowMethod1(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(index==<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\t\t\tInteger res2 = test.querySlowMethod2(<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\t\t\t\t\t\tSystem.out.println(<span class=\"string\">\"loop num：\"</span>+res2);</span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> index;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;);</span><br><span class=\"line\">\t\t\tfutures.add(future);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfixedThreadPool.shutdown();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(Future&lt;?&gt; item:futures)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\t\tSystem. out.println(<span class=\"string\">\"线程运行结果---------------\"</span> + item.get());</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125; <span class=\"keyword\">catch</span> (ExecutionException e) &#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"---------------------main thread end---------------------\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod1</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1 start ,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">5000</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod1----end\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">querySlowMethod2</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2 start,threadName:\"</span>+Thread.currentThread().getName());</span><br><span class=\"line\">\t\t\tThread.sleep(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"querySlowMethod2----end\"</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>输出结果为：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">querySlowMethod1 start ,threadName:pool-1-thread-1</span><br><span class=\"line\">querySlowMethod2----end</span><br><span class=\"line\">loop num：2</span><br><span class=\"line\">querySlowMethod1----end</span><br><span class=\"line\">loop num：1</span><br><span class=\"line\">线程运行结果---------------1</span><br><span class=\"line\">线程运行结果---------------2</span><br><span class=\"line\">---------------------main thread end---------------------</span><br></pre></td></tr></table></figure></p>"},{"title":"HTTP请求返回编码大全以及解释分类","date":"2017-09-06T18:08:46.000Z","_content":">原文地址：https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n# Status Code Definitions\nEach Status-Code is described below, including a description of which method(s) it can follow and any metainformation required in the response.\n<!--more-->\n# Informational 1xx\nThis class of status code indicates a provisional response, consisting only of the Status-Line and optional headers, and is terminated by an empty line. There are no required headers for this class of status code. Since HTTP/1.0 did not define any 1xx status codes, servers MUST NOT send a 1xx response to an HTTP/1.0 client except under experimental conditions.\n\nA client MUST be prepared to accept one or more 1xx status responses prior to a regular response, even if the client does not expect a 100 (Continue) status message. Unexpected 1xx status responses MAY be ignored by a user agent.\n\nProxies MUST forward 1xx responses, unless the connection between the proxy and its client has been closed, or unless the proxy itself requested the generation of the 1xx response. (For example, if a\n\nproxy adds a \"Expect: 100-continue\" field when it forwards a request, then it need not forward the corresponding 100 (Continue) response(s).)\n\n## 100 Continue\nThe client SHOULD continue with its request. This interim response is used to inform the client that the initial part of the request has been received and has not yet been rejected by the server. The client SHOULD continue by sending the remainder of the request or, if the request has already been completed, ignore this response. The server MUST send a final response after the request has been completed. See section 8.2.3 for detailed discussion of the use and handling of this status code.\n\n## 101 Switching Protocols\nThe server understands and is willing to comply with the client's request, via the Upgrade message header field (section 14.42), for a change in the application protocol being used on this connection. The server will switch protocols to those defined by the response's Upgrade header field immediately after the empty line which terminates the 101 response.\n\nThe protocol SHOULD be switched only when it is advantageous to do so. For example, switching to a newer version of HTTP is advantageous over older versions, and switching to a real-time, synchronous protocol might be advantageous when delivering resources that use such features.\n\n# Successful 2xx\nThis class of status code indicates that the client's request was successfully received, understood, and accepted.\n\n## 200 OK\nThe request has succeeded. The information returned with the response is dependent on the method used in the request, for example:\n\nGET an entity corresponding to the requested resource is sent in the response;\n\nHEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body;\n\nPOST an entity describing or containing the result of the action;\n\nTRACE an entity containing the request message as received by the end server.\n\n## 201 Created\nThe request has been fulfilled and resulted in a new resource being created. The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a Location header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. The origin server MUST create the resource before returning the 201 status code. If the action cannot be carried out immediately, the server SHOULD respond with 202 (Accepted) response instead.\n\nA 201 response MAY contain an ETag response header field indicating the current value of the entity tag for the requested variant just created, see section 14.19.\n\n## 202 Accepted\nThe request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.\n\nThe 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent's connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request's current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.\n\n## 203 Non-Authoritative Information\nThe returned metainformation in the entity-header is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy. The set presented MAY be a subset or superset of the original version. For example, including local annotation information about the resource might result in a superset of the metainformation known by the origin server. Use of this response code is not required and is only appropriate when the response would otherwise be 200 (OK).\n\n## 204 No Content\nThe server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation. The response MAY include new or updated metainformation in the form of entity-headers, which if present SHOULD be associated with the requested variant.\n\nIf the client is a user agent, it SHOULD NOT change its document view from that which caused the request to be sent. This response is primarily intended to allow input for actions to take place without causing a change to the user agent's active document view, although any new or updated metainformation SHOULD be applied to the document currently in the user agent's active view.\n\nThe 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.\n\n## 205 Reset Content\nThe server has fulfilled the request and the user agent SHOULD reset the document view which caused the request to be sent. This response is primarily intended to allow input for actions to take place via user input, followed by a clearing of the form in which the input is given so that the user can easily initiate another input action. The response MUST NOT include an entity.\n\n## 206 Partial Content\nThe server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field (section 14.35) indicating the desired range, and MAY have included an If-Range header field (section 14.27) to make the request conditional.\n\nThe response MUST include the following header fields:\n\n      - Either a Content-Range header field (section 14.16) indicating\n        the range included with this response, or a multipart/byteranges\n        Content-Type including Content-Range fields for each part. If a\n        Content-Length header field is present in the response, its\n        value MUST match the actual number of OCTETs transmitted in the\n        message-body.\n      - Date\n      - ETag and/or Content-Location, if the header would have been sent\n        in a 200 response to the same request\n      - Expires, Cache-Control, and/or Vary, if the field-value might\n        differ from that sent in any previous response for the same\n        variant\nIf the 206 response is the result of an If-Range request that used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. If the response is the result of an If-Range request that used a weak validator, the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers. Otherwise, the response MUST include all of the entity-headers that would have been returned with a 200 (OK) response to the same request.\n\nA cache MUST NOT combine a 206 response with other previously cached content if the ETag or Last-Modified headers do not match exactly, see 13.5.4.\n\nA cache that does not support the Range and Content-Range headers MUST NOT cache 206 (Partial) responses.\n\n# Redirection 3xx\nThis class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.\n\n      Note: previous versions of this specification recommended a\n      maximum of five redirections. Content developers should be aware\n      that there might be clients that implement such a fixed\n      limitation.\n## 300 Multiple Choices\nThe requested resource corresponds to any one of a set of representations, each with its own specific location, and agent- driven negotiation information (section 12) is being provided so that the user (or user agent) can select a preferred representation and redirect its request to that location.\n\nUnless it was a HEAD request, the response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content- Type header field. Depending upon the format and the capabilities of\n\nthe user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.\n\nIf the server has a preferred choice of representation, it SHOULD include the specific URI for that representation in the Location field; user agents MAY use the Location field value for automatic redirection. This response is cacheable unless indicated otherwise.\n\n## 301 Moved Permanently\nThe requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.\n\nThe new permanent URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).\n\nIf the 301 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\n\n      Note: When automatically redirecting a POST request after\n      receiving a 301 status code, some existing HTTP/1.0 user agents\n      will erroneously change it into a GET request.\n## 302 Found\nThe requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.\n\nThe temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).\n\nIf the 302 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\n\n      Note: RFC 1945 and RFC 2068 specify that the client is not allowed\n      to change the method on the redirected request.  However, most\n      existing user agent implementations treat 302 as if it were a 303\n      response, performing a GET on the Location field-value regardless\n      of the original request method. The status codes 303 and 307 have\n      been added for servers that wish to make unambiguously clear which\n      kind of reaction is expected of the client.\n## 303 See Other\nThe response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. The 303 response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.\n\nThe different URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).\n\n      Note: Many pre-HTTP/1.1 user agents do not understand the 303\n      status. When interoperability with such clients is a concern, the\n      302 status code may be used instead, since most user agents react\n      to a 302 response as described here for 303.\n## 304 Not Modified\nIf the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.\n\nThe response MUST include the following header fields:\n\n      - Date, unless its omission is required by section 14.18.1\nIf a clockless origin server obeys these rules, and proxies and clients add their own Date to any response received without one (as already specified by [RFC 2068], section 14.19), caches will operate correctly.\n\n      - ETag and/or Content-Location, if the header would have been sent\n        in a 200 response to the same request\n      - Expires, Cache-Control, and/or Vary, if the field-value might\n        differ from that sent in any previous response for the same\n        variant\nIf the conditional GET used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. Otherwise (i.e., the conditional GET used a weak validator), the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers.\n\nIf a 304 response indicates an entity not currently cached, then the cache MUST disregard the response and repeat the request without the conditional.\n\nIf a cache uses a received 304 response to update a cache entry, the cache MUST update the entry to reflect any new field values given in the response.\n\n## 305 Use Proxy\nThe requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. 305 responses MUST only be generated by origin servers.\n\n      Note: RFC 2068 was not clear that 305 was intended to redirect a\n      single request, and to be generated by origin servers only.  Not\n      observing these limitations has significant security consequences.\n## 306 (Unused)\nThe 306 status code was used in a previous version of the specification, is no longer used, and the code is reserved.\n\n## 307 Temporary Redirect\nThe requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.\n\nThe temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s) , since many pre-HTTP/1.1 user agents do not understand the 307 status. Therefore, the note SHOULD contain the information necessary for a user to repeat the original request on the new URI.\n\nIf the 307 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\n\n# Client Error 4xx\nThe 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.\n\nIf the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server's TCP stack will send a reset packet to the client, which may erase the client's unacknowledged input buffers before they can be read and interpreted by the HTTP application.\n\n## 400 Bad Request\nThe request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.\n\n## 401 Unauthorized\nThe request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\n## 402 Payment Required\nThis code is reserved for future use.\n\n## 403 Forbidden\nThe server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.\n\n## 404 Not Found\nThe server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.\n\n## 405 Method Not Allowed\nThe method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource.\n\n## 406 Not Acceptable\nThe resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.\n\nUnless it was a HEAD request, the response SHOULD include an entity containing a list of available entity characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. Depending upon the format and the capabilities of the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.\n\n      Note: HTTP/1.1 servers are allowed to return responses which are\n      not acceptable according to the accept headers sent in the\n      request. In some cases, this may even be preferable to sending a\n      406 response. User agents are encouraged to inspect the headers of\n      an incoming response to determine if it is acceptable.\nIf the response could be unacceptable, a user agent SHOULD temporarily stop receipt of more data and query the user for a decision on further actions.\n\n## 407 Proxy Authentication Required\nThis code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy. The proxy MUST return a Proxy-Authenticate header field (section 14.33) containing a challenge applicable to the proxy for the requested resource. The client MAY repeat the request with a suitable Proxy-Authorization header field (section 14.34). HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\n## 408 Request Timeout\nThe client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\n\n## 409 Conflict\nThe request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough\n\ninformation for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required.\n\nConflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can't complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type.\n\n## 410 Gone\nThe requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise.\n\nThe 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server's site. It is not necessary to mark all permanently unavailable resources as \"gone\" or to keep the mark for any length of time -- that is left to the discretion of the server owner.\n\n## 411 Length Required\nThe server refuses to accept the request without a defined Content- Length. The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message-body in the request message.\n\n## 412 Precondition Failed\nThe precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. This response code allows the client to place preconditions on the current resource metainformation (header field data) and thus prevent the requested method from being applied to a resource other than the one intended.\n\n## 413 Request Entity Too Large\nThe server is refusing to process a request because the request entity is larger than the server is willing or able to process. The server MAY close the connection to prevent the client from continuing the request.\n\nIf the condition is temporary, the server SHOULD include a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.\n\n## 414 Request-URI Too Long\nThe server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a URI \"black hole\" of redirection (e.g., a redirected URI prefix that points to a suffix of itself), or when the server is under attack by a client attempting to exploit security holes present in some servers using fixed-length buffers for reading or manipulating the Request-URI.\n\n## 415 Unsupported Media Type\nThe server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.\n\n## 416 Requested Range Not Satisfiable\nA server SHOULD return a response with this status code if a request included a Range request-header field (section 14.35), and none of the range-specifier values in this field overlap the current extent of the selected resource, and the request did not include an If-Range request-header field. (For byte-ranges, this means that the first- byte-pos of all of the byte-range-spec values were greater than the current length of the selected resource.)\n\nWhen this status code is returned for a byte-range request, the response SHOULD include a Content-Range entity-header field specifying the current length of the selected resource (see section 14.16). This response MUST NOT use the multipart/byteranges content- type.\n\n## 417 Expectation Failed\nThe expectation given in an Expect request-header field (see section 14.20) could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server.\n\n# Server Error 5xx\nResponse status codes beginning with the digit \"5\" indicate cases in which the server is aware that it has erred or is incapable of performing the request. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. User agents SHOULD display any included entity to the user. These response codes are applicable to any request method.\n\n## 500 Internal Server Error\nThe server encountered an unexpected condition which prevented it from fulfilling the request.\n\n## 501 Not Implemented\nThe server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource.\n\n## 502 Bad Gateway\nThe server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request.\n\n## 503 Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response.\n\n      Note: The existence of the 503 status code does not imply that a\n      server must use it when becoming overloaded. Some servers may wish\n      to simply refuse the connection.\n## 504 Gateway Timeout\nThe server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request.\n\n      Note: Note to implementors: some deployed proxies are known to\n      return 400 or 500 when DNS lookups time out.\n## 505 HTTP Version Not Supported\nThe server does not support, or refuses to support, the HTTP protocol version that was used in the request message. The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in section 3.1, other than with this error message. The response SHOULD contain an entity describing why that version is not supported and what other protocols are supported by that server.","source":"_posts/tech/httqing-qiu-fan-hui-bian-ma-da-quan-yi-ji-jie-shi-fen-lei.md","raw":"---\ntitle: HTTP请求返回编码大全以及解释分类\ndate: 2017-09-07 02:08:46\ntags: [Http]\ncategories: \n  - 技术杂文\n---\n>原文地址：https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\n# Status Code Definitions\nEach Status-Code is described below, including a description of which method(s) it can follow and any metainformation required in the response.\n<!--more-->\n# Informational 1xx\nThis class of status code indicates a provisional response, consisting only of the Status-Line and optional headers, and is terminated by an empty line. There are no required headers for this class of status code. Since HTTP/1.0 did not define any 1xx status codes, servers MUST NOT send a 1xx response to an HTTP/1.0 client except under experimental conditions.\n\nA client MUST be prepared to accept one or more 1xx status responses prior to a regular response, even if the client does not expect a 100 (Continue) status message. Unexpected 1xx status responses MAY be ignored by a user agent.\n\nProxies MUST forward 1xx responses, unless the connection between the proxy and its client has been closed, or unless the proxy itself requested the generation of the 1xx response. (For example, if a\n\nproxy adds a \"Expect: 100-continue\" field when it forwards a request, then it need not forward the corresponding 100 (Continue) response(s).)\n\n## 100 Continue\nThe client SHOULD continue with its request. This interim response is used to inform the client that the initial part of the request has been received and has not yet been rejected by the server. The client SHOULD continue by sending the remainder of the request or, if the request has already been completed, ignore this response. The server MUST send a final response after the request has been completed. See section 8.2.3 for detailed discussion of the use and handling of this status code.\n\n## 101 Switching Protocols\nThe server understands and is willing to comply with the client's request, via the Upgrade message header field (section 14.42), for a change in the application protocol being used on this connection. The server will switch protocols to those defined by the response's Upgrade header field immediately after the empty line which terminates the 101 response.\n\nThe protocol SHOULD be switched only when it is advantageous to do so. For example, switching to a newer version of HTTP is advantageous over older versions, and switching to a real-time, synchronous protocol might be advantageous when delivering resources that use such features.\n\n# Successful 2xx\nThis class of status code indicates that the client's request was successfully received, understood, and accepted.\n\n## 200 OK\nThe request has succeeded. The information returned with the response is dependent on the method used in the request, for example:\n\nGET an entity corresponding to the requested resource is sent in the response;\n\nHEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body;\n\nPOST an entity describing or containing the result of the action;\n\nTRACE an entity containing the request message as received by the end server.\n\n## 201 Created\nThe request has been fulfilled and resulted in a new resource being created. The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a Location header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. The origin server MUST create the resource before returning the 201 status code. If the action cannot be carried out immediately, the server SHOULD respond with 202 (Accepted) response instead.\n\nA 201 response MAY contain an ETag response header field indicating the current value of the entity tag for the requested variant just created, see section 14.19.\n\n## 202 Accepted\nThe request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.\n\nThe 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent's connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request's current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.\n\n## 203 Non-Authoritative Information\nThe returned metainformation in the entity-header is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy. The set presented MAY be a subset or superset of the original version. For example, including local annotation information about the resource might result in a superset of the metainformation known by the origin server. Use of this response code is not required and is only appropriate when the response would otherwise be 200 (OK).\n\n## 204 No Content\nThe server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation. The response MAY include new or updated metainformation in the form of entity-headers, which if present SHOULD be associated with the requested variant.\n\nIf the client is a user agent, it SHOULD NOT change its document view from that which caused the request to be sent. This response is primarily intended to allow input for actions to take place without causing a change to the user agent's active document view, although any new or updated metainformation SHOULD be applied to the document currently in the user agent's active view.\n\nThe 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.\n\n## 205 Reset Content\nThe server has fulfilled the request and the user agent SHOULD reset the document view which caused the request to be sent. This response is primarily intended to allow input for actions to take place via user input, followed by a clearing of the form in which the input is given so that the user can easily initiate another input action. The response MUST NOT include an entity.\n\n## 206 Partial Content\nThe server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field (section 14.35) indicating the desired range, and MAY have included an If-Range header field (section 14.27) to make the request conditional.\n\nThe response MUST include the following header fields:\n\n      - Either a Content-Range header field (section 14.16) indicating\n        the range included with this response, or a multipart/byteranges\n        Content-Type including Content-Range fields for each part. If a\n        Content-Length header field is present in the response, its\n        value MUST match the actual number of OCTETs transmitted in the\n        message-body.\n      - Date\n      - ETag and/or Content-Location, if the header would have been sent\n        in a 200 response to the same request\n      - Expires, Cache-Control, and/or Vary, if the field-value might\n        differ from that sent in any previous response for the same\n        variant\nIf the 206 response is the result of an If-Range request that used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. If the response is the result of an If-Range request that used a weak validator, the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers. Otherwise, the response MUST include all of the entity-headers that would have been returned with a 200 (OK) response to the same request.\n\nA cache MUST NOT combine a 206 response with other previously cached content if the ETag or Last-Modified headers do not match exactly, see 13.5.4.\n\nA cache that does not support the Range and Content-Range headers MUST NOT cache 206 (Partial) responses.\n\n# Redirection 3xx\nThis class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.\n\n      Note: previous versions of this specification recommended a\n      maximum of five redirections. Content developers should be aware\n      that there might be clients that implement such a fixed\n      limitation.\n## 300 Multiple Choices\nThe requested resource corresponds to any one of a set of representations, each with its own specific location, and agent- driven negotiation information (section 12) is being provided so that the user (or user agent) can select a preferred representation and redirect its request to that location.\n\nUnless it was a HEAD request, the response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content- Type header field. Depending upon the format and the capabilities of\n\nthe user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.\n\nIf the server has a preferred choice of representation, it SHOULD include the specific URI for that representation in the Location field; user agents MAY use the Location field value for automatic redirection. This response is cacheable unless indicated otherwise.\n\n## 301 Moved Permanently\nThe requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.\n\nThe new permanent URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).\n\nIf the 301 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\n\n      Note: When automatically redirecting a POST request after\n      receiving a 301 status code, some existing HTTP/1.0 user agents\n      will erroneously change it into a GET request.\n## 302 Found\nThe requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.\n\nThe temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).\n\nIf the 302 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\n\n      Note: RFC 1945 and RFC 2068 specify that the client is not allowed\n      to change the method on the redirected request.  However, most\n      existing user agent implementations treat 302 as if it were a 303\n      response, performing a GET on the Location field-value regardless\n      of the original request method. The status codes 303 and 307 have\n      been added for servers that wish to make unambiguously clear which\n      kind of reaction is expected of the client.\n## 303 See Other\nThe response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. The 303 response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.\n\nThe different URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).\n\n      Note: Many pre-HTTP/1.1 user agents do not understand the 303\n      status. When interoperability with such clients is a concern, the\n      302 status code may be used instead, since most user agents react\n      to a 302 response as described here for 303.\n## 304 Not Modified\nIf the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.\n\nThe response MUST include the following header fields:\n\n      - Date, unless its omission is required by section 14.18.1\nIf a clockless origin server obeys these rules, and proxies and clients add their own Date to any response received without one (as already specified by [RFC 2068], section 14.19), caches will operate correctly.\n\n      - ETag and/or Content-Location, if the header would have been sent\n        in a 200 response to the same request\n      - Expires, Cache-Control, and/or Vary, if the field-value might\n        differ from that sent in any previous response for the same\n        variant\nIf the conditional GET used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. Otherwise (i.e., the conditional GET used a weak validator), the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers.\n\nIf a 304 response indicates an entity not currently cached, then the cache MUST disregard the response and repeat the request without the conditional.\n\nIf a cache uses a received 304 response to update a cache entry, the cache MUST update the entry to reflect any new field values given in the response.\n\n## 305 Use Proxy\nThe requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. 305 responses MUST only be generated by origin servers.\n\n      Note: RFC 2068 was not clear that 305 was intended to redirect a\n      single request, and to be generated by origin servers only.  Not\n      observing these limitations has significant security consequences.\n## 306 (Unused)\nThe 306 status code was used in a previous version of the specification, is no longer used, and the code is reserved.\n\n## 307 Temporary Redirect\nThe requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.\n\nThe temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s) , since many pre-HTTP/1.1 user agents do not understand the 307 status. Therefore, the note SHOULD contain the information necessary for a user to repeat the original request on the new URI.\n\nIf the 307 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.\n\n# Client Error 4xx\nThe 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.\n\nIf the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server's TCP stack will send a reset packet to the client, which may erase the client's unacknowledged input buffers before they can be read and interpreted by the HTTP application.\n\n## 400 Bad Request\nThe request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.\n\n## 401 Unauthorized\nThe request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\n## 402 Payment Required\nThis code is reserved for future use.\n\n## 403 Forbidden\nThe server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.\n\n## 404 Not Found\nThe server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.\n\n## 405 Method Not Allowed\nThe method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource.\n\n## 406 Not Acceptable\nThe resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.\n\nUnless it was a HEAD request, the response SHOULD include an entity containing a list of available entity characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. Depending upon the format and the capabilities of the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.\n\n      Note: HTTP/1.1 servers are allowed to return responses which are\n      not acceptable according to the accept headers sent in the\n      request. In some cases, this may even be preferable to sending a\n      406 response. User agents are encouraged to inspect the headers of\n      an incoming response to determine if it is acceptable.\nIf the response could be unacceptable, a user agent SHOULD temporarily stop receipt of more data and query the user for a decision on further actions.\n\n## 407 Proxy Authentication Required\nThis code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy. The proxy MUST return a Proxy-Authenticate header field (section 14.33) containing a challenge applicable to the proxy for the requested resource. The client MAY repeat the request with a suitable Proxy-Authorization header field (section 14.34). HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\" [43].\n\n## 408 Request Timeout\nThe client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.\n\n## 409 Conflict\nThe request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough\n\ninformation for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required.\n\nConflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can't complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type.\n\n## 410 Gone\nThe requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise.\n\nThe 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server's site. It is not necessary to mark all permanently unavailable resources as \"gone\" or to keep the mark for any length of time -- that is left to the discretion of the server owner.\n\n## 411 Length Required\nThe server refuses to accept the request without a defined Content- Length. The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message-body in the request message.\n\n## 412 Precondition Failed\nThe precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. This response code allows the client to place preconditions on the current resource metainformation (header field data) and thus prevent the requested method from being applied to a resource other than the one intended.\n\n## 413 Request Entity Too Large\nThe server is refusing to process a request because the request entity is larger than the server is willing or able to process. The server MAY close the connection to prevent the client from continuing the request.\n\nIf the condition is temporary, the server SHOULD include a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.\n\n## 414 Request-URI Too Long\nThe server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a URI \"black hole\" of redirection (e.g., a redirected URI prefix that points to a suffix of itself), or when the server is under attack by a client attempting to exploit security holes present in some servers using fixed-length buffers for reading or manipulating the Request-URI.\n\n## 415 Unsupported Media Type\nThe server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.\n\n## 416 Requested Range Not Satisfiable\nA server SHOULD return a response with this status code if a request included a Range request-header field (section 14.35), and none of the range-specifier values in this field overlap the current extent of the selected resource, and the request did not include an If-Range request-header field. (For byte-ranges, this means that the first- byte-pos of all of the byte-range-spec values were greater than the current length of the selected resource.)\n\nWhen this status code is returned for a byte-range request, the response SHOULD include a Content-Range entity-header field specifying the current length of the selected resource (see section 14.16). This response MUST NOT use the multipart/byteranges content- type.\n\n## 417 Expectation Failed\nThe expectation given in an Expect request-header field (see section 14.20) could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server.\n\n# Server Error 5xx\nResponse status codes beginning with the digit \"5\" indicate cases in which the server is aware that it has erred or is incapable of performing the request. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. User agents SHOULD display any included entity to the user. These response codes are applicable to any request method.\n\n## 500 Internal Server Error\nThe server encountered an unexpected condition which prevented it from fulfilling the request.\n\n## 501 Not Implemented\nThe server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource.\n\n## 502 Bad Gateway\nThe server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request.\n\n## 503 Service Unavailable\nThe server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response.\n\n      Note: The existence of the 503 status code does not imply that a\n      server must use it when becoming overloaded. Some servers may wish\n      to simply refuse the connection.\n## 504 Gateway Timeout\nThe server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request.\n\n      Note: Note to implementors: some deployed proxies are known to\n      return 400 or 500 when DNS lookups time out.\n## 505 HTTP Version Not Supported\nThe server does not support, or refuses to support, the HTTP protocol version that was used in the request message. The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in section 3.1, other than with this error message. The response SHOULD contain an entity describing why that version is not supported and what other protocols are supported by that server.","slug":"tech/httqing-qiu-fan-hui-bian-ma-da-quan-yi-ji-jie-shi-fen-lei","published":1,"updated":"2020-03-11T10:48:16.859Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5bf003yw8mxy1uw4u6e","content":"<blockquote>\n<p>原文地址：<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></p>\n</blockquote>\n<h1 id=\"Status-Code-Definitions\"><a href=\"#Status-Code-Definitions\" class=\"headerlink\" title=\"Status Code Definitions\"></a>Status Code Definitions</h1><p>Each Status-Code is described below, including a description of which method(s) it can follow and any metainformation required in the response.<br><a id=\"more\"></a></p>\n<h1 id=\"Informational-1xx\"><a href=\"#Informational-1xx\" class=\"headerlink\" title=\"Informational 1xx\"></a>Informational 1xx</h1><p>This class of status code indicates a provisional response, consisting only of the Status-Line and optional headers, and is terminated by an empty line. There are no required headers for this class of status code. Since HTTP/1.0 did not define any 1xx status codes, servers MUST NOT send a 1xx response to an HTTP/1.0 client except under experimental conditions.</p>\n<p>A client MUST be prepared to accept one or more 1xx status responses prior to a regular response, even if the client does not expect a 100 (Continue) status message. Unexpected 1xx status responses MAY be ignored by a user agent.</p>\n<p>Proxies MUST forward 1xx responses, unless the connection between the proxy and its client has been closed, or unless the proxy itself requested the generation of the 1xx response. (For example, if a</p>\n<p>proxy adds a “Expect: 100-continue” field when it forwards a request, then it need not forward the corresponding 100 (Continue) response(s).)</p>\n<h2 id=\"100-Continue\"><a href=\"#100-Continue\" class=\"headerlink\" title=\"100 Continue\"></a>100 Continue</h2><p>The client SHOULD continue with its request. This interim response is used to inform the client that the initial part of the request has been received and has not yet been rejected by the server. The client SHOULD continue by sending the remainder of the request or, if the request has already been completed, ignore this response. The server MUST send a final response after the request has been completed. See section 8.2.3 for detailed discussion of the use and handling of this status code.</p>\n<h2 id=\"101-Switching-Protocols\"><a href=\"#101-Switching-Protocols\" class=\"headerlink\" title=\"101 Switching Protocols\"></a>101 Switching Protocols</h2><p>The server understands and is willing to comply with the client’s request, via the Upgrade message header field (section 14.42), for a change in the application protocol being used on this connection. The server will switch protocols to those defined by the response’s Upgrade header field immediately after the empty line which terminates the 101 response.</p>\n<p>The protocol SHOULD be switched only when it is advantageous to do so. For example, switching to a newer version of HTTP is advantageous over older versions, and switching to a real-time, synchronous protocol might be advantageous when delivering resources that use such features.</p>\n<h1 id=\"Successful-2xx\"><a href=\"#Successful-2xx\" class=\"headerlink\" title=\"Successful 2xx\"></a>Successful 2xx</h1><p>This class of status code indicates that the client’s request was successfully received, understood, and accepted.</p>\n<h2 id=\"200-OK\"><a href=\"#200-OK\" class=\"headerlink\" title=\"200 OK\"></a>200 OK</h2><p>The request has succeeded. The information returned with the response is dependent on the method used in the request, for example:</p>\n<p>GET an entity corresponding to the requested resource is sent in the response;</p>\n<p>HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body;</p>\n<p>POST an entity describing or containing the result of the action;</p>\n<p>TRACE an entity containing the request message as received by the end server.</p>\n<h2 id=\"201-Created\"><a href=\"#201-Created\" class=\"headerlink\" title=\"201 Created\"></a>201 Created</h2><p>The request has been fulfilled and resulted in a new resource being created. The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a Location header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. The origin server MUST create the resource before returning the 201 status code. If the action cannot be carried out immediately, the server SHOULD respond with 202 (Accepted) response instead.</p>\n<p>A 201 response MAY contain an ETag response header field indicating the current value of the entity tag for the requested variant just created, see section 14.19.</p>\n<h2 id=\"202-Accepted\"><a href=\"#202-Accepted\" class=\"headerlink\" title=\"202 Accepted\"></a>202 Accepted</h2><p>The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.</p>\n<p>The 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent’s connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request’s current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.</p>\n<h2 id=\"203-Non-Authoritative-Information\"><a href=\"#203-Non-Authoritative-Information\" class=\"headerlink\" title=\"203 Non-Authoritative Information\"></a>203 Non-Authoritative Information</h2><p>The returned metainformation in the entity-header is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy. The set presented MAY be a subset or superset of the original version. For example, including local annotation information about the resource might result in a superset of the metainformation known by the origin server. Use of this response code is not required and is only appropriate when the response would otherwise be 200 (OK).</p>\n<h2 id=\"204-No-Content\"><a href=\"#204-No-Content\" class=\"headerlink\" title=\"204 No Content\"></a>204 No Content</h2><p>The server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation. The response MAY include new or updated metainformation in the form of entity-headers, which if present SHOULD be associated with the requested variant.</p>\n<p>If the client is a user agent, it SHOULD NOT change its document view from that which caused the request to be sent. This response is primarily intended to allow input for actions to take place without causing a change to the user agent’s active document view, although any new or updated metainformation SHOULD be applied to the document currently in the user agent’s active view.</p>\n<p>The 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.</p>\n<h2 id=\"205-Reset-Content\"><a href=\"#205-Reset-Content\" class=\"headerlink\" title=\"205 Reset Content\"></a>205 Reset Content</h2><p>The server has fulfilled the request and the user agent SHOULD reset the document view which caused the request to be sent. This response is primarily intended to allow input for actions to take place via user input, followed by a clearing of the form in which the input is given so that the user can easily initiate another input action. The response MUST NOT include an entity.</p>\n<h2 id=\"206-Partial-Content\"><a href=\"#206-Partial-Content\" class=\"headerlink\" title=\"206 Partial Content\"></a>206 Partial Content</h2><p>The server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field (section 14.35) indicating the desired range, and MAY have included an If-Range header field (section 14.27) to make the request conditional.</p>\n<p>The response MUST include the following header fields:</p>\n<pre><code>- Either a Content-Range header field (section 14.16) indicating\n  the range included with this response, or a multipart/byteranges\n  Content-Type including Content-Range fields for each part. If a\n  Content-Length header field is present in the response, its\n  value MUST match the actual number of OCTETs transmitted in the\n  message-body.\n- Date\n- ETag and/or Content-Location, if the header would have been sent\n  in a 200 response to the same request\n- Expires, Cache-Control, and/or Vary, if the field-value might\n  differ from that sent in any previous response for the same\n  variant\n</code></pre><p>If the 206 response is the result of an If-Range request that used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. If the response is the result of an If-Range request that used a weak validator, the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers. Otherwise, the response MUST include all of the entity-headers that would have been returned with a 200 (OK) response to the same request.</p>\n<p>A cache MUST NOT combine a 206 response with other previously cached content if the ETag or Last-Modified headers do not match exactly, see 13.5.4.</p>\n<p>A cache that does not support the Range and Content-Range headers MUST NOT cache 206 (Partial) responses.</p>\n<h1 id=\"Redirection-3xx\"><a href=\"#Redirection-3xx\" class=\"headerlink\" title=\"Redirection 3xx\"></a>Redirection 3xx</h1><p>This class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.</p>\n<pre><code>Note: previous versions of this specification recommended a\nmaximum of five redirections. Content developers should be aware\nthat there might be clients that implement such a fixed\nlimitation.\n</code></pre><h2 id=\"300-Multiple-Choices\"><a href=\"#300-Multiple-Choices\" class=\"headerlink\" title=\"300 Multiple Choices\"></a>300 Multiple Choices</h2><p>The requested resource corresponds to any one of a set of representations, each with its own specific location, and agent- driven negotiation information (section 12) is being provided so that the user (or user agent) can select a preferred representation and redirect its request to that location.</p>\n<p>Unless it was a HEAD request, the response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content- Type header field. Depending upon the format and the capabilities of</p>\n<p>the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</p>\n<p>If the server has a preferred choice of representation, it SHOULD include the specific URI for that representation in the Location field; user agents MAY use the Location field value for automatic redirection. This response is cacheable unless indicated otherwise.</p>\n<h2 id=\"301-Moved-Permanently\"><a href=\"#301-Moved-Permanently\" class=\"headerlink\" title=\"301 Moved Permanently\"></a>301 Moved Permanently</h2><p>The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.</p>\n<p>The new permanent URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p>\n<p>If the 301 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p>\n<pre><code>Note: When automatically redirecting a POST request after\nreceiving a 301 status code, some existing HTTP/1.0 user agents\nwill erroneously change it into a GET request.\n</code></pre><h2 id=\"302-Found\"><a href=\"#302-Found\" class=\"headerlink\" title=\"302 Found\"></a>302 Found</h2><p>The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.</p>\n<p>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p>\n<p>If the 302 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p>\n<pre><code>Note: RFC 1945 and RFC 2068 specify that the client is not allowed\nto change the method on the redirected request.  However, most\nexisting user agent implementations treat 302 as if it were a 303\nresponse, performing a GET on the Location field-value regardless\nof the original request method. The status codes 303 and 307 have\nbeen added for servers that wish to make unambiguously clear which\nkind of reaction is expected of the client.\n</code></pre><h2 id=\"303-See-Other\"><a href=\"#303-See-Other\" class=\"headerlink\" title=\"303 See Other\"></a>303 See Other</h2><p>The response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. The 303 response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.</p>\n<p>The different URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p>\n<pre><code>Note: Many pre-HTTP/1.1 user agents do not understand the 303\nstatus. When interoperability with such clients is a concern, the\n302 status code may be used instead, since most user agents react\nto a 302 response as described here for 303.\n</code></pre><h2 id=\"304-Not-Modified\"><a href=\"#304-Not-Modified\" class=\"headerlink\" title=\"304 Not Modified\"></a>304 Not Modified</h2><p>If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.</p>\n<p>The response MUST include the following header fields:</p>\n<pre><code>- Date, unless its omission is required by section 14.18.1\n</code></pre><p>If a clockless origin server obeys these rules, and proxies and clients add their own Date to any response received without one (as already specified by [RFC 2068], section 14.19), caches will operate correctly.</p>\n<pre><code>- ETag and/or Content-Location, if the header would have been sent\n  in a 200 response to the same request\n- Expires, Cache-Control, and/or Vary, if the field-value might\n  differ from that sent in any previous response for the same\n  variant\n</code></pre><p>If the conditional GET used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. Otherwise (i.e., the conditional GET used a weak validator), the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers.</p>\n<p>If a 304 response indicates an entity not currently cached, then the cache MUST disregard the response and repeat the request without the conditional.</p>\n<p>If a cache uses a received 304 response to update a cache entry, the cache MUST update the entry to reflect any new field values given in the response.</p>\n<h2 id=\"305-Use-Proxy\"><a href=\"#305-Use-Proxy\" class=\"headerlink\" title=\"305 Use Proxy\"></a>305 Use Proxy</h2><p>The requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. 305 responses MUST only be generated by origin servers.</p>\n<pre><code>Note: RFC 2068 was not clear that 305 was intended to redirect a\nsingle request, and to be generated by origin servers only.  Not\nobserving these limitations has significant security consequences.\n</code></pre><h2 id=\"306-Unused\"><a href=\"#306-Unused\" class=\"headerlink\" title=\"306 (Unused)\"></a>306 (Unused)</h2><p>The 306 status code was used in a previous version of the specification, is no longer used, and the code is reserved.</p>\n<h2 id=\"307-Temporary-Redirect\"><a href=\"#307-Temporary-Redirect\" class=\"headerlink\" title=\"307 Temporary Redirect\"></a>307 Temporary Redirect</h2><p>The requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.</p>\n<p>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s) , since many pre-HTTP/1.1 user agents do not understand the 307 status. Therefore, the note SHOULD contain the information necessary for a user to repeat the original request on the new URI.</p>\n<p>If the 307 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p>\n<h1 id=\"Client-Error-4xx\"><a href=\"#Client-Error-4xx\" class=\"headerlink\" title=\"Client Error 4xx\"></a>Client Error 4xx</h1><p>The 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.</p>\n<p>If the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server’s TCP stack will send a reset packet to the client, which may erase the client’s unacknowledged input buffers before they can be read and interpreted by the HTTP application.</p>\n<h2 id=\"400-Bad-Request\"><a href=\"#400-Bad-Request\" class=\"headerlink\" title=\"400 Bad Request\"></a>400 Bad Request</h2><p>The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.</p>\n<h2 id=\"401-Unauthorized\"><a href=\"#401-Unauthorized\" class=\"headerlink\" title=\"401 Unauthorized\"></a>401 Unauthorized</h2><p>The request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in “HTTP Authentication: Basic and Digest Access Authentication” [43].</p>\n<h2 id=\"402-Payment-Required\"><a href=\"#402-Payment-Required\" class=\"headerlink\" title=\"402 Payment Required\"></a>402 Payment Required</h2><p>This code is reserved for future use.</p>\n<h2 id=\"403-Forbidden\"><a href=\"#403-Forbidden\" class=\"headerlink\" title=\"403 Forbidden\"></a>403 Forbidden</h2><p>The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.</p>\n<h2 id=\"404-Not-Found\"><a href=\"#404-Not-Found\" class=\"headerlink\" title=\"404 Not Found\"></a>404 Not Found</h2><p>The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.</p>\n<h2 id=\"405-Method-Not-Allowed\"><a href=\"#405-Method-Not-Allowed\" class=\"headerlink\" title=\"405 Method Not Allowed\"></a>405 Method Not Allowed</h2><p>The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource.</p>\n<h2 id=\"406-Not-Acceptable\"><a href=\"#406-Not-Acceptable\" class=\"headerlink\" title=\"406 Not Acceptable\"></a>406 Not Acceptable</h2><p>The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.</p>\n<p>Unless it was a HEAD request, the response SHOULD include an entity containing a list of available entity characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. Depending upon the format and the capabilities of the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</p>\n<pre><code>Note: HTTP/1.1 servers are allowed to return responses which are\nnot acceptable according to the accept headers sent in the\nrequest. In some cases, this may even be preferable to sending a\n406 response. User agents are encouraged to inspect the headers of\nan incoming response to determine if it is acceptable.\n</code></pre><p>If the response could be unacceptable, a user agent SHOULD temporarily stop receipt of more data and query the user for a decision on further actions.</p>\n<h2 id=\"407-Proxy-Authentication-Required\"><a href=\"#407-Proxy-Authentication-Required\" class=\"headerlink\" title=\"407 Proxy Authentication Required\"></a>407 Proxy Authentication Required</h2><p>This code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy. The proxy MUST return a Proxy-Authenticate header field (section 14.33) containing a challenge applicable to the proxy for the requested resource. The client MAY repeat the request with a suitable Proxy-Authorization header field (section 14.34). HTTP access authentication is explained in “HTTP Authentication: Basic and Digest Access Authentication” [43].</p>\n<h2 id=\"408-Request-Timeout\"><a href=\"#408-Request-Timeout\" class=\"headerlink\" title=\"408 Request Timeout\"></a>408 Request Timeout</h2><p>The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.</p>\n<h2 id=\"409-Conflict\"><a href=\"#409-Conflict\" class=\"headerlink\" title=\"409 Conflict\"></a>409 Conflict</h2><p>The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough</p>\n<p>information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required.</p>\n<p>Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can’t complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type.</p>\n<h2 id=\"410-Gone\"><a href=\"#410-Gone\" class=\"headerlink\" title=\"410 Gone\"></a>410 Gone</h2><p>The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise.</p>\n<p>The 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server’s site. It is not necessary to mark all permanently unavailable resources as “gone” or to keep the mark for any length of time – that is left to the discretion of the server owner.</p>\n<h2 id=\"411-Length-Required\"><a href=\"#411-Length-Required\" class=\"headerlink\" title=\"411 Length Required\"></a>411 Length Required</h2><p>The server refuses to accept the request without a defined Content- Length. The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message-body in the request message.</p>\n<h2 id=\"412-Precondition-Failed\"><a href=\"#412-Precondition-Failed\" class=\"headerlink\" title=\"412 Precondition Failed\"></a>412 Precondition Failed</h2><p>The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. This response code allows the client to place preconditions on the current resource metainformation (header field data) and thus prevent the requested method from being applied to a resource other than the one intended.</p>\n<h2 id=\"413-Request-Entity-Too-Large\"><a href=\"#413-Request-Entity-Too-Large\" class=\"headerlink\" title=\"413 Request Entity Too Large\"></a>413 Request Entity Too Large</h2><p>The server is refusing to process a request because the request entity is larger than the server is willing or able to process. The server MAY close the connection to prevent the client from continuing the request.</p>\n<p>If the condition is temporary, the server SHOULD include a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.</p>\n<h2 id=\"414-Request-URI-Too-Long\"><a href=\"#414-Request-URI-Too-Long\" class=\"headerlink\" title=\"414 Request-URI Too Long\"></a>414 Request-URI Too Long</h2><p>The server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a URI “black hole” of redirection (e.g., a redirected URI prefix that points to a suffix of itself), or when the server is under attack by a client attempting to exploit security holes present in some servers using fixed-length buffers for reading or manipulating the Request-URI.</p>\n<h2 id=\"415-Unsupported-Media-Type\"><a href=\"#415-Unsupported-Media-Type\" class=\"headerlink\" title=\"415 Unsupported Media Type\"></a>415 Unsupported Media Type</h2><p>The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.</p>\n<h2 id=\"416-Requested-Range-Not-Satisfiable\"><a href=\"#416-Requested-Range-Not-Satisfiable\" class=\"headerlink\" title=\"416 Requested Range Not Satisfiable\"></a>416 Requested Range Not Satisfiable</h2><p>A server SHOULD return a response with this status code if a request included a Range request-header field (section 14.35), and none of the range-specifier values in this field overlap the current extent of the selected resource, and the request did not include an If-Range request-header field. (For byte-ranges, this means that the first- byte-pos of all of the byte-range-spec values were greater than the current length of the selected resource.)</p>\n<p>When this status code is returned for a byte-range request, the response SHOULD include a Content-Range entity-header field specifying the current length of the selected resource (see section 14.16). This response MUST NOT use the multipart/byteranges content- type.</p>\n<h2 id=\"417-Expectation-Failed\"><a href=\"#417-Expectation-Failed\" class=\"headerlink\" title=\"417 Expectation Failed\"></a>417 Expectation Failed</h2><p>The expectation given in an Expect request-header field (see section 14.20) could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server.</p>\n<h1 id=\"Server-Error-5xx\"><a href=\"#Server-Error-5xx\" class=\"headerlink\" title=\"Server Error 5xx\"></a>Server Error 5xx</h1><p>Response status codes beginning with the digit “5” indicate cases in which the server is aware that it has erred or is incapable of performing the request. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. User agents SHOULD display any included entity to the user. These response codes are applicable to any request method.</p>\n<h2 id=\"500-Internal-Server-Error\"><a href=\"#500-Internal-Server-Error\" class=\"headerlink\" title=\"500 Internal Server Error\"></a>500 Internal Server Error</h2><p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>\n<h2 id=\"501-Not-Implemented\"><a href=\"#501-Not-Implemented\" class=\"headerlink\" title=\"501 Not Implemented\"></a>501 Not Implemented</h2><p>The server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource.</p>\n<h2 id=\"502-Bad-Gateway\"><a href=\"#502-Bad-Gateway\" class=\"headerlink\" title=\"502 Bad Gateway\"></a>502 Bad Gateway</h2><p>The server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request.</p>\n<h2 id=\"503-Service-Unavailable\"><a href=\"#503-Service-Unavailable\" class=\"headerlink\" title=\"503 Service Unavailable\"></a>503 Service Unavailable</h2><p>The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response.</p>\n<pre><code>Note: The existence of the 503 status code does not imply that a\nserver must use it when becoming overloaded. Some servers may wish\nto simply refuse the connection.\n</code></pre><h2 id=\"504-Gateway-Timeout\"><a href=\"#504-Gateway-Timeout\" class=\"headerlink\" title=\"504 Gateway Timeout\"></a>504 Gateway Timeout</h2><p>The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request.</p>\n<pre><code>Note: Note to implementors: some deployed proxies are known to\nreturn 400 or 500 when DNS lookups time out.\n</code></pre><h2 id=\"505-HTTP-Version-Not-Supported\"><a href=\"#505-HTTP-Version-Not-Supported\" class=\"headerlink\" title=\"505 HTTP Version Not Supported\"></a>505 HTTP Version Not Supported</h2><p>The server does not support, or refuses to support, the HTTP protocol version that was used in the request message. The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in section 3.1, other than with this error message. The response SHOULD contain an entity describing why that version is not supported and what other protocols are supported by that server.</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<blockquote>\n<p>原文地址：<a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html\" target=\"_blank\" rel=\"noopener\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html</a></p>\n</blockquote>\n<h1 id=\"Status-Code-Definitions\"><a href=\"#Status-Code-Definitions\" class=\"headerlink\" title=\"Status Code Definitions\"></a>Status Code Definitions</h1><p>Each Status-Code is described below, including a description of which method(s) it can follow and any metainformation required in the response.<br>","more":"</p>\n<h1 id=\"Informational-1xx\"><a href=\"#Informational-1xx\" class=\"headerlink\" title=\"Informational 1xx\"></a>Informational 1xx</h1><p>This class of status code indicates a provisional response, consisting only of the Status-Line and optional headers, and is terminated by an empty line. There are no required headers for this class of status code. Since HTTP/1.0 did not define any 1xx status codes, servers MUST NOT send a 1xx response to an HTTP/1.0 client except under experimental conditions.</p>\n<p>A client MUST be prepared to accept one or more 1xx status responses prior to a regular response, even if the client does not expect a 100 (Continue) status message. Unexpected 1xx status responses MAY be ignored by a user agent.</p>\n<p>Proxies MUST forward 1xx responses, unless the connection between the proxy and its client has been closed, or unless the proxy itself requested the generation of the 1xx response. (For example, if a</p>\n<p>proxy adds a “Expect: 100-continue” field when it forwards a request, then it need not forward the corresponding 100 (Continue) response(s).)</p>\n<h2 id=\"100-Continue\"><a href=\"#100-Continue\" class=\"headerlink\" title=\"100 Continue\"></a>100 Continue</h2><p>The client SHOULD continue with its request. This interim response is used to inform the client that the initial part of the request has been received and has not yet been rejected by the server. The client SHOULD continue by sending the remainder of the request or, if the request has already been completed, ignore this response. The server MUST send a final response after the request has been completed. See section 8.2.3 for detailed discussion of the use and handling of this status code.</p>\n<h2 id=\"101-Switching-Protocols\"><a href=\"#101-Switching-Protocols\" class=\"headerlink\" title=\"101 Switching Protocols\"></a>101 Switching Protocols</h2><p>The server understands and is willing to comply with the client’s request, via the Upgrade message header field (section 14.42), for a change in the application protocol being used on this connection. The server will switch protocols to those defined by the response’s Upgrade header field immediately after the empty line which terminates the 101 response.</p>\n<p>The protocol SHOULD be switched only when it is advantageous to do so. For example, switching to a newer version of HTTP is advantageous over older versions, and switching to a real-time, synchronous protocol might be advantageous when delivering resources that use such features.</p>\n<h1 id=\"Successful-2xx\"><a href=\"#Successful-2xx\" class=\"headerlink\" title=\"Successful 2xx\"></a>Successful 2xx</h1><p>This class of status code indicates that the client’s request was successfully received, understood, and accepted.</p>\n<h2 id=\"200-OK\"><a href=\"#200-OK\" class=\"headerlink\" title=\"200 OK\"></a>200 OK</h2><p>The request has succeeded. The information returned with the response is dependent on the method used in the request, for example:</p>\n<p>GET an entity corresponding to the requested resource is sent in the response;</p>\n<p>HEAD the entity-header fields corresponding to the requested resource are sent in the response without any message-body;</p>\n<p>POST an entity describing or containing the result of the action;</p>\n<p>TRACE an entity containing the request message as received by the end server.</p>\n<h2 id=\"201-Created\"><a href=\"#201-Created\" class=\"headerlink\" title=\"201 Created\"></a>201 Created</h2><p>The request has been fulfilled and resulted in a new resource being created. The newly created resource can be referenced by the URI(s) returned in the entity of the response, with the most specific URI for the resource given by a Location header field. The response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. The origin server MUST create the resource before returning the 201 status code. If the action cannot be carried out immediately, the server SHOULD respond with 202 (Accepted) response instead.</p>\n<p>A 201 response MAY contain an ETag response header field indicating the current value of the entity tag for the requested variant just created, see section 14.19.</p>\n<h2 id=\"202-Accepted\"><a href=\"#202-Accepted\" class=\"headerlink\" title=\"202 Accepted\"></a>202 Accepted</h2><p>The request has been accepted for processing, but the processing has not been completed. The request might or might not eventually be acted upon, as it might be disallowed when processing actually takes place. There is no facility for re-sending a status code from an asynchronous operation such as this.</p>\n<p>The 202 response is intentionally non-committal. Its purpose is to allow a server to accept a request for some other process (perhaps a batch-oriented process that is only run once per day) without requiring that the user agent’s connection to the server persist until the process is completed. The entity returned with this response SHOULD include an indication of the request’s current status and either a pointer to a status monitor or some estimate of when the user can expect the request to be fulfilled.</p>\n<h2 id=\"203-Non-Authoritative-Information\"><a href=\"#203-Non-Authoritative-Information\" class=\"headerlink\" title=\"203 Non-Authoritative Information\"></a>203 Non-Authoritative Information</h2><p>The returned metainformation in the entity-header is not the definitive set as available from the origin server, but is gathered from a local or a third-party copy. The set presented MAY be a subset or superset of the original version. For example, including local annotation information about the resource might result in a superset of the metainformation known by the origin server. Use of this response code is not required and is only appropriate when the response would otherwise be 200 (OK).</p>\n<h2 id=\"204-No-Content\"><a href=\"#204-No-Content\" class=\"headerlink\" title=\"204 No Content\"></a>204 No Content</h2><p>The server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation. The response MAY include new or updated metainformation in the form of entity-headers, which if present SHOULD be associated with the requested variant.</p>\n<p>If the client is a user agent, it SHOULD NOT change its document view from that which caused the request to be sent. This response is primarily intended to allow input for actions to take place without causing a change to the user agent’s active document view, although any new or updated metainformation SHOULD be applied to the document currently in the user agent’s active view.</p>\n<p>The 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.</p>\n<h2 id=\"205-Reset-Content\"><a href=\"#205-Reset-Content\" class=\"headerlink\" title=\"205 Reset Content\"></a>205 Reset Content</h2><p>The server has fulfilled the request and the user agent SHOULD reset the document view which caused the request to be sent. This response is primarily intended to allow input for actions to take place via user input, followed by a clearing of the form in which the input is given so that the user can easily initiate another input action. The response MUST NOT include an entity.</p>\n<h2 id=\"206-Partial-Content\"><a href=\"#206-Partial-Content\" class=\"headerlink\" title=\"206 Partial Content\"></a>206 Partial Content</h2><p>The server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field (section 14.35) indicating the desired range, and MAY have included an If-Range header field (section 14.27) to make the request conditional.</p>\n<p>The response MUST include the following header fields:</p>\n<pre><code>- Either a Content-Range header field (section 14.16) indicating\n  the range included with this response, or a multipart/byteranges\n  Content-Type including Content-Range fields for each part. If a\n  Content-Length header field is present in the response, its\n  value MUST match the actual number of OCTETs transmitted in the\n  message-body.\n- Date\n- ETag and/or Content-Location, if the header would have been sent\n  in a 200 response to the same request\n- Expires, Cache-Control, and/or Vary, if the field-value might\n  differ from that sent in any previous response for the same\n  variant\n</code></pre><p>If the 206 response is the result of an If-Range request that used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. If the response is the result of an If-Range request that used a weak validator, the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers. Otherwise, the response MUST include all of the entity-headers that would have been returned with a 200 (OK) response to the same request.</p>\n<p>A cache MUST NOT combine a 206 response with other previously cached content if the ETag or Last-Modified headers do not match exactly, see 13.5.4.</p>\n<p>A cache that does not support the Range and Content-Range headers MUST NOT cache 206 (Partial) responses.</p>\n<h1 id=\"Redirection-3xx\"><a href=\"#Redirection-3xx\" class=\"headerlink\" title=\"Redirection 3xx\"></a>Redirection 3xx</h1><p>This class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.</p>\n<pre><code>Note: previous versions of this specification recommended a\nmaximum of five redirections. Content developers should be aware\nthat there might be clients that implement such a fixed\nlimitation.\n</code></pre><h2 id=\"300-Multiple-Choices\"><a href=\"#300-Multiple-Choices\" class=\"headerlink\" title=\"300 Multiple Choices\"></a>300 Multiple Choices</h2><p>The requested resource corresponds to any one of a set of representations, each with its own specific location, and agent- driven negotiation information (section 12) is being provided so that the user (or user agent) can select a preferred representation and redirect its request to that location.</p>\n<p>Unless it was a HEAD request, the response SHOULD include an entity containing a list of resource characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content- Type header field. Depending upon the format and the capabilities of</p>\n<p>the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</p>\n<p>If the server has a preferred choice of representation, it SHOULD include the specific URI for that representation in the Location field; user agents MAY use the Location field value for automatic redirection. This response is cacheable unless indicated otherwise.</p>\n<h2 id=\"301-Moved-Permanently\"><a href=\"#301-Moved-Permanently\" class=\"headerlink\" title=\"301 Moved Permanently\"></a>301 Moved Permanently</h2><p>The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.</p>\n<p>The new permanent URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p>\n<p>If the 301 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p>\n<pre><code>Note: When automatically redirecting a POST request after\nreceiving a 301 status code, some existing HTTP/1.0 user agents\nwill erroneously change it into a GET request.\n</code></pre><h2 id=\"302-Found\"><a href=\"#302-Found\" class=\"headerlink\" title=\"302 Found\"></a>302 Found</h2><p>The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.</p>\n<p>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p>\n<p>If the 302 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p>\n<pre><code>Note: RFC 1945 and RFC 2068 specify that the client is not allowed\nto change the method on the redirected request.  However, most\nexisting user agent implementations treat 302 as if it were a 303\nresponse, performing a GET on the Location field-value regardless\nof the original request method. The status codes 303 and 307 have\nbeen added for servers that wish to make unambiguously clear which\nkind of reaction is expected of the client.\n</code></pre><h2 id=\"303-See-Other\"><a href=\"#303-See-Other\" class=\"headerlink\" title=\"303 See Other\"></a>303 See Other</h2><p>The response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. The 303 response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.</p>\n<p>The different URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</p>\n<pre><code>Note: Many pre-HTTP/1.1 user agents do not understand the 303\nstatus. When interoperability with such clients is a concern, the\n302 status code may be used instead, since most user agents react\nto a 302 response as described here for 303.\n</code></pre><h2 id=\"304-Not-Modified\"><a href=\"#304-Not-Modified\" class=\"headerlink\" title=\"304 Not Modified\"></a>304 Not Modified</h2><p>If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. The 304 response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.</p>\n<p>The response MUST include the following header fields:</p>\n<pre><code>- Date, unless its omission is required by section 14.18.1\n</code></pre><p>If a clockless origin server obeys these rules, and proxies and clients add their own Date to any response received without one (as already specified by [RFC 2068], section 14.19), caches will operate correctly.</p>\n<pre><code>- ETag and/or Content-Location, if the header would have been sent\n  in a 200 response to the same request\n- Expires, Cache-Control, and/or Vary, if the field-value might\n  differ from that sent in any previous response for the same\n  variant\n</code></pre><p>If the conditional GET used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. Otherwise (i.e., the conditional GET used a weak validator), the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers.</p>\n<p>If a 304 response indicates an entity not currently cached, then the cache MUST disregard the response and repeat the request without the conditional.</p>\n<p>If a cache uses a received 304 response to update a cache entry, the cache MUST update the entry to reflect any new field values given in the response.</p>\n<h2 id=\"305-Use-Proxy\"><a href=\"#305-Use-Proxy\" class=\"headerlink\" title=\"305 Use Proxy\"></a>305 Use Proxy</h2><p>The requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. 305 responses MUST only be generated by origin servers.</p>\n<pre><code>Note: RFC 2068 was not clear that 305 was intended to redirect a\nsingle request, and to be generated by origin servers only.  Not\nobserving these limitations has significant security consequences.\n</code></pre><h2 id=\"306-Unused\"><a href=\"#306-Unused\" class=\"headerlink\" title=\"306 (Unused)\"></a>306 (Unused)</h2><p>The 306 status code was used in a previous version of the specification, is no longer used, and the code is reserved.</p>\n<h2 id=\"307-Temporary-Redirect\"><a href=\"#307-Temporary-Redirect\" class=\"headerlink\" title=\"307 Temporary Redirect\"></a>307 Temporary Redirect</h2><p>The requested resource resides temporarily under a different URI. Since the redirection MAY be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.</p>\n<p>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s) , since many pre-HTTP/1.1 user agents do not understand the 307 status. Therefore, the note SHOULD contain the information necessary for a user to repeat the original request on the new URI.</p>\n<p>If the 307 status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</p>\n<h1 id=\"Client-Error-4xx\"><a href=\"#Client-Error-4xx\" class=\"headerlink\" title=\"Client Error 4xx\"></a>Client Error 4xx</h1><p>The 4xx class of status code is intended for cases in which the client seems to have erred. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. These status codes are applicable to any request method. User agents SHOULD display any included entity to the user.</p>\n<p>If the client is sending data, a server implementation using TCP SHOULD be careful to ensure that the client acknowledges receipt of the packet(s) containing the response, before the server closes the input connection. If the client continues sending data to the server after the close, the server’s TCP stack will send a reset packet to the client, which may erase the client’s unacknowledged input buffers before they can be read and interpreted by the HTTP application.</p>\n<h2 id=\"400-Bad-Request\"><a href=\"#400-Bad-Request\" class=\"headerlink\" title=\"400 Bad Request\"></a>400 Bad Request</h2><p>The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.</p>\n<h2 id=\"401-Unauthorized\"><a href=\"#401-Unauthorized\" class=\"headerlink\" title=\"401 Unauthorized\"></a>401 Unauthorized</h2><p>The request requires user authentication. The response MUST include a WWW-Authenticate header field (section 14.47) containing a challenge applicable to the requested resource. The client MAY repeat the request with a suitable Authorization header field (section 14.8). If the request already included Authorization credentials, then the 401 response indicates that authorization has been refused for those credentials. If the 401 response contains the same challenge as the prior response, and the user agent has already attempted authentication at least once, then the user SHOULD be presented the entity that was given in the response, since that entity might include relevant diagnostic information. HTTP access authentication is explained in “HTTP Authentication: Basic and Digest Access Authentication” [43].</p>\n<h2 id=\"402-Payment-Required\"><a href=\"#402-Payment-Required\" class=\"headerlink\" title=\"402 Payment Required\"></a>402 Payment Required</h2><p>This code is reserved for future use.</p>\n<h2 id=\"403-Forbidden\"><a href=\"#403-Forbidden\" class=\"headerlink\" title=\"403 Forbidden\"></a>403 Forbidden</h2><p>The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead.</p>\n<h2 id=\"404-Not-Found\"><a href=\"#404-Not-Found\" class=\"headerlink\" title=\"404 Not Found\"></a>404 Not Found</h2><p>The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable.</p>\n<h2 id=\"405-Method-Not-Allowed\"><a href=\"#405-Method-Not-Allowed\" class=\"headerlink\" title=\"405 Method Not Allowed\"></a>405 Method Not Allowed</h2><p>The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource.</p>\n<h2 id=\"406-Not-Acceptable\"><a href=\"#406-Not-Acceptable\" class=\"headerlink\" title=\"406 Not Acceptable\"></a>406 Not Acceptable</h2><p>The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.</p>\n<p>Unless it was a HEAD request, the response SHOULD include an entity containing a list of available entity characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. Depending upon the format and the capabilities of the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</p>\n<pre><code>Note: HTTP/1.1 servers are allowed to return responses which are\nnot acceptable according to the accept headers sent in the\nrequest. In some cases, this may even be preferable to sending a\n406 response. User agents are encouraged to inspect the headers of\nan incoming response to determine if it is acceptable.\n</code></pre><p>If the response could be unacceptable, a user agent SHOULD temporarily stop receipt of more data and query the user for a decision on further actions.</p>\n<h2 id=\"407-Proxy-Authentication-Required\"><a href=\"#407-Proxy-Authentication-Required\" class=\"headerlink\" title=\"407 Proxy Authentication Required\"></a>407 Proxy Authentication Required</h2><p>This code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy. The proxy MUST return a Proxy-Authenticate header field (section 14.33) containing a challenge applicable to the proxy for the requested resource. The client MAY repeat the request with a suitable Proxy-Authorization header field (section 14.34). HTTP access authentication is explained in “HTTP Authentication: Basic and Digest Access Authentication” [43].</p>\n<h2 id=\"408-Request-Timeout\"><a href=\"#408-Request-Timeout\" class=\"headerlink\" title=\"408 Request Timeout\"></a>408 Request Timeout</h2><p>The client did not produce a request within the time that the server was prepared to wait. The client MAY repeat the request without modifications at any later time.</p>\n<h2 id=\"409-Conflict\"><a href=\"#409-Conflict\" class=\"headerlink\" title=\"409 Conflict\"></a>409 Conflict</h2><p>The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough</p>\n<p>information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required.</p>\n<p>Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can’t complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type.</p>\n<h2 id=\"410-Gone\"><a href=\"#410-Gone\" class=\"headerlink\" title=\"410 Gone\"></a>410 Gone</h2><p>The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise.</p>\n<p>The 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server’s site. It is not necessary to mark all permanently unavailable resources as “gone” or to keep the mark for any length of time – that is left to the discretion of the server owner.</p>\n<h2 id=\"411-Length-Required\"><a href=\"#411-Length-Required\" class=\"headerlink\" title=\"411 Length Required\"></a>411 Length Required</h2><p>The server refuses to accept the request without a defined Content- Length. The client MAY repeat the request if it adds a valid Content-Length header field containing the length of the message-body in the request message.</p>\n<h2 id=\"412-Precondition-Failed\"><a href=\"#412-Precondition-Failed\" class=\"headerlink\" title=\"412 Precondition Failed\"></a>412 Precondition Failed</h2><p>The precondition given in one or more of the request-header fields evaluated to false when it was tested on the server. This response code allows the client to place preconditions on the current resource metainformation (header field data) and thus prevent the requested method from being applied to a resource other than the one intended.</p>\n<h2 id=\"413-Request-Entity-Too-Large\"><a href=\"#413-Request-Entity-Too-Large\" class=\"headerlink\" title=\"413 Request Entity Too Large\"></a>413 Request Entity Too Large</h2><p>The server is refusing to process a request because the request entity is larger than the server is willing or able to process. The server MAY close the connection to prevent the client from continuing the request.</p>\n<p>If the condition is temporary, the server SHOULD include a Retry- After header field to indicate that it is temporary and after what time the client MAY try again.</p>\n<h2 id=\"414-Request-URI-Too-Long\"><a href=\"#414-Request-URI-Too-Long\" class=\"headerlink\" title=\"414 Request-URI Too Long\"></a>414 Request-URI Too Long</h2><p>The server is refusing to service the request because the Request-URI is longer than the server is willing to interpret. This rare condition is only likely to occur when a client has improperly converted a POST request to a GET request with long query information, when the client has descended into a URI “black hole” of redirection (e.g., a redirected URI prefix that points to a suffix of itself), or when the server is under attack by a client attempting to exploit security holes present in some servers using fixed-length buffers for reading or manipulating the Request-URI.</p>\n<h2 id=\"415-Unsupported-Media-Type\"><a href=\"#415-Unsupported-Media-Type\" class=\"headerlink\" title=\"415 Unsupported Media Type\"></a>415 Unsupported Media Type</h2><p>The server is refusing to service the request because the entity of the request is in a format not supported by the requested resource for the requested method.</p>\n<h2 id=\"416-Requested-Range-Not-Satisfiable\"><a href=\"#416-Requested-Range-Not-Satisfiable\" class=\"headerlink\" title=\"416 Requested Range Not Satisfiable\"></a>416 Requested Range Not Satisfiable</h2><p>A server SHOULD return a response with this status code if a request included a Range request-header field (section 14.35), and none of the range-specifier values in this field overlap the current extent of the selected resource, and the request did not include an If-Range request-header field. (For byte-ranges, this means that the first- byte-pos of all of the byte-range-spec values were greater than the current length of the selected resource.)</p>\n<p>When this status code is returned for a byte-range request, the response SHOULD include a Content-Range entity-header field specifying the current length of the selected resource (see section 14.16). This response MUST NOT use the multipart/byteranges content- type.</p>\n<h2 id=\"417-Expectation-Failed\"><a href=\"#417-Expectation-Failed\" class=\"headerlink\" title=\"417 Expectation Failed\"></a>417 Expectation Failed</h2><p>The expectation given in an Expect request-header field (see section 14.20) could not be met by this server, or, if the server is a proxy, the server has unambiguous evidence that the request could not be met by the next-hop server.</p>\n<h1 id=\"Server-Error-5xx\"><a href=\"#Server-Error-5xx\" class=\"headerlink\" title=\"Server Error 5xx\"></a>Server Error 5xx</h1><p>Response status codes beginning with the digit “5” indicate cases in which the server is aware that it has erred or is incapable of performing the request. Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition. User agents SHOULD display any included entity to the user. These response codes are applicable to any request method.</p>\n<h2 id=\"500-Internal-Server-Error\"><a href=\"#500-Internal-Server-Error\" class=\"headerlink\" title=\"500 Internal Server Error\"></a>500 Internal Server Error</h2><p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>\n<h2 id=\"501-Not-Implemented\"><a href=\"#501-Not-Implemented\" class=\"headerlink\" title=\"501 Not Implemented\"></a>501 Not Implemented</h2><p>The server does not support the functionality required to fulfill the request. This is the appropriate response when the server does not recognize the request method and is not capable of supporting it for any resource.</p>\n<h2 id=\"502-Bad-Gateway\"><a href=\"#502-Bad-Gateway\" class=\"headerlink\" title=\"502 Bad Gateway\"></a>502 Bad Gateway</h2><p>The server, while acting as a gateway or proxy, received an invalid response from the upstream server it accessed in attempting to fulfill the request.</p>\n<h2 id=\"503-Service-Unavailable\"><a href=\"#503-Service-Unavailable\" class=\"headerlink\" title=\"503 Service Unavailable\"></a>503 Service Unavailable</h2><p>The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response.</p>\n<pre><code>Note: The existence of the 503 status code does not imply that a\nserver must use it when becoming overloaded. Some servers may wish\nto simply refuse the connection.\n</code></pre><h2 id=\"504-Gateway-Timeout\"><a href=\"#504-Gateway-Timeout\" class=\"headerlink\" title=\"504 Gateway Timeout\"></a>504 Gateway Timeout</h2><p>The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request.</p>\n<pre><code>Note: Note to implementors: some deployed proxies are known to\nreturn 400 or 500 when DNS lookups time out.\n</code></pre><h2 id=\"505-HTTP-Version-Not-Supported\"><a href=\"#505-HTTP-Version-Not-Supported\" class=\"headerlink\" title=\"505 HTTP Version Not Supported\"></a>505 HTTP Version Not Supported</h2><p>The server does not support, or refuses to support, the HTTP protocol version that was used in the request message. The server is indicating that it is unable or unwilling to complete the request using the same major version as the client, as described in section 3.1, other than with this error message. The response SHOULD contain an entity describing why that version is not supported and what other protocols are supported by that server.</p>"},{"title":"Spring Cloud Config分布式配置中心的使用和遇到的坑","date":"2018-06-06T02:09:55.000Z","_content":"\n# 分布式配置中心\n\n为什么要有用分布式配置中心这玩意儿？现在这微服务大军已经覆盖了各种大小型企业，每个服务的粒度相对较小，因此系统中会出现大量的服务，每个服务都要有自己都一些配置信息，或者相同的配置信息，可能不同环境每个服务也有单独的一套配置，这种情况配置文件数量比较庞大，维护起来相当费劲，举个栗子：  \n在开发的过程中，一般数据库是开发环境数据库，所有服务DB的IP配置为：92.168.0.1，突然老大说，开发环境换了，DB的IP要修改，这下可不好受了，所有模块挨个修改DB的配置，就问你难受不难受？  \n这个时候分布式配置中心就发挥了很大的优势，只需要修改配置中心配置，所有服务即可自动生效，爽不爽！  \n\n<!-- more -->\n\n# Spring Cloud Config\n\n官网地址：http://cloud.spring.io/spring-cloud-config/\n\n## 简介\n\n`Spring Cloud Config`为服务端和客户端提供了分布式系统的外部化配置支持。配置服务器为各应用的所有环境提供了一个中心化的外部配置。它实现了对服务端和客户端对`Spring Environment`和`PropertySource`抽象的映射，所以它除了适用于Spring构建的应用程序，也可以在任何其他语言运行的应用程序中使用。作为一个应用可以通过部署管道来进行测试或者投入生产，我们可以分别为这些环境创建配置，并且在需要迁移环境的时候获取对应环境的配置来运行。  \n\n置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。当然他也提供本地化文件系统的存储方式。  \n\n使用 spring Cloud 进行集中式配置管理，将以往的配置文件从项目中摘除后放到Git 或svn中集中管理，并在需要变更的时候，可以通知到各应用程序，应用程序刷新配置不需要重启。  \n## 实现原理\n\n其实这个实现原理相对比较简单一些，基于git的交互操作。\n\n1. 我们把配置文件存放到git上面\n2. Spring Cloud Config配置中心服务连接git\n3. 客户端需要配置配置信息从配置中心服务获取\n4. 当客户端启动，会从配置中心获取git上面的配置信息\n\n# 配置中心服务端\n\n**pom.xml添加依赖**\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-config-server</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <!-- spring cloud -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Edgware.SR3</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n```\n\n**Application启动类添加注解**\n\n添加`@EnableConfigServer`注解，启用配置中心：\n\n```java\npackage com.qianxunclub;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n\n/**\n* @author chihiro.zhang\n*/\n@SpringBootApplication\n@EnableConfigServer\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n}\n```\n\n**配置文件**\n\n在`application.yml`或者`application.properties`添加配置信息：\n\n```yml\nspring:\n  cloud:\n    config:\n      server:\n        git:\n          uri: https://gitee.com/qianxunclub/spring-boot-config-repo\n          default-label: master\n          search-paths: /**\n          basedir: target/config\n```\n\n- spring.cloud.config.server.git.uri：配置git仓库地址\n- spring.cloud.config.server.git.search-paths：仓库文件夹目录，如果是`/**`，就是所有目录所有文件\n- spring.cloud.config.server.git.default-label：配置仓库的分支\n- spring.cloud.config.server.git.basedir：配置文件拉去到本地的目录位置\n\n**启动测试**\n\n首先在git里面添加一个`application-dev.yml`配置文件，内容如此下：\n```yml\ntest: 我是配置中心配置信息\n```\n\n已经配置完成了，启动一波试试，看效果咋样，正常情况下是可以正常启动的，然后获取配置文件试试  \n访问地址：http://localhost:8888/test/dev  \n如果返回如下，就是成功了：\n```json\n{\n    \"name\":\"test\",\n    \"profiles\":[\n        \"dev\"\n    ],\n    \"label\":null,\n    \"version\":\"64e7882a8f280641724e454a2db5a3da7b44d3d4\",\n    \"state\":null,\n    \"propertySources\":[\n        {\n            \"name\":\"https://gitee.com/qianxunclub/spring-boot-config-repo/application-dev.yml\",\n            \"source\":{\n                \"test\":\"配置中心的配置信息\"\n            }\n        }\n    ]\n}\n```\n\nhttp请求地址和资源文件映射如下:\n\n- /{application}/{profile}[/{label}]\n- /{application}-{profile}.yml\n- /{label}/{application}-{profile}.yml\n- /{application}-{profile}.properties\n- /{label}/{application}-{profile}.properties\n\n# 配置中心客户端使用\n\n**pom.xml添加依赖**  \n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-config</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <!-- spring cloud -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Edgware.SR3</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n```\n\n**配置文件**\n\n创建`bootstrap.yml`文件，切记，是`bootstrap.yml`文件`bootstrap.yml`文件，我就因为写到了`application.yml`这个里面，各种出现问题啊，添加如下配置：\n```yml\nspring:\n  cloud:\n    config:\n      name: application\n      profile: dev\n      label: master\n      uri: http://localhost:8888/\n```\n- spring.cloud.config.label：指明远程仓库的分支\n- spring.cloud.config.profile：指定不同环境配置文件，和git仓库的 `application-dev.yml`对应  \n- spring.cloud.config.name：配置名称，一般和git仓库的`application-dev.yml`对应\n- spring.cloud.config.uri：上面的配置中心服务地址  \n\n**启动测试**\n\n\n先添加一个获取配置信息的类:  \n```java\n\n\n/**\n * @author chihiro.zhang\n */\n@Configuration\n@EnableAutoConfiguration\npublic class DemoConfiguration {\n\n    @Value(\"${test}\")\n    private  String test;\n}\n\n```\n找个地方随便调用一下，输出这个test，就会打印上面git里面配置的信息了，爽不！\n\n\n# 说说中间遇到的坑\n\n1. 服务端git配置死活获取不了git仓库配置文件\n\n```yml\nspring:\n    cloud:\n        config:\n        server:\n            git:\n                uri: https://gitee.com/qianxunclub/spring-boot-config-repo\n                default-label: master\n                search-paths: /**\n                basedir: target/config\n```\n\n当时这个`uri`配置的是公司的git仓库，公司的git仓库访问是需要开代理才能有权限访问的，代理也开了，可是一直报错：\n\n```\nWhitelabel Error Page\nThis application has no explicit mapping for /error, so you are seeing this as a fallback.\n\nWed Jun 06 11:10:56 CST 2018\nThere was an unexpected error (type=Not Found, status=404).\nCannot clone or checkout repository: http://xxx.com:5080/framework/config-repo\n```\n很郁闷，不知道为啥，可是就在刚刚，就刚刚，写博客的时候，有测试了一下，通了。。。。日了狗了，不知道啥原因，等研究出来了再来补充。\n\n2. 客户端配置一定要配置在`bootstrap.yml`里面\n`uri`默认会调用端口为`8888`的地址`http://localhost:8888/`  \n启动的时候，会加载`label`和`uri`,`profile`配置，`profile`可以在启动参数添加，`profile`也可以加在`application.yml`添加  \n`name`也可以加在`application.yml`添加  \n\n# demo\n\n配置中心服务端：https://gitee.com/qianxunclub/qianxunclub-springboot-config  \n配置git仓库：https://gitee.com/qianxunclub/qianxunclub-springboot-config  \n配置客户端使用：https://gitee.com/qianxunclub/qianxunclub-starter-demo  \n客户端主要配置在：https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config","source":"_posts/java/spring-cloud/spring-cloud-config-fen-bu-shi-pei-zhi-zhong-xin.md","raw":"---\ntitle: Spring Cloud Config分布式配置中心的使用和遇到的坑\ndate: 2018-06-06 10:09:55\ntags: [Java,SpringCloud,分布式]\ncategories:\n  - Java\n  - SpringCloud\n---\n\n# 分布式配置中心\n\n为什么要有用分布式配置中心这玩意儿？现在这微服务大军已经覆盖了各种大小型企业，每个服务的粒度相对较小，因此系统中会出现大量的服务，每个服务都要有自己都一些配置信息，或者相同的配置信息，可能不同环境每个服务也有单独的一套配置，这种情况配置文件数量比较庞大，维护起来相当费劲，举个栗子：  \n在开发的过程中，一般数据库是开发环境数据库，所有服务DB的IP配置为：92.168.0.1，突然老大说，开发环境换了，DB的IP要修改，这下可不好受了，所有模块挨个修改DB的配置，就问你难受不难受？  \n这个时候分布式配置中心就发挥了很大的优势，只需要修改配置中心配置，所有服务即可自动生效，爽不爽！  \n\n<!-- more -->\n\n# Spring Cloud Config\n\n官网地址：http://cloud.spring.io/spring-cloud-config/\n\n## 简介\n\n`Spring Cloud Config`为服务端和客户端提供了分布式系统的外部化配置支持。配置服务器为各应用的所有环境提供了一个中心化的外部配置。它实现了对服务端和客户端对`Spring Environment`和`PropertySource`抽象的映射，所以它除了适用于Spring构建的应用程序，也可以在任何其他语言运行的应用程序中使用。作为一个应用可以通过部署管道来进行测试或者投入生产，我们可以分别为这些环境创建配置，并且在需要迁移环境的时候获取对应环境的配置来运行。  \n\n置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。当然他也提供本地化文件系统的存储方式。  \n\n使用 spring Cloud 进行集中式配置管理，将以往的配置文件从项目中摘除后放到Git 或svn中集中管理，并在需要变更的时候，可以通知到各应用程序，应用程序刷新配置不需要重启。  \n## 实现原理\n\n其实这个实现原理相对比较简单一些，基于git的交互操作。\n\n1. 我们把配置文件存放到git上面\n2. Spring Cloud Config配置中心服务连接git\n3. 客户端需要配置配置信息从配置中心服务获取\n4. 当客户端启动，会从配置中心获取git上面的配置信息\n\n# 配置中心服务端\n\n**pom.xml添加依赖**\n\n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-config-server</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <!-- spring cloud -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Edgware.SR3</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n```\n\n**Application启动类添加注解**\n\n添加`@EnableConfigServer`注解，启用配置中心：\n\n```java\npackage com.qianxunclub;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.cloud.config.server.EnableConfigServer;\n\n\n/**\n* @author chihiro.zhang\n*/\n@SpringBootApplication\n@EnableConfigServer\npublic class Application {\n\n    public static void main(String[] args) {\n        SpringApplication.run(Application.class, args);\n    }\n\n}\n```\n\n**配置文件**\n\n在`application.yml`或者`application.properties`添加配置信息：\n\n```yml\nspring:\n  cloud:\n    config:\n      server:\n        git:\n          uri: https://gitee.com/qianxunclub/spring-boot-config-repo\n          default-label: master\n          search-paths: /**\n          basedir: target/config\n```\n\n- spring.cloud.config.server.git.uri：配置git仓库地址\n- spring.cloud.config.server.git.search-paths：仓库文件夹目录，如果是`/**`，就是所有目录所有文件\n- spring.cloud.config.server.git.default-label：配置仓库的分支\n- spring.cloud.config.server.git.basedir：配置文件拉去到本地的目录位置\n\n**启动测试**\n\n首先在git里面添加一个`application-dev.yml`配置文件，内容如此下：\n```yml\ntest: 我是配置中心配置信息\n```\n\n已经配置完成了，启动一波试试，看效果咋样，正常情况下是可以正常启动的，然后获取配置文件试试  \n访问地址：http://localhost:8888/test/dev  \n如果返回如下，就是成功了：\n```json\n{\n    \"name\":\"test\",\n    \"profiles\":[\n        \"dev\"\n    ],\n    \"label\":null,\n    \"version\":\"64e7882a8f280641724e454a2db5a3da7b44d3d4\",\n    \"state\":null,\n    \"propertySources\":[\n        {\n            \"name\":\"https://gitee.com/qianxunclub/spring-boot-config-repo/application-dev.yml\",\n            \"source\":{\n                \"test\":\"配置中心的配置信息\"\n            }\n        }\n    ]\n}\n```\n\nhttp请求地址和资源文件映射如下:\n\n- /{application}/{profile}[/{label}]\n- /{application}-{profile}.yml\n- /{label}/{application}-{profile}.yml\n- /{application}-{profile}.properties\n- /{label}/{application}-{profile}.properties\n\n# 配置中心客户端使用\n\n**pom.xml添加依赖**  \n```xml\n<dependencies>\n    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-config</artifactId>\n    </dependency>\n</dependencies>\n\n<dependencyManagement>\n    <dependencies>\n        <!-- spring cloud -->\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-dependencies</artifactId>\n            <version>Edgware.SR3</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>\n```\n\n**配置文件**\n\n创建`bootstrap.yml`文件，切记，是`bootstrap.yml`文件`bootstrap.yml`文件，我就因为写到了`application.yml`这个里面，各种出现问题啊，添加如下配置：\n```yml\nspring:\n  cloud:\n    config:\n      name: application\n      profile: dev\n      label: master\n      uri: http://localhost:8888/\n```\n- spring.cloud.config.label：指明远程仓库的分支\n- spring.cloud.config.profile：指定不同环境配置文件，和git仓库的 `application-dev.yml`对应  \n- spring.cloud.config.name：配置名称，一般和git仓库的`application-dev.yml`对应\n- spring.cloud.config.uri：上面的配置中心服务地址  \n\n**启动测试**\n\n\n先添加一个获取配置信息的类:  \n```java\n\n\n/**\n * @author chihiro.zhang\n */\n@Configuration\n@EnableAutoConfiguration\npublic class DemoConfiguration {\n\n    @Value(\"${test}\")\n    private  String test;\n}\n\n```\n找个地方随便调用一下，输出这个test，就会打印上面git里面配置的信息了，爽不！\n\n\n# 说说中间遇到的坑\n\n1. 服务端git配置死活获取不了git仓库配置文件\n\n```yml\nspring:\n    cloud:\n        config:\n        server:\n            git:\n                uri: https://gitee.com/qianxunclub/spring-boot-config-repo\n                default-label: master\n                search-paths: /**\n                basedir: target/config\n```\n\n当时这个`uri`配置的是公司的git仓库，公司的git仓库访问是需要开代理才能有权限访问的，代理也开了，可是一直报错：\n\n```\nWhitelabel Error Page\nThis application has no explicit mapping for /error, so you are seeing this as a fallback.\n\nWed Jun 06 11:10:56 CST 2018\nThere was an unexpected error (type=Not Found, status=404).\nCannot clone or checkout repository: http://xxx.com:5080/framework/config-repo\n```\n很郁闷，不知道为啥，可是就在刚刚，就刚刚，写博客的时候，有测试了一下，通了。。。。日了狗了，不知道啥原因，等研究出来了再来补充。\n\n2. 客户端配置一定要配置在`bootstrap.yml`里面\n`uri`默认会调用端口为`8888`的地址`http://localhost:8888/`  \n启动的时候，会加载`label`和`uri`,`profile`配置，`profile`可以在启动参数添加，`profile`也可以加在`application.yml`添加  \n`name`也可以加在`application.yml`添加  \n\n# demo\n\n配置中心服务端：https://gitee.com/qianxunclub/qianxunclub-springboot-config  \n配置git仓库：https://gitee.com/qianxunclub/qianxunclub-springboot-config  \n配置客户端使用：https://gitee.com/qianxunclub/qianxunclub-starter-demo  \n客户端主要配置在：https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config","slug":"java/spring-cloud/spring-cloud-config-fen-bu-shi-pei-zhi-zhong-xin","published":1,"updated":"2020-03-11T10:48:16.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5bg003zw8mxnl5xmfjv","content":"<h1 id=\"分布式配置中心\"><a href=\"#分布式配置中心\" class=\"headerlink\" title=\"分布式配置中心\"></a>分布式配置中心</h1><p>为什么要有用分布式配置中心这玩意儿？现在这微服务大军已经覆盖了各种大小型企业，每个服务的粒度相对较小，因此系统中会出现大量的服务，每个服务都要有自己都一些配置信息，或者相同的配置信息，可能不同环境每个服务也有单独的一套配置，这种情况配置文件数量比较庞大，维护起来相当费劲，举个栗子：<br>在开发的过程中，一般数据库是开发环境数据库，所有服务DB的IP配置为：92.168.0.1，突然老大说，开发环境换了，DB的IP要修改，这下可不好受了，所有模块挨个修改DB的配置，就问你难受不难受？<br>这个时候分布式配置中心就发挥了很大的优势，只需要修改配置中心配置，所有服务即可自动生效，爽不爽！  </p>\n<a id=\"more\"></a>\n<h1 id=\"Spring-Cloud-Config\"><a href=\"#Spring-Cloud-Config\" class=\"headerlink\" title=\"Spring Cloud Config\"></a>Spring Cloud Config</h1><p>官网地址：<a href=\"http://cloud.spring.io/spring-cloud-config/\" target=\"_blank\" rel=\"noopener\">http://cloud.spring.io/spring-cloud-config/</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><code>Spring Cloud Config</code>为服务端和客户端提供了分布式系统的外部化配置支持。配置服务器为各应用的所有环境提供了一个中心化的外部配置。它实现了对服务端和客户端对<code>Spring Environment</code>和<code>PropertySource</code>抽象的映射，所以它除了适用于Spring构建的应用程序，也可以在任何其他语言运行的应用程序中使用。作为一个应用可以通过部署管道来进行测试或者投入生产，我们可以分别为这些环境创建配置，并且在需要迁移环境的时候获取对应环境的配置来运行。  </p>\n<p>置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。当然他也提供本地化文件系统的存储方式。  </p>\n<p>使用 spring Cloud 进行集中式配置管理，将以往的配置文件从项目中摘除后放到Git 或svn中集中管理，并在需要变更的时候，可以通知到各应用程序，应用程序刷新配置不需要重启。  </p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>其实这个实现原理相对比较简单一些，基于git的交互操作。</p>\n<ol>\n<li>我们把配置文件存放到git上面</li>\n<li>Spring Cloud Config配置中心服务连接git</li>\n<li>客户端需要配置配置信息从配置中心服务获取</li>\n<li>当客户端启动，会从配置中心获取git上面的配置信息</li>\n</ol>\n<h1 id=\"配置中心服务端\"><a href=\"#配置中心服务端\" class=\"headerlink\" title=\"配置中心服务端\"></a>配置中心服务端</h1><p><strong>pom.xml添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-config-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- spring cloud --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>Edgware.SR3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>Application启动类添加注解</strong></p>\n<p>添加<code>@EnableConfigServer</code>注解，启用配置中心：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.qianxunclub;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigServer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(Application.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>配置文件</strong></p>\n<p>在<code>application.yml</code>或者<code>application.properties</code>添加配置信息：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  cloud:</span></span><br><span class=\"line\"><span class=\"attr\">    config:</span></span><br><span class=\"line\"><span class=\"attr\">      server:</span></span><br><span class=\"line\"><span class=\"attr\">        git:</span></span><br><span class=\"line\"><span class=\"attr\">          uri:</span> <span class=\"attr\">https://gitee.com/qianxunclub/spring-boot-config-repo</span></span><br><span class=\"line\"><span class=\"attr\">          default-label:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">          search-paths:</span> <span class=\"string\">/**</span></span><br><span class=\"line\"><span class=\"attr\">          basedir:</span> <span class=\"string\">target/config</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>spring.cloud.config.server.git.uri：配置git仓库地址</li>\n<li>spring.cloud.config.server.git.search-paths：仓库文件夹目录，如果是<code>/**</code>，就是所有目录所有文件</li>\n<li>spring.cloud.config.server.git.default-label：配置仓库的分支</li>\n<li>spring.cloud.config.server.git.basedir：配置文件拉去到本地的目录位置</li>\n</ul>\n<p><strong>启动测试</strong></p>\n<p>首先在git里面添加一个<code>application-dev.yml</code>配置文件，内容如此下：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">test:</span> <span class=\"string\">我是配置中心配置信息</span></span><br></pre></td></tr></table></figure></p>\n<p>已经配置完成了，启动一波试试，看效果咋样，正常情况下是可以正常启动的，然后获取配置文件试试<br>访问地址：<a href=\"http://localhost:8888/test/dev\" target=\"_blank\" rel=\"noopener\">http://localhost:8888/test/dev</a><br>如果返回如下，就是成功了：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"profiles\"</span>:[</span><br><span class=\"line\">        <span class=\"string\">\"dev\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"label\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>:<span class=\"string\">\"64e7882a8f280641724e454a2db5a3da7b44d3d4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"state\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"propertySources\"</span>:[</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"https://gitee.com/qianxunclub/spring-boot-config-repo/application-dev.yml\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>:&#123;</span><br><span class=\"line\">                <span class=\"attr\">\"test\"</span>:<span class=\"string\">\"配置中心的配置信息\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>http请求地址和资源文件映射如下:</p>\n<ul>\n<li>/{application}/{profile}[/{label}]</li>\n<li>/{application}-{profile}.yml</li>\n<li>/{label}/{application}-{profile}.yml</li>\n<li>/{application}-{profile}.properties</li>\n<li>/{label}/{application}-{profile}.properties</li>\n</ul>\n<h1 id=\"配置中心客户端使用\"><a href=\"#配置中心客户端使用\" class=\"headerlink\" title=\"配置中心客户端使用\"></a>配置中心客户端使用</h1><p><strong>pom.xml添加依赖</strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- spring cloud --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>Edgware.SR3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>配置文件</strong></p>\n<p>创建<code>bootstrap.yml</code>文件，切记，是<code>bootstrap.yml</code>文件<code>bootstrap.yml</code>文件，我就因为写到了<code>application.yml</code>这个里面，各种出现问题啊，添加如下配置：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  cloud:</span></span><br><span class=\"line\"><span class=\"attr\">    config:</span></span><br><span class=\"line\"><span class=\"attr\">      name:</span> <span class=\"string\">application</span></span><br><span class=\"line\"><span class=\"attr\">      profile:</span> <span class=\"string\">dev</span></span><br><span class=\"line\"><span class=\"attr\">      label:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">      uri:</span> <span class=\"attr\">http://localhost:8888/</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>spring.cloud.config.label：指明远程仓库的分支</li>\n<li>spring.cloud.config.profile：指定不同环境配置文件，和git仓库的 <code>application-dev.yml</code>对应  </li>\n<li>spring.cloud.config.name：配置名称，一般和git仓库的<code>application-dev.yml</code>对应</li>\n<li>spring.cloud.config.uri：上面的配置中心服务地址  </li>\n</ul>\n<p><strong>启动测试</strong></p>\n<p>先添加一个获取配置信息的类:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoConfiguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;test&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>找个地方随便调用一下，输出这个test，就会打印上面git里面配置的信息了，爽不！</p>\n<h1 id=\"说说中间遇到的坑\"><a href=\"#说说中间遇到的坑\" class=\"headerlink\" title=\"说说中间遇到的坑\"></a>说说中间遇到的坑</h1><ol>\n<li>服务端git配置死活获取不了git仓库配置文件</li>\n</ol>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    cloud:</span></span><br><span class=\"line\"><span class=\"attr\">        config:</span></span><br><span class=\"line\"><span class=\"attr\">        server:</span></span><br><span class=\"line\"><span class=\"attr\">            git:</span></span><br><span class=\"line\"><span class=\"attr\">                uri:</span> <span class=\"attr\">https://gitee.com/qianxunclub/spring-boot-config-repo</span></span><br><span class=\"line\"><span class=\"attr\">                default-label:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">                search-paths:</span> <span class=\"string\">/**</span></span><br><span class=\"line\"><span class=\"attr\">                basedir:</span> <span class=\"string\">target/config</span></span><br></pre></td></tr></table></figure>\n<p>当时这个<code>uri</code>配置的是公司的git仓库，公司的git仓库访问是需要开代理才能有权限访问的，代理也开了，可是一直报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Whitelabel Error Page</span><br><span class=\"line\">This application has no explicit mapping for /error, so you are seeing this as a fallback.</span><br><span class=\"line\"></span><br><span class=\"line\">Wed Jun 06 11:10:56 CST 2018</span><br><span class=\"line\">There was an unexpected error (type=Not Found, status=404).</span><br><span class=\"line\">Cannot clone or checkout repository: http://xxx.com:5080/framework/config-repo</span><br></pre></td></tr></table></figure>\n<p>很郁闷，不知道为啥，可是就在刚刚，就刚刚，写博客的时候，有测试了一下，通了。。。。日了狗了，不知道啥原因，等研究出来了再来补充。</p>\n<ol start=\"2\">\n<li>客户端配置一定要配置在<code>bootstrap.yml</code>里面<br><code>uri</code>默认会调用端口为<code>8888</code>的地址<code>http://localhost:8888/</code><br>启动的时候，会加载<code>label</code>和<code>uri</code>,<code>profile</code>配置，<code>profile</code>可以在启动参数添加，<code>profile</code>也可以加在<code>application.yml</code>添加<br><code>name</code>也可以加在<code>application.yml</code>添加  </li>\n</ol>\n<h1 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h1><p>配置中心服务端：<a href=\"https://gitee.com/qianxunclub/qianxunclub-springboot-config\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-springboot-config</a><br>配置git仓库：<a href=\"https://gitee.com/qianxunclub/qianxunclub-springboot-config\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-springboot-config</a><br>配置客户端使用：<a href=\"https://gitee.com/qianxunclub/qianxunclub-starter-demo\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-starter-demo</a><br>客户端主要配置在：<a href=\"https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config</a></p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"分布式配置中心\"><a href=\"#分布式配置中心\" class=\"headerlink\" title=\"分布式配置中心\"></a>分布式配置中心</h1><p>为什么要有用分布式配置中心这玩意儿？现在这微服务大军已经覆盖了各种大小型企业，每个服务的粒度相对较小，因此系统中会出现大量的服务，每个服务都要有自己都一些配置信息，或者相同的配置信息，可能不同环境每个服务也有单独的一套配置，这种情况配置文件数量比较庞大，维护起来相当费劲，举个栗子：<br>在开发的过程中，一般数据库是开发环境数据库，所有服务DB的IP配置为：92.168.0.1，突然老大说，开发环境换了，DB的IP要修改，这下可不好受了，所有模块挨个修改DB的配置，就问你难受不难受？<br>这个时候分布式配置中心就发挥了很大的优势，只需要修改配置中心配置，所有服务即可自动生效，爽不爽！  </p>","more":"<h1 id=\"Spring-Cloud-Config\"><a href=\"#Spring-Cloud-Config\" class=\"headerlink\" title=\"Spring Cloud Config\"></a>Spring Cloud Config</h1><p>官网地址：<a href=\"http://cloud.spring.io/spring-cloud-config/\" target=\"_blank\" rel=\"noopener\">http://cloud.spring.io/spring-cloud-config/</a></p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><code>Spring Cloud Config</code>为服务端和客户端提供了分布式系统的外部化配置支持。配置服务器为各应用的所有环境提供了一个中心化的外部配置。它实现了对服务端和客户端对<code>Spring Environment</code>和<code>PropertySource</code>抽象的映射，所以它除了适用于Spring构建的应用程序，也可以在任何其他语言运行的应用程序中使用。作为一个应用可以通过部署管道来进行测试或者投入生产，我们可以分别为这些环境创建配置，并且在需要迁移环境的时候获取对应环境的配置来运行。  </p>\n<p>置服务器默认采用git来存储配置信息，这样就有助于对环境配置进行版本管理，并且可以通过git客户端工具来方便的管理和访问配置内容。当然他也提供本地化文件系统的存储方式。  </p>\n<p>使用 spring Cloud 进行集中式配置管理，将以往的配置文件从项目中摘除后放到Git 或svn中集中管理，并在需要变更的时候，可以通知到各应用程序，应用程序刷新配置不需要重启。  </p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>其实这个实现原理相对比较简单一些，基于git的交互操作。</p>\n<ol>\n<li>我们把配置文件存放到git上面</li>\n<li>Spring Cloud Config配置中心服务连接git</li>\n<li>客户端需要配置配置信息从配置中心服务获取</li>\n<li>当客户端启动，会从配置中心获取git上面的配置信息</li>\n</ol>\n<h1 id=\"配置中心服务端\"><a href=\"#配置中心服务端\" class=\"headerlink\" title=\"配置中心服务端\"></a>配置中心服务端</h1><p><strong>pom.xml添加依赖</strong></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-config-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- spring cloud --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>Edgware.SR3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>Application启动类添加注解</strong></p>\n<p>添加<code>@EnableConfigServer</code>注解，启用配置中心：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.qianxunclub;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.SpringApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"meta\">@EnableConfigServer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">        SpringApplication.run(Application.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>配置文件</strong></p>\n<p>在<code>application.yml</code>或者<code>application.properties</code>添加配置信息：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  cloud:</span></span><br><span class=\"line\"><span class=\"attr\">    config:</span></span><br><span class=\"line\"><span class=\"attr\">      server:</span></span><br><span class=\"line\"><span class=\"attr\">        git:</span></span><br><span class=\"line\"><span class=\"attr\">          uri:</span> <span class=\"attr\">https://gitee.com/qianxunclub/spring-boot-config-repo</span></span><br><span class=\"line\"><span class=\"attr\">          default-label:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">          search-paths:</span> <span class=\"string\">/**</span></span><br><span class=\"line\"><span class=\"attr\">          basedir:</span> <span class=\"string\">target/config</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>spring.cloud.config.server.git.uri：配置git仓库地址</li>\n<li>spring.cloud.config.server.git.search-paths：仓库文件夹目录，如果是<code>/**</code>，就是所有目录所有文件</li>\n<li>spring.cloud.config.server.git.default-label：配置仓库的分支</li>\n<li>spring.cloud.config.server.git.basedir：配置文件拉去到本地的目录位置</li>\n</ul>\n<p><strong>启动测试</strong></p>\n<p>首先在git里面添加一个<code>application-dev.yml</code>配置文件，内容如此下：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">test:</span> <span class=\"string\">我是配置中心配置信息</span></span><br></pre></td></tr></table></figure></p>\n<p>已经配置完成了，启动一波试试，看效果咋样，正常情况下是可以正常启动的，然后获取配置文件试试<br>访问地址：<a href=\"http://localhost:8888/test/dev\" target=\"_blank\" rel=\"noopener\">http://localhost:8888/test/dev</a><br>如果返回如下，就是成功了：<br><figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"test\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"profiles\"</span>:[</span><br><span class=\"line\">        <span class=\"string\">\"dev\"</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"attr\">\"label\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>:<span class=\"string\">\"64e7882a8f280641724e454a2db5a3da7b44d3d4\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"state\"</span>:<span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"propertySources\"</span>:[</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>:<span class=\"string\">\"https://gitee.com/qianxunclub/spring-boot-config-repo/application-dev.yml\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"source\"</span>:&#123;</span><br><span class=\"line\">                <span class=\"attr\">\"test\"</span>:<span class=\"string\">\"配置中心的配置信息\"</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>http请求地址和资源文件映射如下:</p>\n<ul>\n<li>/{application}/{profile}[/{label}]</li>\n<li>/{application}-{profile}.yml</li>\n<li>/{label}/{application}-{profile}.yml</li>\n<li>/{application}-{profile}.properties</li>\n<li>/{label}/{application}-{profile}.properties</li>\n</ul>\n<h1 id=\"配置中心客户端使用\"><a href=\"#配置中心客户端使用\" class=\"headerlink\" title=\"配置中心客户端使用\"></a>配置中心客户端使用</h1><p><strong>pom.xml添加依赖</strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-config<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- spring cloud --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>Edgware.SR3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>配置文件</strong></p>\n<p>创建<code>bootstrap.yml</code>文件，切记，是<code>bootstrap.yml</code>文件<code>bootstrap.yml</code>文件，我就因为写到了<code>application.yml</code>这个里面，各种出现问题啊，添加如下配置：<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  cloud:</span></span><br><span class=\"line\"><span class=\"attr\">    config:</span></span><br><span class=\"line\"><span class=\"attr\">      name:</span> <span class=\"string\">application</span></span><br><span class=\"line\"><span class=\"attr\">      profile:</span> <span class=\"string\">dev</span></span><br><span class=\"line\"><span class=\"attr\">      label:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">      uri:</span> <span class=\"attr\">http://localhost:8888/</span></span><br></pre></td></tr></table></figure></p>\n<ul>\n<li>spring.cloud.config.label：指明远程仓库的分支</li>\n<li>spring.cloud.config.profile：指定不同环境配置文件，和git仓库的 <code>application-dev.yml</code>对应  </li>\n<li>spring.cloud.config.name：配置名称，一般和git仓库的<code>application-dev.yml</code>对应</li>\n<li>spring.cloud.config.uri：上面的配置中心服务地址  </li>\n</ul>\n<p><strong>启动测试</strong></p>\n<p>先添加一个获取配置信息的类:<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> chihiro.zhang</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAutoConfiguration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DemoConfiguration</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Value</span>(<span class=\"string\">\"$&#123;test&#125;\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String test;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>找个地方随便调用一下，输出这个test，就会打印上面git里面配置的信息了，爽不！</p>\n<h1 id=\"说说中间遇到的坑\"><a href=\"#说说中间遇到的坑\" class=\"headerlink\" title=\"说说中间遇到的坑\"></a>说说中间遇到的坑</h1><ol>\n<li>服务端git配置死活获取不了git仓库配置文件</li>\n</ol>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">    cloud:</span></span><br><span class=\"line\"><span class=\"attr\">        config:</span></span><br><span class=\"line\"><span class=\"attr\">        server:</span></span><br><span class=\"line\"><span class=\"attr\">            git:</span></span><br><span class=\"line\"><span class=\"attr\">                uri:</span> <span class=\"attr\">https://gitee.com/qianxunclub/spring-boot-config-repo</span></span><br><span class=\"line\"><span class=\"attr\">                default-label:</span> <span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"attr\">                search-paths:</span> <span class=\"string\">/**</span></span><br><span class=\"line\"><span class=\"attr\">                basedir:</span> <span class=\"string\">target/config</span></span><br></pre></td></tr></table></figure>\n<p>当时这个<code>uri</code>配置的是公司的git仓库，公司的git仓库访问是需要开代理才能有权限访问的，代理也开了，可是一直报错：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Whitelabel Error Page</span><br><span class=\"line\">This application has no explicit mapping for /error, so you are seeing this as a fallback.</span><br><span class=\"line\"></span><br><span class=\"line\">Wed Jun 06 11:10:56 CST 2018</span><br><span class=\"line\">There was an unexpected error (type=Not Found, status=404).</span><br><span class=\"line\">Cannot clone or checkout repository: http://xxx.com:5080/framework/config-repo</span><br></pre></td></tr></table></figure>\n<p>很郁闷，不知道为啥，可是就在刚刚，就刚刚，写博客的时候，有测试了一下，通了。。。。日了狗了，不知道啥原因，等研究出来了再来补充。</p>\n<ol start=\"2\">\n<li>客户端配置一定要配置在<code>bootstrap.yml</code>里面<br><code>uri</code>默认会调用端口为<code>8888</code>的地址<code>http://localhost:8888/</code><br>启动的时候，会加载<code>label</code>和<code>uri</code>,<code>profile</code>配置，<code>profile</code>可以在启动参数添加，<code>profile</code>也可以加在<code>application.yml</code>添加<br><code>name</code>也可以加在<code>application.yml</code>添加  </li>\n</ol>\n<h1 id=\"demo\"><a href=\"#demo\" class=\"headerlink\" title=\"demo\"></a>demo</h1><p>配置中心服务端：<a href=\"https://gitee.com/qianxunclub/qianxunclub-springboot-config\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-springboot-config</a><br>配置git仓库：<a href=\"https://gitee.com/qianxunclub/qianxunclub-springboot-config\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-springboot-config</a><br>配置客户端使用：<a href=\"https://gitee.com/qianxunclub/qianxunclub-starter-demo\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-starter-demo</a><br>客户端主要配置在：<a href=\"https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config\" target=\"_blank\" rel=\"noopener\">https://gitee.com/qianxunclub/qianxunclub-starter-parent/tree/master/qianxunclub-starter-config</a></p>"},{"title":"自定义SpringBoot的starter-parent，制定开发规范，和提高开发效率","date":"2018-05-25T02:40:00.000Z","_content":"\n# 写在前面\n\nSpringBoot咱们开发一般`pom.xml`是都集成`spring-boot-starter-parent`的，这里为什么要自定义一个starter-parent呢，主要以下几个理由：  \n1. 定义开发规范：自定义parent可以制定统一配置和依赖规范  \n2. 提高开发效率 \n3. 统一模块插件化管理：可以在parent实现需要的插件配置，如：redis、mysql、日志、参数教研等  \n4. 项目版本升级和依赖包升级更加方便统一  \n5. 日志收集等可以从切面获取各个项目数据和日志等\n6. 项目持续集成部署交付方便处理  \n\n<!-- more -->\n\n 其实好处挺多的，谁用谁知道。\n\n# 一、准备\n\n*`qianxunclub-starter-parent`里面已经开发好的几个插件，需要依据公司真实环境修改配置*\n\n源码地址：  \n```\ngit clone https://gitee.com/qianxunclub/qianxunclub-starter-parent.git\n```\n\n因为`qianxunclub-starter-parent`依赖了另一个`framework-common`工具包，所以要下载该包源码并且编译：  \n```\ngit clone https://gitee.com/qianxunclub/framework-common.git\n ```\n\n ```\ncd framework-common\n```\n\n```\nmvn clean install\n```\n\n# 二、starter-parent插件功能列表\n\n本starter已包含一下功能：  \n\n1. [lombok插件添加](https://projectlombok.org/features/all)\n2. [日志输出：qianxunclub-starter-logging](#qianxunclub-starter-logging)\n3. [swagger接口文档：qianxunclub-starter-swagger](#qianxunclub-starter-swagger)\n4. [跨域请求、http编码配置入参校验等：qianxunclub-starter-web](#qianxunclub-starter-web)\n5. [mysql以及MybatisPlus引用：qianxunclub-starter-mysql](#qianxunclub-starter-mysql)（如果不使用，禁止引入该包，否则项目启动出错）\n6. [redis支持：qianxunclub-starter-redis](#qianxunclub-starter-redis)（如果不使用，禁止引入该包，否则项目启动出错）  \n\n# 三、开发配置\n\n## pom.xml编辑\n\nPOM需要依赖父级`qianxunclub-starter-parent`：  \n```xml\n<parent>\n\t<groupId>com.qianxunclub</groupId>\n\t<artifactId>qianxunclub-starter-parent</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n</parent>\n```\n\n继承该依赖，无需再引用`spring-boot-starter-parent`,本项目已经继承的`spring-boot-starter-parent`版本为`1.5.9.RELEASE`。\n\n## 项目目录结构\n\n```\nqianxunclub-demo\n├── pom.xml\n├── qianxunclub-demo.iml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── qianxunclub\n    │   │           ├── Application.java\n    │   │           └── demo\n    │   │               └── web\n    │   └── resources\n    │       └── application.yml\n    └── test\n        └── java\n```\n\n1. com.qianxunclub：项目根包名，必须以该名称命名，并且SpringBoot启动类必须在该目录\n2. group：项目分组名称，通常依据项目在GIT分组名称命名\n3. demo：项目名称，通常依据GIT名称命名\n4. web：controller控制器，，必须以该名称命名\n5. resources：资源目录\n\n\n## application.yml基础配置信息\n\n```yml\napp:\n  group: group\n  name: demo\n  descriptions: 项目描述\n  author: 千寻啊千寻\n  email: 960339491@qq.com\nspring:\n  profiles:\n    include:\n    - web\n    - swagger\n    - logging\n    - mysql\n```\n\n1. group：项目分组名称，和包结构中的分组名称必须一致  \n2. name：项目名称。和包结构中项目名称必须一致  \n3. descriptions：项目描述信息  \n4. author：项目负责人名称  \n5. email：项目负责人邮箱  \n6. spring.profiles.include：使用已经定义的starter功能,项目参考本文第三章  \n\n\n# 四、starter使用说明\n\n## 日志输出：qianxunclub-starter-logging\n\n<span id = \"qianxunclub-starter-logging\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n```\n<!-- 日志配置信息 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-logging</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\nprofiles需要引入配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - logging\n```\n\n自定义配置：\n\n```yml\nlogging:\n  level:\n    com.qianxunclub: debug\n```\n\n以下为缺省配置：\n\n```yml\nlogging:\n  level:\n    org.springframework: info\n    com.qianxunclub: info\n  pattern:\n    console: \"%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{64})  - %msg%n\"\n  file: /logs/${app.group:}/${app.name:${spring.application.name:application}}/${spring.application.name:application}.log\n```\n\n**\n日志默认存放目录：/logs/项目分组/项目名称/日志文件\n如果没有项目分组：/logs/项目名称/日志文件\n**\n\n\n### 使用方式\n\n只需要在类上面添加`@Slf4j`注解，即可使用`log`对象打印日志\n\n```java\n@Slf4j\n@SpringBootApplication\npublic class Application {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t\tlog.info(\"日志信息\");\n\t}\n}\n```\n\n## swagger接口文档：qianxunclub-starter-swagger\n\n官网：https://swagger.io/\n\n<span id = \"qianxunclub-starter-swagger\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- 自动生成接口文档 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-swagger</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\nswagger默认是不启用的，必须添加一下配置，才可以开启配置\n\n```yml\napp:\n  swagger: true\nspring:\n  profiles:\n    include:\n    - swagger\n```\n\n#### 启动类添加`@EnableSBCSwagger`注解，开启接口\n\n```java\n@EnableSBCSwagger\n@SpringBootApplication\npublic class Application {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n}\n```\n\n### 使用方式\n\n启动项目成功后,访问API接口地址，例如：http://localhost:8080/swagger-ui.html。\n\n\n\n## mysql以及MybatisPlus引用：qianxunclub-starter-mysql\n\n<span id = \"qianxunclub-starter-mysql\">　</span>\n\n### 3.4.1配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- MYSQL配置信息 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-mysql</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\n引入mysql配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - mysql\n```\n\n添加数据源信息：\n\n```yml\napp:\n  group: group\n  name: oneway\n  description: demo\n  author: 千寻啊千寻\n  email: 960339491@qq.com\n  datasource:\n    host: xxx.xxx.xxx.xxx\n    username: root\n    password: xxx\n    druid:\n      public-key: xxx\n\n```\n端口默认为：3306  \n数据库密码加密：\n\n```\njava -cp druid-1.1.6.jar com.alibaba.druid.filter.config.ConfigTools your_password\n```\n\n### 使用方式\n\n以上配置完成后即可使用mysql以及MybatisPlus，该starter已封装部分常用数据库操作，方法如下：  \nMybatisPlus使用说明：http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b  \n\n**1、Entity规范**  \n\n数据库对应的Entity需要继承`BaseEntity`，如下：\n\n```java\n@Data\n@TableName(\"t_app\")\npublic class AppEntity extends BaseEntity {\n\n}\n```\n**2、Param规范**  \n\nParam为入参查询常用发放，Param需要继承`BaseParam`,如下：\n\n```java\n@Data\npublic class AppParam extends BaseParam {\n\n}\n```\n\n**3、Mapper规范**  \n\n需要添加`@Mapper`注解，继承`BaseMapper`，并且要指定Entity泛型，如下：\n\n```java\n@Mapper\npublic interface AppMapper extends BaseMapper<AppEntity> {\n}\n```\n\n**4、Dao规范**  \n\n需要继承`BaseDao`,并且指定泛型，如下：  \n\n```java\n@Component\npublic class AppDao extends BaseDao<AppMapper,AppEntity,AppParam> {\n\n}\n\n```\n\n**5、mapper.xml规范**  \n\n默认可以不添加mapper.xml，如果遇到特定的SQL，可在`resources`资源目录添加mapper文件夹，并添加对应的XML即可\n\n\n## redis支持：qianxunclub-starter-redis\n\n<span id = \"qianxunclub-starter-redis\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- MYSQL配置信息 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-redis</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\n引入mysql配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - redis\n```\n\n添加redis配置信息：\n\n```yml\nspring:\n  redis:\n    host: 120.25.173.32\n    password: 123456\n\n```\n\n端口默认为：6379  \n\n下面为缺省配置：\n\n```yml\nspring:\n  redis:\n    database: 0\n    host: localhost\n    port: 6379\n    password: \n    pool:\n      # 连接池最大连接数（使用负值表示没有限制）\n      max-active: 8\n      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n      max-wait: -1\n      # 连接池中的最大空闲连接\n      max-idle: 8\n      # 连接池中的最小空闲连接\n      min-idle: 0\n      # 连接超时时间（毫秒）\n      timeout: 0\n```\n\n### 使用方式\n\n在类中可直接注入`RedisTemplate`或`StringRedisTemplate`即可使用，例如：\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(value = \"/redis\")\n@AllArgsConstructor\n@Api(description = \"redis\")\npublic class RedisController {\n\n\tprivate RedisTemplate redisTemplate;\n\tprivate StringRedisTemplate stringRedisTemplate;\n\n\n\n\t@ApiOperation(\"add\")\n\t@ResponseBody\n\t@RequestMapping(value=\"add\",method = RequestMethod.GET)\n\tpublic void add() {\n\t\tValueOperations<String, String> operations=redisTemplate.opsForValue();\n\t\toperations.set(\"ValueOperations\",\"1\");\n\t\tlog.info(operations.get(\"ValueOperations\"));\n\n\t\tstringRedisTemplate.opsForValue().set(\"aaa\", \"111\");\n\t\tlog.info(stringRedisTemplate.opsForValue().get(\"aaa\"));\n\t}\n\n}\n```\n\n\n## 跨域请求、http编码配置入参校验等：qianxunclub-starter-web\n\n<span id = \"qianxunclub-starter-web\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- 支持跨域请求 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-web</artifactId>\n</dependency>\n```\n\n#### application.yml配置 \n\nprofiles需要引入配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - web\n```\n\n# 五、配置最终效果如下\n\npom.xml：\n\n```xml\n<modelVersion>4.0.0</modelVersion>\n\n<groupId>com.qianxunclub</groupId>\n<artifactId>qianxunclub-demo</artifactId>\n<version>1.0-SNAPSHOT</version>\n\n<parent>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-parent</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n</parent>\n\n<dependencies>\n\n    <!-- 自动生成接口文档 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-swagger</artifactId>\n    </dependency>\n    <!-- web配置信息 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-web</artifactId>\n    </dependency>\n    <!-- 日志配置信息 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-logging</artifactId>\n    </dependency>\n    <!-- MYSQL配置信息 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-mysql</artifactId>\n    </dependency>\n</dependencies>\n```\n\napplication.yml:\n\n```yml\napp:\n  group: group\n  name: demo\n  description: demo服务\n  author: 千寻啊千寻\n  email: 960339491@qq.com\n  swagger: true\n  datasource:\n    host: xxx.xxx.xxx.xxx\n    username: root\n    password: xxx\n    druid:\n      public-key: xxx\n\nspring:\n  profiles:\n    include:\n    - web\n    - swagger\n    - logging\n    - mysql\n```\n\n\n完！","source":"_posts/java/spring-boot/zi-ding-yi-springboot-starter-parent-tongyi-kaifa-guifan-tigao-kaifa-xiaolv.md","raw":"---\ntitle: 自定义SpringBoot的starter-parent，制定开发规范，和提高开发效率\ndate: 2018-05-25 10:40:00\ntags: [Java,SpringBoot]\ncategories: \n  - Java\n  - SpringBoot\n---\n\n# 写在前面\n\nSpringBoot咱们开发一般`pom.xml`是都集成`spring-boot-starter-parent`的，这里为什么要自定义一个starter-parent呢，主要以下几个理由：  \n1. 定义开发规范：自定义parent可以制定统一配置和依赖规范  \n2. 提高开发效率 \n3. 统一模块插件化管理：可以在parent实现需要的插件配置，如：redis、mysql、日志、参数教研等  \n4. 项目版本升级和依赖包升级更加方便统一  \n5. 日志收集等可以从切面获取各个项目数据和日志等\n6. 项目持续集成部署交付方便处理  \n\n<!-- more -->\n\n 其实好处挺多的，谁用谁知道。\n\n# 一、准备\n\n*`qianxunclub-starter-parent`里面已经开发好的几个插件，需要依据公司真实环境修改配置*\n\n源码地址：  \n```\ngit clone https://gitee.com/qianxunclub/qianxunclub-starter-parent.git\n```\n\n因为`qianxunclub-starter-parent`依赖了另一个`framework-common`工具包，所以要下载该包源码并且编译：  \n```\ngit clone https://gitee.com/qianxunclub/framework-common.git\n ```\n\n ```\ncd framework-common\n```\n\n```\nmvn clean install\n```\n\n# 二、starter-parent插件功能列表\n\n本starter已包含一下功能：  \n\n1. [lombok插件添加](https://projectlombok.org/features/all)\n2. [日志输出：qianxunclub-starter-logging](#qianxunclub-starter-logging)\n3. [swagger接口文档：qianxunclub-starter-swagger](#qianxunclub-starter-swagger)\n4. [跨域请求、http编码配置入参校验等：qianxunclub-starter-web](#qianxunclub-starter-web)\n5. [mysql以及MybatisPlus引用：qianxunclub-starter-mysql](#qianxunclub-starter-mysql)（如果不使用，禁止引入该包，否则项目启动出错）\n6. [redis支持：qianxunclub-starter-redis](#qianxunclub-starter-redis)（如果不使用，禁止引入该包，否则项目启动出错）  \n\n# 三、开发配置\n\n## pom.xml编辑\n\nPOM需要依赖父级`qianxunclub-starter-parent`：  \n```xml\n<parent>\n\t<groupId>com.qianxunclub</groupId>\n\t<artifactId>qianxunclub-starter-parent</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n</parent>\n```\n\n继承该依赖，无需再引用`spring-boot-starter-parent`,本项目已经继承的`spring-boot-starter-parent`版本为`1.5.9.RELEASE`。\n\n## 项目目录结构\n\n```\nqianxunclub-demo\n├── pom.xml\n├── qianxunclub-demo.iml\n└── src\n    ├── main\n    │   ├── java\n    │   │   └── com\n    │   │       └── qianxunclub\n    │   │           ├── Application.java\n    │   │           └── demo\n    │   │               └── web\n    │   └── resources\n    │       └── application.yml\n    └── test\n        └── java\n```\n\n1. com.qianxunclub：项目根包名，必须以该名称命名，并且SpringBoot启动类必须在该目录\n2. group：项目分组名称，通常依据项目在GIT分组名称命名\n3. demo：项目名称，通常依据GIT名称命名\n4. web：controller控制器，，必须以该名称命名\n5. resources：资源目录\n\n\n## application.yml基础配置信息\n\n```yml\napp:\n  group: group\n  name: demo\n  descriptions: 项目描述\n  author: 千寻啊千寻\n  email: 960339491@qq.com\nspring:\n  profiles:\n    include:\n    - web\n    - swagger\n    - logging\n    - mysql\n```\n\n1. group：项目分组名称，和包结构中的分组名称必须一致  \n2. name：项目名称。和包结构中项目名称必须一致  \n3. descriptions：项目描述信息  \n4. author：项目负责人名称  \n5. email：项目负责人邮箱  \n6. spring.profiles.include：使用已经定义的starter功能,项目参考本文第三章  \n\n\n# 四、starter使用说明\n\n## 日志输出：qianxunclub-starter-logging\n\n<span id = \"qianxunclub-starter-logging\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n```\n<!-- 日志配置信息 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-logging</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\nprofiles需要引入配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - logging\n```\n\n自定义配置：\n\n```yml\nlogging:\n  level:\n    com.qianxunclub: debug\n```\n\n以下为缺省配置：\n\n```yml\nlogging:\n  level:\n    org.springframework: info\n    com.qianxunclub: info\n  pattern:\n    console: \"%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) %cyan(%logger{64})  - %msg%n\"\n  file: /logs/${app.group:}/${app.name:${spring.application.name:application}}/${spring.application.name:application}.log\n```\n\n**\n日志默认存放目录：/logs/项目分组/项目名称/日志文件\n如果没有项目分组：/logs/项目名称/日志文件\n**\n\n\n### 使用方式\n\n只需要在类上面添加`@Slf4j`注解，即可使用`log`对象打印日志\n\n```java\n@Slf4j\n@SpringBootApplication\npublic class Application {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t\tlog.info(\"日志信息\");\n\t}\n}\n```\n\n## swagger接口文档：qianxunclub-starter-swagger\n\n官网：https://swagger.io/\n\n<span id = \"qianxunclub-starter-swagger\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- 自动生成接口文档 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-swagger</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\nswagger默认是不启用的，必须添加一下配置，才可以开启配置\n\n```yml\napp:\n  swagger: true\nspring:\n  profiles:\n    include:\n    - swagger\n```\n\n#### 启动类添加`@EnableSBCSwagger`注解，开启接口\n\n```java\n@EnableSBCSwagger\n@SpringBootApplication\npublic class Application {\n\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(Application.class, args);\n\t}\n}\n```\n\n### 使用方式\n\n启动项目成功后,访问API接口地址，例如：http://localhost:8080/swagger-ui.html。\n\n\n\n## mysql以及MybatisPlus引用：qianxunclub-starter-mysql\n\n<span id = \"qianxunclub-starter-mysql\">　</span>\n\n### 3.4.1配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- MYSQL配置信息 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-mysql</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\n引入mysql配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - mysql\n```\n\n添加数据源信息：\n\n```yml\napp:\n  group: group\n  name: oneway\n  description: demo\n  author: 千寻啊千寻\n  email: 960339491@qq.com\n  datasource:\n    host: xxx.xxx.xxx.xxx\n    username: root\n    password: xxx\n    druid:\n      public-key: xxx\n\n```\n端口默认为：3306  \n数据库密码加密：\n\n```\njava -cp druid-1.1.6.jar com.alibaba.druid.filter.config.ConfigTools your_password\n```\n\n### 使用方式\n\n以上配置完成后即可使用mysql以及MybatisPlus，该starter已封装部分常用数据库操作，方法如下：  \nMybatisPlus使用说明：http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b  \n\n**1、Entity规范**  \n\n数据库对应的Entity需要继承`BaseEntity`，如下：\n\n```java\n@Data\n@TableName(\"t_app\")\npublic class AppEntity extends BaseEntity {\n\n}\n```\n**2、Param规范**  \n\nParam为入参查询常用发放，Param需要继承`BaseParam`,如下：\n\n```java\n@Data\npublic class AppParam extends BaseParam {\n\n}\n```\n\n**3、Mapper规范**  \n\n需要添加`@Mapper`注解，继承`BaseMapper`，并且要指定Entity泛型，如下：\n\n```java\n@Mapper\npublic interface AppMapper extends BaseMapper<AppEntity> {\n}\n```\n\n**4、Dao规范**  \n\n需要继承`BaseDao`,并且指定泛型，如下：  \n\n```java\n@Component\npublic class AppDao extends BaseDao<AppMapper,AppEntity,AppParam> {\n\n}\n\n```\n\n**5、mapper.xml规范**  \n\n默认可以不添加mapper.xml，如果遇到特定的SQL，可在`resources`资源目录添加mapper文件夹，并添加对应的XML即可\n\n\n## redis支持：qianxunclub-starter-redis\n\n<span id = \"qianxunclub-starter-redis\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- MYSQL配置信息 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-redis</artifactId>\n</dependency>\n```\n\n#### application.yml配置\n\n引入mysql配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - redis\n```\n\n添加redis配置信息：\n\n```yml\nspring:\n  redis:\n    host: 120.25.173.32\n    password: 123456\n\n```\n\n端口默认为：6379  \n\n下面为缺省配置：\n\n```yml\nspring:\n  redis:\n    database: 0\n    host: localhost\n    port: 6379\n    password: \n    pool:\n      # 连接池最大连接数（使用负值表示没有限制）\n      max-active: 8\n      # 连接池最大阻塞等待时间（使用负值表示没有限制）\n      max-wait: -1\n      # 连接池中的最大空闲连接\n      max-idle: 8\n      # 连接池中的最小空闲连接\n      min-idle: 0\n      # 连接超时时间（毫秒）\n      timeout: 0\n```\n\n### 使用方式\n\n在类中可直接注入`RedisTemplate`或`StringRedisTemplate`即可使用，例如：\n\n```java\n@Slf4j\n@RestController\n@RequestMapping(value = \"/redis\")\n@AllArgsConstructor\n@Api(description = \"redis\")\npublic class RedisController {\n\n\tprivate RedisTemplate redisTemplate;\n\tprivate StringRedisTemplate stringRedisTemplate;\n\n\n\n\t@ApiOperation(\"add\")\n\t@ResponseBody\n\t@RequestMapping(value=\"add\",method = RequestMethod.GET)\n\tpublic void add() {\n\t\tValueOperations<String, String> operations=redisTemplate.opsForValue();\n\t\toperations.set(\"ValueOperations\",\"1\");\n\t\tlog.info(operations.get(\"ValueOperations\"));\n\n\t\tstringRedisTemplate.opsForValue().set(\"aaa\", \"111\");\n\t\tlog.info(stringRedisTemplate.opsForValue().get(\"aaa\"));\n\t}\n\n}\n```\n\n\n## 跨域请求、http编码配置入参校验等：qianxunclub-starter-web\n\n<span id = \"qianxunclub-starter-web\">　</span>\n\n### 配置方式\n\n#### pom.xml引入包：\n\n```xml\n<!-- 支持跨域请求 -->\n<dependency>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-web</artifactId>\n</dependency>\n```\n\n#### application.yml配置 \n\nprofiles需要引入配置：\n\n```yml\nspring:\n  profiles:\n    include:\n    - web\n```\n\n# 五、配置最终效果如下\n\npom.xml：\n\n```xml\n<modelVersion>4.0.0</modelVersion>\n\n<groupId>com.qianxunclub</groupId>\n<artifactId>qianxunclub-demo</artifactId>\n<version>1.0-SNAPSHOT</version>\n\n<parent>\n    <groupId>com.qianxunclub</groupId>\n    <artifactId>qianxunclub-starter-parent</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n</parent>\n\n<dependencies>\n\n    <!-- 自动生成接口文档 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-swagger</artifactId>\n    </dependency>\n    <!-- web配置信息 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-web</artifactId>\n    </dependency>\n    <!-- 日志配置信息 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-logging</artifactId>\n    </dependency>\n    <!-- MYSQL配置信息 -->\n    <dependency>\n        <groupId>com.qianxunclub</groupId>\n        <artifactId>qianxunclub-starter-mysql</artifactId>\n    </dependency>\n</dependencies>\n```\n\napplication.yml:\n\n```yml\napp:\n  group: group\n  name: demo\n  description: demo服务\n  author: 千寻啊千寻\n  email: 960339491@qq.com\n  swagger: true\n  datasource:\n    host: xxx.xxx.xxx.xxx\n    username: root\n    password: xxx\n    druid:\n      public-key: xxx\n\nspring:\n  profiles:\n    include:\n    - web\n    - swagger\n    - logging\n    - mysql\n```\n\n\n完！","slug":"java/spring-boot/zi-ding-yi-springboot-starter-parent-tongyi-kaifa-guifan-tigao-kaifa-xiaolv","published":1,"updated":"2020-03-11T10:48:16.854Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck7o5o5bi0041w8mx2mzjm7mk","content":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>SpringBoot咱们开发一般<code>pom.xml</code>是都集成<code>spring-boot-starter-parent</code>的，这里为什么要自定义一个starter-parent呢，主要以下几个理由：  </p>\n<ol>\n<li>定义开发规范：自定义parent可以制定统一配置和依赖规范  </li>\n<li>提高开发效率 </li>\n<li>统一模块插件化管理：可以在parent实现需要的插件配置，如：redis、mysql、日志、参数教研等  </li>\n<li>项目版本升级和依赖包升级更加方便统一  </li>\n<li>日志收集等可以从切面获取各个项目数据和日志等</li>\n<li>项目持续集成部署交付方便处理  </li>\n</ol>\n<a id=\"more\"></a>\n<p> 其实好处挺多的，谁用谁知道。</p>\n<h1 id=\"一、准备\"><a href=\"#一、准备\" class=\"headerlink\" title=\"一、准备\"></a>一、准备</h1><p><em><code>qianxunclub-starter-parent</code>里面已经开发好的几个插件，需要依据公司真实环境修改配置</em></p>\n<p>源码地址：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/qianxunclub/qianxunclub-starter-parent.git</span><br></pre></td></tr></table></figure></p>\n<p>因为<code>qianxunclub-starter-parent</code>依赖了另一个<code>framework-common</code>工具包，所以要下载该包源码并且编译：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/qianxunclub/framework-common.git</span><br></pre></td></tr></table></figure></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd framework-common</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install</span><br></pre></td></tr></table></figure>\n<h1 id=\"二、starter-parent插件功能列表\"><a href=\"#二、starter-parent插件功能列表\" class=\"headerlink\" title=\"二、starter-parent插件功能列表\"></a>二、starter-parent插件功能列表</h1><p>本starter已包含一下功能：  </p>\n<ol>\n<li><a href=\"https://projectlombok.org/features/all\" target=\"_blank\" rel=\"noopener\">lombok插件添加</a></li>\n<li><a href=\"#qianxunclub-starter-logging\">日志输出：qianxunclub-starter-logging</a></li>\n<li><a href=\"#qianxunclub-starter-swagger\">swagger接口文档：qianxunclub-starter-swagger</a></li>\n<li><a href=\"#qianxunclub-starter-web\">跨域请求、http编码配置入参校验等：qianxunclub-starter-web</a></li>\n<li><a href=\"#qianxunclub-starter-mysql\">mysql以及MybatisPlus引用：qianxunclub-starter-mysql</a>（如果不使用，禁止引入该包，否则项目启动出错）</li>\n<li><a href=\"#qianxunclub-starter-redis\">redis支持：qianxunclub-starter-redis</a>（如果不使用，禁止引入该包，否则项目启动出错）  </li>\n</ol>\n<h1 id=\"三、开发配置\"><a href=\"#三、开发配置\" class=\"headerlink\" title=\"三、开发配置\"></a>三、开发配置</h1><h2 id=\"pom-xml编辑\"><a href=\"#pom-xml编辑\" class=\"headerlink\" title=\"pom.xml编辑\"></a>pom.xml编辑</h2><p>POM需要依赖父级<code>qianxunclub-starter-parent</code>：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>继承该依赖，无需再引用<code>spring-boot-starter-parent</code>,本项目已经继承的<code>spring-boot-starter-parent</code>版本为<code>1.5.9.RELEASE</code>。</p>\n<h2 id=\"项目目录结构\"><a href=\"#项目目录结构\" class=\"headerlink\" title=\"项目目录结构\"></a>项目目录结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qianxunclub-demo</span><br><span class=\"line\">├── pom.xml</span><br><span class=\"line\">├── qianxunclub-demo.iml</span><br><span class=\"line\">└── src</span><br><span class=\"line\">    ├── main</span><br><span class=\"line\">    │   ├── java</span><br><span class=\"line\">    │   │   └── com</span><br><span class=\"line\">    │   │       └── qianxunclub</span><br><span class=\"line\">    │   │           ├── Application.java</span><br><span class=\"line\">    │   │           └── demo</span><br><span class=\"line\">    │   │               └── web</span><br><span class=\"line\">    │   └── resources</span><br><span class=\"line\">    │       └── application.yml</span><br><span class=\"line\">    └── test</span><br><span class=\"line\">        └── java</span><br></pre></td></tr></table></figure>\n<ol>\n<li>com.qianxunclub：项目根包名，必须以该名称命名，并且SpringBoot启动类必须在该目录</li>\n<li>group：项目分组名称，通常依据项目在GIT分组名称命名</li>\n<li>demo：项目名称，通常依据GIT名称命名</li>\n<li>web：controller控制器，，必须以该名称命名</li>\n<li>resources：资源目录</li>\n</ol>\n<h2 id=\"application-yml基础配置信息\"><a href=\"#application-yml基础配置信息\" class=\"headerlink\" title=\"application.yml基础配置信息\"></a>application.yml基础配置信息</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  group:</span> <span class=\"string\">group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">  descriptions:</span> <span class=\"string\">项目描述</span></span><br><span class=\"line\"><span class=\"attr\">  author:</span> <span class=\"string\">千寻啊千寻</span></span><br><span class=\"line\"><span class=\"attr\">  email:</span> <span class=\"number\">960339491</span><span class=\"string\">@qq.com</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">web</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">swagger</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">logging</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>group：项目分组名称，和包结构中的分组名称必须一致  </li>\n<li>name：项目名称。和包结构中项目名称必须一致  </li>\n<li>descriptions：项目描述信息  </li>\n<li>author：项目负责人名称  </li>\n<li>email：项目负责人邮箱  </li>\n<li>spring.profiles.include：使用已经定义的starter功能,项目参考本文第三章  </li>\n</ol>\n<h1 id=\"四、starter使用说明\"><a href=\"#四、starter使用说明\" class=\"headerlink\" title=\"四、starter使用说明\"></a>四、starter使用说明</h1><h2 id=\"日志输出：qianxunclub-starter-logging\"><a href=\"#日志输出：qianxunclub-starter-logging\" class=\"headerlink\" title=\"日志输出：qianxunclub-starter-logging\"></a>日志输出：qianxunclub-starter-logging</h2><p><span id=\"qianxunclub-starter-logging\">　</span></p>\n<h3 id=\"配置方式\"><a href=\"#配置方式\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：\"><a href=\"#pom-xml引入包：\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 日志配置信息 --&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.qianxunclub&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;qianxunclub-starter-logging&lt;/artifactId&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置\"><a href=\"#application-yml配置\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>profiles需要引入配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">logging</span></span><br></pre></td></tr></table></figure>\n<p>自定义配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\"><span class=\"attr\">  level:</span></span><br><span class=\"line\">    <span class=\"string\">com.qianxunclub:</span> <span class=\"string\">debug</span></span><br></pre></td></tr></table></figure>\n<p>以下为缺省配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\"><span class=\"attr\">  level:</span></span><br><span class=\"line\">    <span class=\"string\">org.springframework:</span> <span class=\"string\">info</span></span><br><span class=\"line\">    <span class=\"string\">com.qianxunclub:</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"attr\">  pattern:</span></span><br><span class=\"line\"><span class=\"attr\">    console:</span> <span class=\"string\">\"%date&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %highlight(%-5level) %cyan(%logger&#123;64&#125;)  - %msg%n\"</span></span><br><span class=\"line\"><span class=\"attr\">  file:</span> <span class=\"string\">/logs/$&#123;app.group:&#125;/$&#123;app.name:$&#123;spring.application.name:application&#125;&#125;/$&#123;spring.application.name:application&#125;.log</span></span><br></pre></td></tr></table></figure>\n<p><strong><br>日志默认存放目录：/logs/项目分组/项目名称/日志文件<br>如果没有项目分组：/logs/项目名称/日志文件\n</strong></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>只需要在类上面添加<code>@Slf4j</code>注解，即可使用<code>log</code>对象打印日志</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Application.class, args);</span><br><span class=\"line\">\t\tlog.info(<span class=\"string\">\"日志信息\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"swagger接口文档：qianxunclub-starter-swagger\"><a href=\"#swagger接口文档：qianxunclub-starter-swagger\" class=\"headerlink\" title=\"swagger接口文档：qianxunclub-starter-swagger\"></a>swagger接口文档：qianxunclub-starter-swagger</h2><p>官网：<a href=\"https://swagger.io/\" target=\"_blank\" rel=\"noopener\">https://swagger.io/</a></p>\n<p><span id=\"qianxunclub-starter-swagger\">　</span></p>\n<h3 id=\"配置方式-1\"><a href=\"#配置方式-1\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：-1\"><a href=\"#pom-xml引入包：-1\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 自动生成接口文档 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-swagger<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-1\"><a href=\"#application-yml配置-1\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>swagger默认是不启用的，必须添加一下配置，才可以开启配置</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  swagger:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">swagger</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"启动类添加-EnableSBCSwagger注解，开启接口\"><a href=\"#启动类添加-EnableSBCSwagger注解，开启接口\" class=\"headerlink\" title=\"启动类添加@EnableSBCSwagger注解，开启接口\"></a>启动类添加<code>@EnableSBCSwagger</code>注解，开启接口</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableSBCSwagger</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Application.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方式-1\"><a href=\"#使用方式-1\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>启动项目成功后,访问API接口地址，例如：<a href=\"http://localhost:8080/swagger-ui.html。\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/swagger-ui.html。</a></p>\n<h2 id=\"mysql以及MybatisPlus引用：qianxunclub-starter-mysql\"><a href=\"#mysql以及MybatisPlus引用：qianxunclub-starter-mysql\" class=\"headerlink\" title=\"mysql以及MybatisPlus引用：qianxunclub-starter-mysql\"></a>mysql以及MybatisPlus引用：qianxunclub-starter-mysql</h2><p><span id=\"qianxunclub-starter-mysql\">　</span></p>\n<h3 id=\"3-4-1配置方式\"><a href=\"#3-4-1配置方式\" class=\"headerlink\" title=\"3.4.1配置方式\"></a>3.4.1配置方式</h3><h4 id=\"pom-xml引入包：-2\"><a href=\"#pom-xml引入包：-2\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-mysql<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-2\"><a href=\"#application-yml配置-2\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>引入mysql配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n<p>添加数据源信息：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  group:</span> <span class=\"string\">group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">oneway</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">  author:</span> <span class=\"string\">千寻啊千寻</span></span><br><span class=\"line\"><span class=\"attr\">  email:</span> <span class=\"number\">960339491</span><span class=\"string\">@qq.com</span></span><br><span class=\"line\"><span class=\"attr\">  datasource:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">xxx.xxx.xxx.xxx</span></span><br><span class=\"line\"><span class=\"attr\">    username:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"attr\">    druid:</span></span><br><span class=\"line\"><span class=\"attr\">      public-key:</span> <span class=\"string\">xxx</span></span><br></pre></td></tr></table></figure>\n<p>端口默认为：3306<br>数据库密码加密：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp druid-1.1.6.jar com.alibaba.druid.filter.config.ConfigTools your_password</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方式-2\"><a href=\"#使用方式-2\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>以上配置完成后即可使用mysql以及MybatisPlus，该starter已封装部分常用数据库操作，方法如下：<br>MybatisPlus使用说明：<a href=\"http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b\" target=\"_blank\" rel=\"noopener\">http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b</a>  </p>\n<p><strong>1、Entity规范</strong>  </p>\n<p>数据库对应的Entity需要继承<code>BaseEntity</code>，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@TableName</span>(<span class=\"string\">\"t_app\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppEntity</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseEntity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2、Param规范</strong>  </p>\n<p>Param为入参查询常用发放，Param需要继承<code>BaseParam</code>,如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppParam</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseParam</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3、Mapper规范</strong>  </p>\n<p>需要添加<code>@Mapper</code>注解，继承<code>BaseMapper</code>，并且要指定Entity泛型，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">AppMapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseMapper</span>&lt;<span class=\"title\">AppEntity</span>&gt; </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4、Dao规范</strong>  </p>\n<p>需要继承<code>BaseDao</code>,并且指定泛型，如下：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppDao</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseDao</span>&lt;<span class=\"title\">AppMapper</span>,<span class=\"title\">AppEntity</span>,<span class=\"title\">AppParam</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>5、mapper.xml规范</strong>  </p>\n<p>默认可以不添加mapper.xml，如果遇到特定的SQL，可在<code>resources</code>资源目录添加mapper文件夹，并添加对应的XML即可</p>\n<h2 id=\"redis支持：qianxunclub-starter-redis\"><a href=\"#redis支持：qianxunclub-starter-redis\" class=\"headerlink\" title=\"redis支持：qianxunclub-starter-redis\"></a>redis支持：qianxunclub-starter-redis</h2><p><span id=\"qianxunclub-starter-redis\">　</span></p>\n<h3 id=\"配置方式-2\"><a href=\"#配置方式-2\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：-3\"><a href=\"#pom-xml引入包：-3\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-3\"><a href=\"#application-yml配置-3\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>引入mysql配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">redis</span></span><br></pre></td></tr></table></figure>\n<p>添加redis配置信息：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"number\">120.25</span><span class=\"number\">.173</span><span class=\"number\">.32</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> <span class=\"number\">123456</span></span><br></pre></td></tr></table></figure>\n<p>端口默认为：6379  </p>\n<p>下面为缺省配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    database:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> </span><br><span class=\"line\"><span class=\"attr\">    pool:</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池最大连接数（使用负值表示没有限制）</span></span><br><span class=\"line\"><span class=\"attr\">      max-active:</span> <span class=\"number\">8</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class=\"line\"><span class=\"attr\">      max-wait:</span> <span class=\"bullet\">-1</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池中的最大空闲连接</span></span><br><span class=\"line\"><span class=\"attr\">      max-idle:</span> <span class=\"number\">8</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池中的最小空闲连接</span></span><br><span class=\"line\"><span class=\"attr\">      min-idle:</span> <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接超时时间（毫秒）</span></span><br><span class=\"line\"><span class=\"attr\">      timeout:</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方式-3\"><a href=\"#使用方式-3\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>在类中可直接注入<code>RedisTemplate</code>或<code>StringRedisTemplate</code>即可使用，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/redis\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@Api</span>(description = <span class=\"string\">\"redis\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ApiOperation</span>(<span class=\"string\">\"add\"</span>)</span><br><span class=\"line\">\t<span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(value=<span class=\"string\">\"add\"</span>,method = RequestMethod.GET)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tValueOperations&lt;String, String&gt; operations=redisTemplate.opsForValue();</span><br><span class=\"line\">\t\toperations.set(<span class=\"string\">\"ValueOperations\"</span>,<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">\t\tlog.info(operations.get(<span class=\"string\">\"ValueOperations\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstringRedisTemplate.opsForValue().set(<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"111\"</span>);</span><br><span class=\"line\">\t\tlog.info(stringRedisTemplate.opsForValue().get(<span class=\"string\">\"aaa\"</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"跨域请求、http编码配置入参校验等：qianxunclub-starter-web\"><a href=\"#跨域请求、http编码配置入参校验等：qianxunclub-starter-web\" class=\"headerlink\" title=\"跨域请求、http编码配置入参校验等：qianxunclub-starter-web\"></a>跨域请求、http编码配置入参校验等：qianxunclub-starter-web</h2><p><span id=\"qianxunclub-starter-web\">　</span></p>\n<h3 id=\"配置方式-3\"><a href=\"#配置方式-3\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：-4\"><a href=\"#pom-xml引入包：-4\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 支持跨域请求 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-4\"><a href=\"#application-yml配置-4\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>profiles需要引入配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">web</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"五、配置最终效果如下\"><a href=\"#五、配置最终效果如下\" class=\"headerlink\" title=\"五、配置最终效果如下\"></a>五、配置最终效果如下</h1><p>pom.xml：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-demo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 自动生成接口文档 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-swagger<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- web配置信息 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 日志配置信息 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-mysql<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>application.yml:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  group:</span> <span class=\"string\">group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">demo服务</span></span><br><span class=\"line\"><span class=\"attr\">  author:</span> <span class=\"string\">千寻啊千寻</span></span><br><span class=\"line\"><span class=\"attr\">  email:</span> <span class=\"number\">960339491</span><span class=\"string\">@qq.com</span></span><br><span class=\"line\"><span class=\"attr\">  swagger:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  datasource:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">xxx.xxx.xxx.xxx</span></span><br><span class=\"line\"><span class=\"attr\">    username:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"attr\">    druid:</span></span><br><span class=\"line\"><span class=\"attr\">      public-key:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">web</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">swagger</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">logging</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n<p>完！</p>\n","site":{"data":{"about":{"avatar":"../photos/20180615130801.jpg","name":"叶统学","tag":"JAVA/架构/开发","desc":"QQ：1049385445","skills":{"JAVA":8,"Mysql":8,"微服务":9,"分布式":7,"高并发":7,"Node.js":5,"Linux":7,"前端":6},"reward":["https://yetongxue.github.io/photos/weixin_qrcode.png","https://yetongxue.github.io/photos/zhifubao_qrcode.png"]},"hint":{"new":{"selector":[".menu-search"]}},"slider":[{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"做一个会思考的攻城狮，要有造轮子的能力和不造乱子的觉悟","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"发现的有趣知识和工具，记录遇到的技术问题以及解决思路，记录成长的里程碑","link":"#"},{"image":"../pic/banner1.png","align":"left","title":"会思考的攻城狮","subtitle":"记录感动的人和事。。。","link":"#"}],"link":{"social":{"qq":"tencent://message/?uin=1049385445&Site=&Menu=yes","send":"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=WWhpbWBqYWxtbWwZKCh3OjY0","gg":"#","rss":"/atom.xml"},"extern":{"我的Github":"https://github.com/yetongxue?tab=repositories","早餐有蛋":"#","静觅":"http://cuiqingcai.com/","Alliot's blog":"https://www.iots.vip/","Myths":"https://blog.mythsman.com/"}},"reading":{"define":{"readed":"已读","reading":"在读","wanted":"想读"},"contents":{"readed":[{"title":"众妙之门：网站UI设计之道","cover":"http://img3.douban.com/lpic/s23139051.jpg","review":"推荐非UI人士了解UI阅读。","score":"7","doubanLink":"http://book.douban.com/subject/20281463/"},{"title":"JavaScript模式","cover":"http://img5.douban.com/lpic/s11337059.jpg","review":"书很薄，但内容相当实用。","score":"8.5","doubanLink":"http://book.douban.com/subject/11506062/"},{"title":"JavaScript语言精粹","cover":"http://img3.douban.com/lpic/s11373174.jpg","review":"这是一本前端人员的基础书，强烈推荐阅读，而且越早看受益越多！","score":"9.5","doubanLink":"http://book.douban.com/subject/11874748/"}],"reading":[{"title":"网络游戏核心技术与实战","cover":"http://img4.douban.com/lpic/s27881888.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/25850090/"}],"wanted":[{"title":"计算机程序的构造和解释","cover":"http://img4.douban.com/lpic/s1113106.jpg","review":"","score":null,"doubanLink":"http://book.douban.com/subject/1148282/"}]}}}},"excerpt":"<h1 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h1><p>SpringBoot咱们开发一般<code>pom.xml</code>是都集成<code>spring-boot-starter-parent</code>的，这里为什么要自定义一个starter-parent呢，主要以下几个理由：  </p>\n<ol>\n<li>定义开发规范：自定义parent可以制定统一配置和依赖规范  </li>\n<li>提高开发效率 </li>\n<li>统一模块插件化管理：可以在parent实现需要的插件配置，如：redis、mysql、日志、参数教研等  </li>\n<li>项目版本升级和依赖包升级更加方便统一  </li>\n<li>日志收集等可以从切面获取各个项目数据和日志等</li>\n<li>项目持续集成部署交付方便处理  </li>\n</ol>","more":"<p> 其实好处挺多的，谁用谁知道。</p>\n<h1 id=\"一、准备\"><a href=\"#一、准备\" class=\"headerlink\" title=\"一、准备\"></a>一、准备</h1><p><em><code>qianxunclub-starter-parent</code>里面已经开发好的几个插件，需要依据公司真实环境修改配置</em></p>\n<p>源码地址：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/qianxunclub/qianxunclub-starter-parent.git</span><br></pre></td></tr></table></figure></p>\n<p>因为<code>qianxunclub-starter-parent</code>依赖了另一个<code>framework-common</code>工具包，所以要下载该包源码并且编译：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://gitee.com/qianxunclub/framework-common.git</span><br></pre></td></tr></table></figure></p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd framework-common</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install</span><br></pre></td></tr></table></figure>\n<h1 id=\"二、starter-parent插件功能列表\"><a href=\"#二、starter-parent插件功能列表\" class=\"headerlink\" title=\"二、starter-parent插件功能列表\"></a>二、starter-parent插件功能列表</h1><p>本starter已包含一下功能：  </p>\n<ol>\n<li><a href=\"https://projectlombok.org/features/all\" target=\"_blank\" rel=\"noopener\">lombok插件添加</a></li>\n<li><a href=\"#qianxunclub-starter-logging\">日志输出：qianxunclub-starter-logging</a></li>\n<li><a href=\"#qianxunclub-starter-swagger\">swagger接口文档：qianxunclub-starter-swagger</a></li>\n<li><a href=\"#qianxunclub-starter-web\">跨域请求、http编码配置入参校验等：qianxunclub-starter-web</a></li>\n<li><a href=\"#qianxunclub-starter-mysql\">mysql以及MybatisPlus引用：qianxunclub-starter-mysql</a>（如果不使用，禁止引入该包，否则项目启动出错）</li>\n<li><a href=\"#qianxunclub-starter-redis\">redis支持：qianxunclub-starter-redis</a>（如果不使用，禁止引入该包，否则项目启动出错）  </li>\n</ol>\n<h1 id=\"三、开发配置\"><a href=\"#三、开发配置\" class=\"headerlink\" title=\"三、开发配置\"></a>三、开发配置</h1><h2 id=\"pom-xml编辑\"><a href=\"#pom-xml编辑\" class=\"headerlink\" title=\"pom.xml编辑\"></a>pom.xml编辑</h2><p>POM需要依赖父级<code>qianxunclub-starter-parent</code>：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>继承该依赖，无需再引用<code>spring-boot-starter-parent</code>,本项目已经继承的<code>spring-boot-starter-parent</code>版本为<code>1.5.9.RELEASE</code>。</p>\n<h2 id=\"项目目录结构\"><a href=\"#项目目录结构\" class=\"headerlink\" title=\"项目目录结构\"></a>项目目录结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qianxunclub-demo</span><br><span class=\"line\">├── pom.xml</span><br><span class=\"line\">├── qianxunclub-demo.iml</span><br><span class=\"line\">└── src</span><br><span class=\"line\">    ├── main</span><br><span class=\"line\">    │   ├── java</span><br><span class=\"line\">    │   │   └── com</span><br><span class=\"line\">    │   │       └── qianxunclub</span><br><span class=\"line\">    │   │           ├── Application.java</span><br><span class=\"line\">    │   │           └── demo</span><br><span class=\"line\">    │   │               └── web</span><br><span class=\"line\">    │   └── resources</span><br><span class=\"line\">    │       └── application.yml</span><br><span class=\"line\">    └── test</span><br><span class=\"line\">        └── java</span><br></pre></td></tr></table></figure>\n<ol>\n<li>com.qianxunclub：项目根包名，必须以该名称命名，并且SpringBoot启动类必须在该目录</li>\n<li>group：项目分组名称，通常依据项目在GIT分组名称命名</li>\n<li>demo：项目名称，通常依据GIT名称命名</li>\n<li>web：controller控制器，，必须以该名称命名</li>\n<li>resources：资源目录</li>\n</ol>\n<h2 id=\"application-yml基础配置信息\"><a href=\"#application-yml基础配置信息\" class=\"headerlink\" title=\"application.yml基础配置信息\"></a>application.yml基础配置信息</h2><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  group:</span> <span class=\"string\">group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">  descriptions:</span> <span class=\"string\">项目描述</span></span><br><span class=\"line\"><span class=\"attr\">  author:</span> <span class=\"string\">千寻啊千寻</span></span><br><span class=\"line\"><span class=\"attr\">  email:</span> <span class=\"number\">960339491</span><span class=\"string\">@qq.com</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">web</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">swagger</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">logging</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>group：项目分组名称，和包结构中的分组名称必须一致  </li>\n<li>name：项目名称。和包结构中项目名称必须一致  </li>\n<li>descriptions：项目描述信息  </li>\n<li>author：项目负责人名称  </li>\n<li>email：项目负责人邮箱  </li>\n<li>spring.profiles.include：使用已经定义的starter功能,项目参考本文第三章  </li>\n</ol>\n<h1 id=\"四、starter使用说明\"><a href=\"#四、starter使用说明\" class=\"headerlink\" title=\"四、starter使用说明\"></a>四、starter使用说明</h1><h2 id=\"日志输出：qianxunclub-starter-logging\"><a href=\"#日志输出：qianxunclub-starter-logging\" class=\"headerlink\" title=\"日志输出：qianxunclub-starter-logging\"></a>日志输出：qianxunclub-starter-logging</h2><p><span id=\"qianxunclub-starter-logging\">　</span></p>\n<h3 id=\"配置方式\"><a href=\"#配置方式\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：\"><a href=\"#pom-xml引入包：\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 日志配置信息 --&gt;</span><br><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.qianxunclub&lt;/groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;qianxunclub-starter-logging&lt;/artifactId&gt;</span><br><span class=\"line\">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置\"><a href=\"#application-yml配置\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>profiles需要引入配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">logging</span></span><br></pre></td></tr></table></figure>\n<p>自定义配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\"><span class=\"attr\">  level:</span></span><br><span class=\"line\">    <span class=\"string\">com.qianxunclub:</span> <span class=\"string\">debug</span></span><br></pre></td></tr></table></figure>\n<p>以下为缺省配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">logging:</span></span><br><span class=\"line\"><span class=\"attr\">  level:</span></span><br><span class=\"line\">    <span class=\"string\">org.springframework:</span> <span class=\"string\">info</span></span><br><span class=\"line\">    <span class=\"string\">com.qianxunclub:</span> <span class=\"string\">info</span></span><br><span class=\"line\"><span class=\"attr\">  pattern:</span></span><br><span class=\"line\"><span class=\"attr\">    console:</span> <span class=\"string\">\"%date&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %highlight(%-5level) %cyan(%logger&#123;64&#125;)  - %msg%n\"</span></span><br><span class=\"line\"><span class=\"attr\">  file:</span> <span class=\"string\">/logs/$&#123;app.group:&#125;/$&#123;app.name:$&#123;spring.application.name:application&#125;&#125;/$&#123;spring.application.name:application&#125;.log</span></span><br></pre></td></tr></table></figure>\n<p><strong><br>日志默认存放目录：/logs/项目分组/项目名称/日志文件<br>如果没有项目分组：/logs/项目名称/日志文件\n</strong></p>\n<h3 id=\"使用方式\"><a href=\"#使用方式\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>只需要在类上面添加<code>@Slf4j</code>注解，即可使用<code>log</code>对象打印日志</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Application.class, args);</span><br><span class=\"line\">\t\tlog.info(<span class=\"string\">\"日志信息\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"swagger接口文档：qianxunclub-starter-swagger\"><a href=\"#swagger接口文档：qianxunclub-starter-swagger\" class=\"headerlink\" title=\"swagger接口文档：qianxunclub-starter-swagger\"></a>swagger接口文档：qianxunclub-starter-swagger</h2><p>官网：<a href=\"https://swagger.io/\" target=\"_blank\" rel=\"noopener\">https://swagger.io/</a></p>\n<p><span id=\"qianxunclub-starter-swagger\">　</span></p>\n<h3 id=\"配置方式-1\"><a href=\"#配置方式-1\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：-1\"><a href=\"#pom-xml引入包：-1\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 自动生成接口文档 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-swagger<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-1\"><a href=\"#application-yml配置-1\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>swagger默认是不启用的，必须添加一下配置，才可以开启配置</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  swagger:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">swagger</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"启动类添加-EnableSBCSwagger注解，开启接口\"><a href=\"#启动类添加-EnableSBCSwagger注解，开启接口\" class=\"headerlink\" title=\"启动类添加@EnableSBCSwagger注解，开启接口\"></a>启动类添加<code>@EnableSBCSwagger</code>注解，开启接口</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableSBCSwagger</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSpringApplication.run(Application.class, args);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方式-1\"><a href=\"#使用方式-1\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>启动项目成功后,访问API接口地址，例如：<a href=\"http://localhost:8080/swagger-ui.html。\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/swagger-ui.html。</a></p>\n<h2 id=\"mysql以及MybatisPlus引用：qianxunclub-starter-mysql\"><a href=\"#mysql以及MybatisPlus引用：qianxunclub-starter-mysql\" class=\"headerlink\" title=\"mysql以及MybatisPlus引用：qianxunclub-starter-mysql\"></a>mysql以及MybatisPlus引用：qianxunclub-starter-mysql</h2><p><span id=\"qianxunclub-starter-mysql\">　</span></p>\n<h3 id=\"3-4-1配置方式\"><a href=\"#3-4-1配置方式\" class=\"headerlink\" title=\"3.4.1配置方式\"></a>3.4.1配置方式</h3><h4 id=\"pom-xml引入包：-2\"><a href=\"#pom-xml引入包：-2\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-mysql<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-2\"><a href=\"#application-yml配置-2\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>引入mysql配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n<p>添加数据源信息：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  group:</span> <span class=\"string\">group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">oneway</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">  author:</span> <span class=\"string\">千寻啊千寻</span></span><br><span class=\"line\"><span class=\"attr\">  email:</span> <span class=\"number\">960339491</span><span class=\"string\">@qq.com</span></span><br><span class=\"line\"><span class=\"attr\">  datasource:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">xxx.xxx.xxx.xxx</span></span><br><span class=\"line\"><span class=\"attr\">    username:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"attr\">    druid:</span></span><br><span class=\"line\"><span class=\"attr\">      public-key:</span> <span class=\"string\">xxx</span></span><br></pre></td></tr></table></figure>\n<p>端口默认为：3306<br>数据库密码加密：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -cp druid-1.1.6.jar com.alibaba.druid.filter.config.ConfigTools your_password</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方式-2\"><a href=\"#使用方式-2\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>以上配置完成后即可使用mysql以及MybatisPlus，该starter已封装部分常用数据库操作，方法如下：<br>MybatisPlus使用说明：<a href=\"http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b\" target=\"_blank\" rel=\"noopener\">http://mp.baomidou.com/#/?id=%e7%ae%80%e4%bb%8b</a>  </p>\n<p><strong>1、Entity规范</strong>  </p>\n<p>数据库对应的Entity需要继承<code>BaseEntity</code>，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"meta\">@TableName</span>(<span class=\"string\">\"t_app\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppEntity</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseEntity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>2、Param规范</strong>  </p>\n<p>Param为入参查询常用发放，Param需要继承<code>BaseParam</code>,如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Data</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppParam</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseParam</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>3、Mapper规范</strong>  </p>\n<p>需要添加<code>@Mapper</code>注解，继承<code>BaseMapper</code>，并且要指定Entity泛型，如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Mapper</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">AppMapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseMapper</span>&lt;<span class=\"title\">AppEntity</span>&gt; </span>&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>4、Dao规范</strong>  </p>\n<p>需要继承<code>BaseDao</code>,并且指定泛型，如下：  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AppDao</span> <span class=\"keyword\">extends</span> <span class=\"title\">BaseDao</span>&lt;<span class=\"title\">AppMapper</span>,<span class=\"title\">AppEntity</span>,<span class=\"title\">AppParam</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>5、mapper.xml规范</strong>  </p>\n<p>默认可以不添加mapper.xml，如果遇到特定的SQL，可在<code>resources</code>资源目录添加mapper文件夹，并添加对应的XML即可</p>\n<h2 id=\"redis支持：qianxunclub-starter-redis\"><a href=\"#redis支持：qianxunclub-starter-redis\" class=\"headerlink\" title=\"redis支持：qianxunclub-starter-redis\"></a>redis支持：qianxunclub-starter-redis</h2><p><span id=\"qianxunclub-starter-redis\">　</span></p>\n<h3 id=\"配置方式-2\"><a href=\"#配置方式-2\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：-3\"><a href=\"#pom-xml引入包：-3\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-redis<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-3\"><a href=\"#application-yml配置-3\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>引入mysql配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">redis</span></span><br></pre></td></tr></table></figure>\n<p>添加redis配置信息：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"number\">120.25</span><span class=\"number\">.173</span><span class=\"number\">.32</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> <span class=\"number\">123456</span></span><br></pre></td></tr></table></figure>\n<p>端口默认为：6379  </p>\n<p>下面为缺省配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  redis:</span></span><br><span class=\"line\"><span class=\"attr\">    database:</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">localhost</span></span><br><span class=\"line\"><span class=\"attr\">    port:</span> <span class=\"number\">6379</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> </span><br><span class=\"line\"><span class=\"attr\">    pool:</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池最大连接数（使用负值表示没有限制）</span></span><br><span class=\"line\"><span class=\"attr\">      max-active:</span> <span class=\"number\">8</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池最大阻塞等待时间（使用负值表示没有限制）</span></span><br><span class=\"line\"><span class=\"attr\">      max-wait:</span> <span class=\"bullet\">-1</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池中的最大空闲连接</span></span><br><span class=\"line\"><span class=\"attr\">      max-idle:</span> <span class=\"number\">8</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接池中的最小空闲连接</span></span><br><span class=\"line\"><span class=\"attr\">      min-idle:</span> <span class=\"number\">0</span></span><br><span class=\"line\">      <span class=\"comment\"># 连接超时时间（毫秒）</span></span><br><span class=\"line\"><span class=\"attr\">      timeout:</span> <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"使用方式-3\"><a href=\"#使用方式-3\" class=\"headerlink\" title=\"使用方式\"></a>使用方式</h3><p>在类中可直接注入<code>RedisTemplate</code>或<code>StringRedisTemplate</code>即可使用，例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf</span>4j</span><br><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(value = <span class=\"string\">\"/redis\"</span>)</span><br><span class=\"line\"><span class=\"meta\">@AllArgsConstructor</span></span><br><span class=\"line\"><span class=\"meta\">@Api</span>(description = <span class=\"string\">\"redis\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">RedisController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> RedisTemplate redisTemplate;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@ApiOperation</span>(<span class=\"string\">\"add\"</span>)</span><br><span class=\"line\">\t<span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">\t<span class=\"meta\">@RequestMapping</span>(value=<span class=\"string\">\"add\"</span>,method = RequestMethod.GET)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tValueOperations&lt;String, String&gt; operations=redisTemplate.opsForValue();</span><br><span class=\"line\">\t\toperations.set(<span class=\"string\">\"ValueOperations\"</span>,<span class=\"string\">\"1\"</span>);</span><br><span class=\"line\">\t\tlog.info(operations.get(<span class=\"string\">\"ValueOperations\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tstringRedisTemplate.opsForValue().set(<span class=\"string\">\"aaa\"</span>, <span class=\"string\">\"111\"</span>);</span><br><span class=\"line\">\t\tlog.info(stringRedisTemplate.opsForValue().get(<span class=\"string\">\"aaa\"</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"跨域请求、http编码配置入参校验等：qianxunclub-starter-web\"><a href=\"#跨域请求、http编码配置入参校验等：qianxunclub-starter-web\" class=\"headerlink\" title=\"跨域请求、http编码配置入参校验等：qianxunclub-starter-web\"></a>跨域请求、http编码配置入参校验等：qianxunclub-starter-web</h2><p><span id=\"qianxunclub-starter-web\">　</span></p>\n<h3 id=\"配置方式-3\"><a href=\"#配置方式-3\" class=\"headerlink\" title=\"配置方式\"></a>配置方式</h3><h4 id=\"pom-xml引入包：-4\"><a href=\"#pom-xml引入包：-4\" class=\"headerlink\" title=\"pom.xml引入包：\"></a>pom.xml引入包：</h4><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 支持跨域请求 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"application-yml配置-4\"><a href=\"#application-yml配置-4\" class=\"headerlink\" title=\"application.yml配置\"></a>application.yml配置</h4><p>profiles需要引入配置：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">web</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"五、配置最终效果如下\"><a href=\"#五、配置最终效果如下\" class=\"headerlink\" title=\"五、配置最终效果如下\"></a>五、配置最终效果如下</h1><p>pom.xml：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">modelVersion</span>&gt;</span>4.0.0<span class=\"tag\">&lt;/<span class=\"name\">modelVersion</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-demo<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.0-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-parent<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>0.0.1-SNAPSHOT<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">parent</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 自动生成接口文档 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-swagger<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- web配置信息 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 日志配置信息 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-logging<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- MYSQL配置信息 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.qianxunclub<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>qianxunclub-starter-mysql<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>application.yml:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">app:</span></span><br><span class=\"line\"><span class=\"attr\">  group:</span> <span class=\"string\">group</span></span><br><span class=\"line\"><span class=\"attr\">  name:</span> <span class=\"string\">demo</span></span><br><span class=\"line\"><span class=\"attr\">  description:</span> <span class=\"string\">demo服务</span></span><br><span class=\"line\"><span class=\"attr\">  author:</span> <span class=\"string\">千寻啊千寻</span></span><br><span class=\"line\"><span class=\"attr\">  email:</span> <span class=\"number\">960339491</span><span class=\"string\">@qq.com</span></span><br><span class=\"line\"><span class=\"attr\">  swagger:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  datasource:</span></span><br><span class=\"line\"><span class=\"attr\">    host:</span> <span class=\"string\">xxx.xxx.xxx.xxx</span></span><br><span class=\"line\"><span class=\"attr\">    username:</span> <span class=\"string\">root</span></span><br><span class=\"line\"><span class=\"attr\">    password:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"><span class=\"attr\">    druid:</span></span><br><span class=\"line\"><span class=\"attr\">      public-key:</span> <span class=\"string\">xxx</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\"><span class=\"attr\">  profiles:</span></span><br><span class=\"line\"><span class=\"attr\">    include:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">web</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">swagger</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">logging</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">mysql</span></span><br></pre></td></tr></table></figure>\n<p>完！</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"ck7o5o59b0003w8mx3phnohv4","category_id":"ck7o5o59h0005w8mx92dhk5tb","_id":"ck7o5o59r000gw8mxflv48h13"},{"post_id":"ck7o5o59f0004w8mxo9x4dx6s","category_id":"ck7o5o59h0005w8mx92dhk5tb","_id":"ck7o5o59u000lw8mx75jxkiz1"},{"post_id":"ck7o5o59j0007w8mxj72a1fe0","category_id":"ck7o5o59h0005w8mx92dhk5tb","_id":"ck7o5o59w000pw8mxkj6txeop"},{"post_id":"ck7o5o59l0009w8mxyiodn2t4","category_id":"ck7o5o59w000qw8mxoypmbig0","_id":"ck7o5o59z000yw8mxra1g3g70"},{"post_id":"ck7o5o59n000dw8mxeul1i3u9","category_id":"ck7o5o59y000uw8mxfch86n14","_id":"ck7o5o5a00012w8mxbctz7qpa"},{"post_id":"ck7o5o59q000ew8mxouvhoe2j","category_id":"ck7o5o5a0000zw8mxad5tidum","_id":"ck7o5o5a10016w8mxav3w92f8"},{"post_id":"ck7o5o59s000iw8mx6ax6hmya","category_id":"ck7o5o5a10014w8mxt8ok249c","_id":"ck7o5o5a3001bw8mxeig7igqa"},{"post_id":"ck7o5o59t000jw8mxb5bxuhhp","category_id":"ck7o5o5a10014w8mxt8ok249c","_id":"ck7o5o5a3001ew8mx9pxnk0pk"},{"post_id":"ck7o5o59v000nw8mx00l465bi","category_id":"ck7o5o5a2001aw8mxy9yjmt0b","_id":"ck7o5o5a4001iw8mxri9xx085"},{"post_id":"ck7o5o59w000ow8mxahz3pkg4","category_id":"ck7o5o5a2001aw8mxy9yjmt0b","_id":"ck7o5o5a7001qw8mxwywe4q0n"},{"post_id":"ck7o5o59x000sw8mxw4om2wf8","category_id":"ck7o5o5a6001nw8mxo6hzi3tw","_id":"ck7o5o5a8001tw8mxdb7dtg25"},{"post_id":"ck7o5o59k0008w8mx8wno15br","category_id":"ck7o5o59u000kw8mxqhr8v2o2","_id":"ck7o5o5aa0020w8mxr7xzf0s1"},{"post_id":"ck7o5o59k0008w8mx8wno15br","category_id":"ck7o5o5a4001fw8mxbka4cpux","_id":"ck7o5o5aa0022w8mxutxubdtp"},{"post_id":"ck7o5o59k0008w8mx8wno15br","category_id":"ck7o5o5a7001rw8mxajdbugo9","_id":"ck7o5o5ab0024w8mxksevcw4b"},{"post_id":"ck7o5o59k0008w8mx8wno15br","category_id":"ck7o5o5a8001vw8mx8h27ll4h","_id":"ck7o5o5ac0026w8mxaxgqgzgs"},{"post_id":"ck7o5o5al002iw8mxxv0hqkqw","category_id":"ck7o5o59h0005w8mx92dhk5tb","_id":"ck7o5o5ap002pw8mxfrrm3xh2"},{"post_id":"ck7o5o5am002lw8mxu90hbise","category_id":"ck7o5o5a6001nw8mxo6hzi3tw","_id":"ck7o5o5aq002sw8mxidie6nc3"},{"post_id":"ck7o5o5ao002nw8mxf4ie06g1","category_id":"ck7o5o5a10014w8mxt8ok249c","_id":"ck7o5o5ar002uw8mxzhgpyzvj"},{"post_id":"ck7o5o5aj002hw8mxy7jj15pj","category_id":"ck7o5o5am002jw8mxc1d7aa4i","_id":"ck7o5o5ar002ww8mxqi1okmeo"},{"post_id":"ck7o5o5b40039w8mx6pz57k2a","category_id":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5ba003ow8mxfqw8tu8c"},{"post_id":"ck7o5o5b40039w8mx6pz57k2a","category_id":"ck7o5o5b9003jw8mx472v8wee","_id":"ck7o5o5ba003qw8mxg58vfrbf"},{"post_id":"ck7o5o5b00034w8mxgdxerzqn","category_id":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bb003sw8mxn81og07w"},{"post_id":"ck7o5o5b00034w8mxgdxerzqn","category_id":"ck7o5o5b9003mw8mxzpy2iurw","_id":"ck7o5o5bb003tw8mxkm4yy9qw"},{"post_id":"ck7o5o5b10035w8mxjjyb8dui","category_id":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bc003uw8mxvy6n12kx"},{"post_id":"ck7o5o5b10035w8mxjjyb8dui","category_id":"ck7o5o5b9003mw8mxzpy2iurw","_id":"ck7o5o5bc003vw8mxrubcbbyk"},{"post_id":"ck7o5o5b30038w8mxi8bpbzty","category_id":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bc003ww8mxot4pcvi7"},{"post_id":"ck7o5o5b30038w8mxi8bpbzty","category_id":"ck7o5o5bb003rw8mxqog68omx","_id":"ck7o5o5bc003xw8mxqv3by7by"},{"post_id":"ck7o5o5bf003yw8mxy1uw4u6e","category_id":"ck7o5o5a6001nw8mxo6hzi3tw","_id":"ck7o5o5bk0043w8mxvi0w862b"},{"post_id":"ck7o5o5bi0041w8mx2mzjm7mk","category_id":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bm0047w8mxeb4z5iz1"},{"post_id":"ck7o5o5bi0041w8mx2mzjm7mk","category_id":"ck7o5o5bb003rw8mxqog68omx","_id":"ck7o5o5bn0049w8mxo3ouberh"},{"post_id":"ck7o5o5bg003zw8mxnl5xmfjv","category_id":"ck7o5o5b30036w8mxryrf542t","_id":"ck7o5o5bo004bw8mxli2s9tic"},{"post_id":"ck7o5o5bg003zw8mxnl5xmfjv","category_id":"ck7o5o5bk0042w8mxcez3j9p8","_id":"ck7o5o5bo004dw8mxdjfe2iyu"}],"PostTag":[{"post_id":"ck7o5o59b0003w8mx3phnohv4","tag_id":"ck7o5o59i0006w8mx3yk9d1k1","_id":"ck7o5o59n000cw8mxgzjiuwth"},{"post_id":"ck7o5o59f0004w8mxo9x4dx6s","tag_id":"ck7o5o59m000bw8mxitmtzsjs","_id":"ck7o5o59y000tw8mx9skkevj7"},{"post_id":"ck7o5o59f0004w8mxo9x4dx6s","tag_id":"ck7o5o59s000hw8mxq13gjiv6","_id":"ck7o5o59z000vw8mxxeoprf8r"},{"post_id":"ck7o5o59f0004w8mxo9x4dx6s","tag_id":"ck7o5o59u000mw8mxzp01jhew","_id":"ck7o5o59z000xw8mxn4unmc73"},{"post_id":"ck7o5o59j0007w8mxj72a1fe0","tag_id":"ck7o5o59m000bw8mxitmtzsjs","_id":"ck7o5o5a00011w8mxyf12fxfr"},{"post_id":"ck7o5o59j0007w8mxj72a1fe0","tag_id":"ck7o5o59z000ww8mxlz60hizh","_id":"ck7o5o5a00013w8mx8s56bh5p"},{"post_id":"ck7o5o59k0008w8mx8wno15br","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5a20019w8mxo4ijv0u7"},{"post_id":"ck7o5o59k0008w8mx8wno15br","tag_id":"ck7o5o5a10015w8mxwjbdtgyc","_id":"ck7o5o5a3001cw8mxs5xhuhqj"},{"post_id":"ck7o5o59l0009w8mxyiodn2t4","tag_id":"ck7o5o5a20018w8mx3cvagv7s","_id":"ck7o5o5a4001hw8mxkcpsx4hj"},{"post_id":"ck7o5o59l0009w8mxyiodn2t4","tag_id":"ck7o5o5a3001dw8mxxovhqnu1","_id":"ck7o5o5a5001kw8mxyauqsf4l"},{"post_id":"ck7o5o59n000dw8mxeul1i3u9","tag_id":"ck7o5o5a4001gw8mxbvp94lrh","_id":"ck7o5o5a6001mw8mxgmoy2sfu"},{"post_id":"ck7o5o59q000ew8mxouvhoe2j","tag_id":"ck7o5o5a5001lw8mxov950hv4","_id":"ck7o5o5a7001pw8mx3blfk6o5"},{"post_id":"ck7o5o59s000iw8mx6ax6hmya","tag_id":"ck7o5o5a6001ow8mxnbrf8lll","_id":"ck7o5o5a9001ww8mxwpj7sxt9"},{"post_id":"ck7o5o59s000iw8mx6ax6hmya","tag_id":"ck7o5o5a7001sw8mx8g7zrbmz","_id":"ck7o5o5a9001xw8mx1xqkb0mm"},{"post_id":"ck7o5o59t000jw8mxb5bxuhhp","tag_id":"ck7o5o5a8001uw8mxcjjjzt7y","_id":"ck7o5o5aa0021w8mxmdnscnh7"},{"post_id":"ck7o5o59t000jw8mxb5bxuhhp","tag_id":"ck7o5o5a7001sw8mx8g7zrbmz","_id":"ck7o5o5aa0023w8mxvv1f6n1y"},{"post_id":"ck7o5o59v000nw8mx00l465bi","tag_id":"ck7o5o5aa001zw8mx6p2zowr4","_id":"ck7o5o5ac0028w8mxhbl6m2ld"},{"post_id":"ck7o5o59v000nw8mx00l465bi","tag_id":"ck7o5o5ab0025w8mxtekznazs","_id":"ck7o5o5ad0029w8mx6btmdjc8"},{"post_id":"ck7o5o59w000ow8mxahz3pkg4","tag_id":"ck7o5o5aa001zw8mx6p2zowr4","_id":"ck7o5o5ae002cw8mxql30bwxn"},{"post_id":"ck7o5o59w000ow8mxahz3pkg4","tag_id":"ck7o5o5ab0025w8mxtekznazs","_id":"ck7o5o5ae002dw8mx7wvztroy"},{"post_id":"ck7o5o59x000sw8mxw4om2wf8","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5af002fw8mxqvmjuh5u"},{"post_id":"ck7o5o59x000sw8mxw4om2wf8","tag_id":"ck7o5o5ae002ew8mx2ay6jmm3","_id":"ck7o5o5af002gw8mxjlqiv4g1"},{"post_id":"ck7o5o5al002iw8mxxv0hqkqw","tag_id":"ck7o5o59m000bw8mxitmtzsjs","_id":"ck7o5o5ao002mw8mx0rujpcis"},{"post_id":"ck7o5o5al002iw8mxxv0hqkqw","tag_id":"ck7o5o59u000mw8mxzp01jhew","_id":"ck7o5o5ap002ow8mxdtzgvcoj"},{"post_id":"ck7o5o5aj002hw8mxy7jj15pj","tag_id":"ck7o5o5am002kw8mxw3vbtdjr","_id":"ck7o5o5aq002rw8mxnu97qfcr"},{"post_id":"ck7o5o5aj002hw8mxy7jj15pj","tag_id":"ck7o5o59s000hw8mxq13gjiv6","_id":"ck7o5o5ar002tw8mx52qnhoso"},{"post_id":"ck7o5o5am002lw8mxu90hbise","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5as002yw8mxgot5d4sf"},{"post_id":"ck7o5o5am002lw8mxu90hbise","tag_id":"ck7o5o5ap002qw8mxokm2236j","_id":"ck7o5o5at002zw8mxd9lhjc1h"},{"post_id":"ck7o5o5am002lw8mxu90hbise","tag_id":"ck7o5o59u000mw8mxzp01jhew","_id":"ck7o5o5at0030w8mx4tepx3h5"},{"post_id":"ck7o5o5am002lw8mxu90hbise","tag_id":"ck7o5o5ar002vw8mxk7ma0mkw","_id":"ck7o5o5au0031w8mxwdjdxstj"},{"post_id":"ck7o5o5ao002nw8mxf4ie06g1","tag_id":"ck7o5o5as002xw8mxjwpqqtw5","_id":"ck7o5o5au0032w8mxmssyh679"},{"post_id":"ck7o5o5ao002nw8mxf4ie06g1","tag_id":"ck7o5o5a7001sw8mx8g7zrbmz","_id":"ck7o5o5au0033w8mxavh7tl8e"},{"post_id":"ck7o5o5b30038w8mxi8bpbzty","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5b5003aw8mxo6ck5xbw"},{"post_id":"ck7o5o5b30038w8mxi8bpbzty","tag_id":"ck7o5o59u000mw8mxzp01jhew","_id":"ck7o5o5b7003dw8mxb89euuex"},{"post_id":"ck7o5o5b00034w8mxgdxerzqn","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5b7003ew8mx0azqidja"},{"post_id":"ck7o5o5b00034w8mxgdxerzqn","tag_id":"ck7o5o5b30037w8mx1vmazfem","_id":"ck7o5o5b8003hw8mxvh05257x"},{"post_id":"ck7o5o5b10035w8mxjjyb8dui","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5b8003iw8mxtryjym0h"},{"post_id":"ck7o5o5b10035w8mxjjyb8dui","tag_id":"ck7o5o5b30037w8mx1vmazfem","_id":"ck7o5o5b9003kw8mxsva2ntae"},{"post_id":"ck7o5o5b40039w8mx6pz57k2a","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5b9003lw8mx7hfxx242"},{"post_id":"ck7o5o5b40039w8mx6pz57k2a","tag_id":"ck7o5o5b8003gw8mxkxd9po48","_id":"ck7o5o5ba003nw8mx2cq8nh8a"},{"post_id":"ck7o5o5bi0041w8mx2mzjm7mk","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5bl0044w8mxj2orz2qo"},{"post_id":"ck7o5o5bi0041w8mx2mzjm7mk","tag_id":"ck7o5o59u000mw8mxzp01jhew","_id":"ck7o5o5bm0046w8mxi5sgly67"},{"post_id":"ck7o5o5bf003yw8mxy1uw4u6e","tag_id":"ck7o5o5bi0040w8mxofqvgtng","_id":"ck7o5o5bm0048w8mxdzjs2g4d"},{"post_id":"ck7o5o5bg003zw8mxnl5xmfjv","tag_id":"ck7o5o5a00010w8mxajkfmssk","_id":"ck7o5o5bn004aw8mx63hlaztw"},{"post_id":"ck7o5o5bg003zw8mxnl5xmfjv","tag_id":"ck7o5o5bl0045w8mx2ym9cqrg","_id":"ck7o5o5bo004cw8mxisrd1u0n"},{"post_id":"ck7o5o5bg003zw8mxnl5xmfjv","tag_id":"ck7o5o5ap002qw8mxokm2236j","_id":"ck7o5o5bp004ew8mxx0zmz2ur"}],"Tag":[{"name":"常见异常","_id":"ck7o5o59i0006w8mx3yk9d1k1"},{"name":"Exception","_id":"ck7o5o59m000bw8mxitmtzsjs"},{"name":"Redis","_id":"ck7o5o59s000hw8mxq13gjiv6"},{"name":"SpringBoot","_id":"ck7o5o59u000mw8mxzp01jhew"},{"name":"Kafka","_id":"ck7o5o59z000ww8mxlz60hizh"},{"name":"Java","_id":"ck7o5o5a00010w8mxajkfmssk"},{"name":"jvm","_id":"ck7o5o5a10015w8mxwjbdtgyc"},{"name":"图片","_id":"ck7o5o5a20018w8mx3cvagv7s"},{"name":"搞笑","_id":"ck7o5o5a3001dw8mxxovhqnu1"},{"name":"Linux","_id":"ck7o5o5a4001gw8mxbvp94lrh"},{"name":"Docker","_id":"ck7o5o5a5001lw8mxov950hv4"},{"name":"jsonUtil","_id":"ck7o5o5a6001ow8mxnbrf8lll"},{"name":"工具类","_id":"ck7o5o5a7001sw8mx8g7zrbmz"},{"name":"签名","_id":"ck7o5o5a8001uw8mxcjjjzt7y"},{"name":"视频","_id":"ck7o5o5aa001zw8mx6p2zowr4"},{"name":"公益广告","_id":"ck7o5o5ab0025w8mxtekznazs"},{"name":"抽奖","_id":"ck7o5o5ae002ew8mx2ay6jmm3"},{"name":"缓存","_id":"ck7o5o5am002kw8mxw3vbtdjr"},{"name":"分布式","_id":"ck7o5o5ap002qw8mxokm2236j"},{"name":"Spring Cloud","_id":"ck7o5o5ar002vw8mxk7ma0mkw"},{"name":"HttpUtil","_id":"ck7o5o5as002xw8mxjwpqqtw5"},{"name":"Maven","_id":"ck7o5o5b30037w8mx1vmazfem"},{"name":"线程","_id":"ck7o5o5b8003gw8mxkxd9po48"},{"name":"Http","_id":"ck7o5o5bi0040w8mxofqvgtng"},{"name":"SpringCloud","_id":"ck7o5o5bl0045w8mx2ym9cqrg"}]}}